{:paths ["scripts"]
 :tasks {:requires ([tasks :as t])

         ;;N.B. The use of {:continue true} below in some of the watch: tasks below is to ensure that
         ;;     subsequent tasks in 'local' and 'examples' are executed when I CTRL-C to cancel the watch
         ;;     Specifically, the tidyup task to shutdown supabase
         ;;     Although this does appear to let the task get called, it fails with the following error:
         ;;     error entering raw mode: input/output error

         ;; local
         ;; {:doc "Run app, portfolio and test watches, starting and stopping supabase"
         ;;  :depends [sb:start sb:edn watch:local sb:stop]}

         ;; examples
         ;; {:doc "Run examples, portfolio and test watches, starting and stopping supabase"
         ;;  :depends [sb:start sb:edn watch:re-frame sb:stop]}

         watch:local
         {:doc  "Run app (port 8080) with local dockerised supabase (test and portfolio builds enabled)."
          :task (run '-local {:parallel true})}
         -local {:depends [watch:css -dev:local]}
         -dev:local {:task (shell
                            {:continue true}
                            "shadow-cljs -A:dev watch app test portfolio --config-merge ./env-local.edn --config-merge ./ui-themes.edn")}

         watch:cloud
         {:doc  "Run app (port 8080) with cloud-hosted supabase (test and portfolio builds enabled)."
          :task (run '-cloud {:parallel true})}
         -cloud {:depends [watch:css -dev:cloud]}
         -dev:cloud {:task (shell "shadow-cljs -A:dev watch app test portfolio --config-merge ./ui-themes.edn")}

         watch:replicant
         {:doc  "Run replicant (port 8084) with local dockerised supabase (test and portfolio builds enabled)."
          :task (run '-replicant {:parallel true})}
         -replicant {:depends [watch:css -replicant:local]}
         -replicant:local {:task (shell
                                  {:continue true}
                                  "shadow-cljs -A:dev watch replicant test portfolio --config-merge ./env-local.edn --config-merge ./ui-themes.edn")}

         watch:re-frame
         {:doc  "Run examples (port 8083) with local dockerised supabase (test and portfolio builds enabled)."
          :task (run '-re-frame {:parallel true})}
         -re-frame {:depends [watch:css -re-frame:local]}
         -re-frame:local {:task (shell
                                 {:continue true}
                                 "shadow-cljs -A:dev watch re-frame test portfolio --config-merge ./env-local.edn --config-merge ./ui-themes.edn")}

         watch:css
         {:doc "Tailwind watch task"
          :task (shell {:continue true}
                       "npx @tailwindcss/cli -i src/css/tailwind.css -o public/css/tailwind.css -w")}

         ;;This started causing a node memory allocation error after the update to tailwind v4.0.x
         watch:postcss
         {:doc "Tailwind watch task"
          :task (shell {:continue true :extra-env {"TAILWIND_MODE" "watch"}}
                       "postcss src/css/tailwind.css -o public/css/tailwind.css --verbose -w")}

         watch:portfolio
         {:doc  "Run portfolio component-driven test UI on http://localhost:8082"
          :task (run '-portfolio {:parallel true})}
         -portfolio {:depends [watch:css -portfolio-only]}
         -portfolio-only {:task (shell "shadow-cljs -A:dev watch portfolio --config-merge ./ui-themes.edn")}

         watch:test
         {:doc "Run frontend unit test runner on http://localhost:8081"
          :task (shell "shadow-cljs -A:dev release app --config-merge ./ui-themes.edn")}

         build:app
         {:doc "Build release version of the app."
          :task (shell "shadow-cljs -A:dev release app --config-merge ./ui-themes.edn")}

         build:replicant
         {:doc "Build release version of replicant demo app."
          :task (shell "shadow-cljs -A:dev release replicant --config-merge ./ui-themes.edn")}

         build:re-frame
         {:doc "Build release version of re-frame demo app."
          :task (shell "shadow-cljs -A:dev release replicant --config-merge ./ui-themes.edn")}

         sb:start
         {:task (shell "supabase start")}

         sb:stop
         {:task (shell "supabase stop")}

         sb:edn
         {:task t/extract-supabase-env!
          :doc "Extract environment for local dockerised supabase to edn."}

         tailwind:edn
         {:task t/extract-daisyui-themes!
          :doc "Extract list of DaisyUI themes included via tailwind config for use in UI theme selector."}}}
