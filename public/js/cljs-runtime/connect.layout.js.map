{"version":3,"sources":["connect/layout.cljs"],"mappings":"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","names":["props__46991__auto__","props98188","uix.core/glue-args","vec__98189","map__98192","cljs.core.nth","cljs.core/--destructure-map","cljs.core.get","f__46992__auto__","js/goog.DEBUG","temp__5823__auto__","connect.layout/app-layout","f__46909__auto__","*current-component*-orig-val__98198","uix.core/*current-component*","*current-component*-temp-val__98199","cljs.core/map?","js/Error","js/Object.defineProperty","obj98204","js/window","js/window.uix","js/window.uix.dev","sig__46918__auto__","js/window.uix.dev.signature!","js/window.uix.dev.register!","routes","view","on-sign-out","uix.compiler.alpha/component-element","stack.uix.appbar/appbar","stack.uix.menus/theme-menu","stack.utils.themes/all","stack.utils.themes/default","stack.utils.themes/select","stack.uix.menus/language-menu","stack.utils.i18n/supported-languages","stack.utils.i18n/default-language-code","__run-fn-form","__kind","__ns","__id","__level","sf","taoensso.telemere.impl/*rt-sig-filter*","__inst","js/Date","__thread","__root0","taoensso.telemere.impl/*trace-root*","__otel-context1","__uid","__root1","__run-result","signal__42410__auto__","cljs.core/Delay","signal__42401__auto__","taoensso.telemere.impl/Signal","taoensso.telemere/*ctx*","taoensso.telemere.impl/*trace-parent*","temp__5821__auto__","taoensso.telemere/*middleware*","sig-middleware__42402__auto__","taoensso.telemere.impl/dispatch-signal!","taoensso.telemere.impl/WrappedSignal","stack.uix.menus/settings-menu","stack.uix.menus/profile-menu","stack.services.auth/sign-out","uix.compiler.aot/>el","stack.uix.statusbar/statusbar"],"sourcesContent":["(ns connect.layout\n  (:require\n   [taoensso.telemere :as t]\n\n   [uix.core :as uix :refer [defui $]]\n\n   [stack.utils.themes :as themes]\n   [stack.services.auth :as auth]\n   [stack.uix.menus :as menus]\n\n   [stack.utils.i18n :as i18n]\n   [stack.uix.appbar :refer [appbar]]\n   [stack.uix.statusbar :refer [statusbar]]))\n\n\n\n;;TODO: Wire in re-frame etc. to menus\n(defui app-layout [{:keys [routes view on-sign-out]}]\n  [($ appbar {:title \"Lenire Connect\"\n              :routes routes\n              :menus [($ menus/theme-menu {:themes themes/all :selected themes/default\n                                           :on-change themes/select})\n                      ($ menus/language-menu {:languages i18n/supported-languages\n                                              :selected i18n/default-language-code\n                                              ;;TODO: This should dispatch instead, and logging should happen in event handler\n                                              :on-change #(t/log! :info%)})\n                      ($ menus/settings-menu)\n                      ($ menus/profile-menu {:on-sign-out auth/sign-out})]})\n   ($ :main.flex-grow ($ view))\n   ($ statusbar {:copyright {:year 2024 :holder \"Neuromod Devices Ltd.\"}})])\n"]}