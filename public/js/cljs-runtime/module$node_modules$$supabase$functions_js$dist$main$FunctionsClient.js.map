{
"version":3,
"file":"module$node_modules$$supabase$functions_js$dist$main$FunctionsClient.js",
"lineCount":72,
"mappings":"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",
"sources":["node_modules/@supabase/functions-js/dist/main/FunctionsClient.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$supabase$functions_js$dist$main$FunctionsClient\"] = function(global,require,module,exports) {\n\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FunctionsClient = void 0;\nconst helper_1 = require(\"./helper\");\nconst types_1 = require(\"./types\");\nclass FunctionsClient {\n    constructor(url, { headers = {}, customFetch, region = types_1.FunctionRegion.Any, } = {}) {\n        this.url = url;\n        this.headers = headers;\n        this.region = region;\n        this.fetch = (0, helper_1.resolveFetch)(customFetch);\n    }\n    /**\n     * Updates the authorization header\n     * @param token - the new jwt token sent in the authorisation header\n     */\n    setAuth(token) {\n        this.headers.Authorization = `Bearer ${token}`;\n    }\n    /**\n     * Invokes a function\n     * @param functionName - The name of the Function to invoke.\n     * @param options - Options for invoking the Function.\n     */\n    invoke(functionName, options = {}) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { headers, method, body: functionArgs } = options;\n                let _headers = {};\n                let { region } = options;\n                if (!region) {\n                    region = this.region;\n                }\n                if (region && region !== 'any') {\n                    _headers['x-region'] = region;\n                }\n                let body;\n                if (functionArgs &&\n                    ((headers && !Object.prototype.hasOwnProperty.call(headers, 'Content-Type')) || !headers)) {\n                    if ((typeof Blob !== 'undefined' && functionArgs instanceof Blob) ||\n                        functionArgs instanceof ArrayBuffer) {\n                        // will work for File as File inherits Blob\n                        // also works for ArrayBuffer as it is the same underlying structure as a Blob\n                        _headers['Content-Type'] = 'application/octet-stream';\n                        body = functionArgs;\n                    }\n                    else if (typeof functionArgs === 'string') {\n                        // plain string\n                        _headers['Content-Type'] = 'text/plain';\n                        body = functionArgs;\n                    }\n                    else if (typeof FormData !== 'undefined' && functionArgs instanceof FormData) {\n                        // don't set content-type headers\n                        // Request will automatically add the right boundary value\n                        body = functionArgs;\n                    }\n                    else {\n                        // default, assume this is JSON\n                        _headers['Content-Type'] = 'application/json';\n                        body = JSON.stringify(functionArgs);\n                    }\n                }\n                const response = yield this.fetch(`${this.url}/${functionName}`, {\n                    method: method || 'POST',\n                    // headers priority is (high to low):\n                    // 1. invoke-level headers\n                    // 2. client-level headers\n                    // 3. default Content-Type header\n                    headers: Object.assign(Object.assign(Object.assign({}, _headers), this.headers), headers),\n                    body,\n                }).catch((fetchError) => {\n                    throw new types_1.FunctionsFetchError(fetchError);\n                });\n                const isRelayError = response.headers.get('x-relay-error');\n                if (isRelayError && isRelayError === 'true') {\n                    throw new types_1.FunctionsRelayError(response);\n                }\n                if (!response.ok) {\n                    throw new types_1.FunctionsHttpError(response);\n                }\n                let responseType = ((_a = response.headers.get('Content-Type')) !== null && _a !== void 0 ? _a : 'text/plain').split(';')[0].trim();\n                let data;\n                if (responseType === 'application/json') {\n                    data = yield response.json();\n                }\n                else if (responseType === 'application/octet-stream') {\n                    data = yield response.blob();\n                }\n                else if (responseType === 'text/event-stream') {\n                    data = response;\n                }\n                else if (responseType === 'multipart/form-data') {\n                    data = yield response.formData();\n                }\n                else {\n                    // default to text\n                    data = yield response.text();\n                }\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n}\nexports.FunctionsClient = FunctionsClient;\n//# sourceMappingURL=FunctionsClient.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Object","defineProperty","FunctionsClient","helper_1","types_1","constructor","url","headers","customFetch","region","FunctionRegion","Any","fetch","resolveFetch","setAuth","token","Authorization","invoke","functionName","options","_a","method","functionArgs","_headers","body","prototype","hasOwnProperty","call","Blob","ArrayBuffer","FormData","JSON","stringify","response","assign","catch","fetchError","FunctionsFetchError","isRelayError","get","FunctionsRelayError","ok","FunctionsHttpError","responseType","split","trim","data","json","blob","formData","text","error"]
}
