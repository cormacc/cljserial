{"version":3,"sources":["cljserial/utils/webserial.cljs"],"mappings":"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","names":["cljserial.utils.webserial/BAUD-RATES","cljserial.utils.webserial/DataBits","cljserial.utils.webserial/StopBits","cljserial.utils.webserial/Parity","cljserial.utils.webserial/FlowControl","cljserial.utils.webserial/VendorId","cljserial.utils.webserial/PortFilter","cljserial.utils.webserial/SerialOptions","cljserial.utils.webserial/DEFAULTS","malli.core.decode","malli.transform/default-value-transformer","cljserial.utils.webserial/PORT-FILTERS","cljserial.utils.webserial/describe-port-filter","pf","cuerdas.core.format","cljserial.utils.webserial/FTDI_PORT_FILTER","cljserial.utils.webserial/BAUD_RATE_DEFAULT","cljserial.utils.webserial/FLOW_CONTROL_DEFAULT","cljserial.utils.webserial/get-webserial-entrypoint","js/navigator","cljserial.utils.webserial/is-supported?","cljserial.utils.webserial/request-port+","vendor-id","js/goog.debug.LOGGING_ENABLED","lambdaisland.glogi.log","cljs.core/identity","filters","and__5043__auto__","cljs.core/clj->js","cljserial.utils.webserial/describe-port","port","port-info","var_args","args__5775__auto__","len__5769__auto__","i__5770__auto__","argseq__5776__auto__","cljs.core/IndexedSeq","cljserial.utils.webserial/await-port","p__55307","map__55308","cljs.core/--destructure-map","cljs.core.get","seq55306","self__5755__auto__","cljs.core/seq","on-success","on-failure","c__33560__auto__","cljs.core.async.chan","cljs.core.async.impl.dispatch/run","f__33561__auto__","switch__33463__auto__","state_55325","state_val_55326","inst_55316","promesa.protocols/-promise","inst_55317","___43690__auto__","promesa.protocols/-mcat","___43658__auto__","inst_55318","cljs.core.async.impl.ioc-helpers/return-chan","statearr-55346","state-machine__33464__auto__","ret-value__33465__auto__","result__33466__auto__","cljs.core/keyword-identical?","ex__33467__auto__","e55349","statearr-55351","statearr-55353","cljs.core/first","state__33562__auto__","statearr-55355","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","cljserial.utils.webserial/open-port+","e55358","js/Error","e","cljserial.utils.webserial/open-port","p__55365","map__55367","seq55360","G__55361","cljs.core/next","self__5754__auto__","options","state_55396","state_val_55397","statearr-55411","statearr-55412","inst_55378","inst_55379","inst_55380","cljs.core/PersistentHashMap","inst_55381","inst_55383","statearr-55420","statearr-55422","inst_55388","inst_55389","inst_55390","inst_55391","inst_55393","inst_55394","statearr-55434","statearr-55436","e55442","statearr-55443","statearr-55446","statearr-55452","promesa.core.then","promesa.core.catch$","cljserial.utils.webserial/forget-port","p__55462","map__55463","seq55455","G__55456","state_55471","state_val_55472","inst_55464","inst_55465","inst_55468","inst_55469","statearr-55486","e55491","statearr-55492","statearr-55493","statearr-55494","p__55502","map__55503","cljserial.utils.webserial/go-read-as","byte-stream-transformer","handler","state_55620","state_val_55621","inst_55517","inst_55509","inst_55532","inst_55534","_","temp__5804__auto__","e__32698__auto__","statearr-55641","statearr-55642","inst_55582","statearr-55643","statearr-55644","inst_55599","statearr-55652","inst_55507","inst_55508","statearr-55657","statearr-55658","inst_55594","inst_55595","inst_55596","cljs.core.async.interop/p->c","statearr-55659","cljs.core.async.impl.ioc-helpers/take!","statearr-55660","cljs.core/rest","statearr-55661","statearr-55662","statearr-55664","inst_55567","statearr-55666","inst_55615","statearr-55668","statearr-55670","inst_55612","statearr-55672","statearr-55673","inst_55564","cljs.core/ExceptionInfo","statearr-55674","statearr-55677","statearr-55678","inst_55586","inst_55587","inst_55589","inst_55590","inst_55591","statearr-55683","statearr-55684","inst_55598","inst_55609","statearr-55686","statearr-55688","inst_55607","statearr-55690","statearr-55691","statearr-55695","statearr-55697","statearr-55699","inst_55577","statearr-55704","inst_55618","statearr-55713","ex55703","statearr-55715","statearr-55719","statearr-55722","cljs.core/cons","statearr-55724","inst_55559","inst_55560","statearr-55725","inst_55580","statearr-55729","statearr-55732","inst_55546","statearr-55733","inst_55537","inst_55539","inst_55540","inst_55541","inst_55542","inst_55543","statearr-55739","inst_55525","inst_55526","inst_55527","inst_55528","inst_55529","statearr-55745","inst_55570","cljs.core/ex-data","inst_55571","inst_55572","cljs.core._EQ_","statearr-55747","inst_55601","inst_55602","inst_55603","statearr-55752","inst_55575","statearr-55754","statearr-55755","statearr-55759","statearr-55762","statearr-55764","statearr-55765","statearr-55766","statearr-55767","statearr-55770","e55772","statearr-55773","statearr-55774","statearr-55778","cljs.core.js__GT_clj","cljserial.utils.webserial/as-byte-readable","readable","cljserial.utils.webserial/as-text-readable","js/TextDecoderStream","cljserial.utils.webserial/go-read-text","cljserial.utils.webserial/go-read-bytes","cljserial.utils.webserial/get-read-channel","byte-channel","byte-handler","new-bytes","cljs.core.async/>!","cljserial.utils.webserial/write","command","writer","encoder","js/TextEncoder"],"sourcesContent":["(ns cljserial.utils.webserial\n  (:require\n   [cljs.core.async :as async]\n   [cljs.core.async.interop :refer-macros [<p!]]\n   ;;N.B. shadow-cljs has a js-await macro with equivalent sugar to promesa...\n   [promesa.core :as p]\n   [lambdaisland.glogi :as log]\n   [cuerdas.core :as str]\n   [malli.core :as m]\n   ;; [malli.generator :as mg]\n   [malli.transform :as mt]\n   ))\n\n\n;; Some reasonable standard baud rates for FTDI USB serial devices\n(def ^:const BAUD-RATES [4000000 2000000 1000000 512000 256000 128000 115200 57600 38400 19200 9600])\n\n;; Defined by WebSerial API\n;; See https://wicg.github.io/serial/#ref-for-dom-serialoptions-2\n\n(def DataBits [:int {:min 7, :max 8}])\n(def StopBits [:int {:min 0, :max 1}])\n(def Parity [:enum :none :even :odd])\n(def FlowControl [:enum :none :hardware])\n\n\n;; Port filter for WebSerial requestPort method\n;; API allows narrowing by product ID also, but vendor ID is as far as we want to go just now\n(def VendorId [:int {:min 0x0000, :max 0xFFFF}])\n\n(def PortFilter [:map\n                 :name [:string {:min 1 :default \"None\"}]\n                 :usbVendorId {:default 0}])\n\n(def SerialOptions [:map\n                    [:vendorIdFilter {:default 0} VendorId]\n                    [:baudRate {:default 115200}[:int {:min 1, :max 10000000}]]\n                    [:dataBits {:default 8} DataBits]\n                    [:stopBits {:default 1} StopBits]\n                    [:parity {:default :none} Parity]\n                    ;;I have no idea what the max is here - though it's an unsigned long...\n                    [:bufferSize {:default 255} [:int {:min 1, :max (* 1024 1024)}]]\n                    [:flowControl {:default :none} FlowControl]])\n\n(def ^:const DEFAULTS (m/decode SerialOptions {} mt/default-value-transformer))\n\n(def ^:const PORT-FILTERS [{:name \"None\" :usbVendorId 0x0000}\n                           {:name \"FTDI\" :usbVendorId 0x0403}])\n\n(defn describe-port-filter [pf]\n  ;; {:pre [(m/validate PortFilter pf)]}\n  (str/format \"%s (%s)\" (:name pf) (:usbVendorId pf)))\n\n;; Hard coded filter for FTDI devices for now, as that's what I'm using\n;; TODO: Generalise this and replace with a settings component of some description...\n(def ^:const FTDI_PORT_FILTER {:usbVendorId 0x0403 :name \"FTDI\"})\n\n(def ^:const BAUD_RATE_DEFAULT 115200)\n(def ^:const FLOW_CONTROL_DEFAULT \"hardware\")\n\n(defn get-webserial-entrypoint []\n  (.-serial js/navigator))\n\n(defn is-supported? [] (not (nil? (get-webserial-entrypoint))))\n\n(defn- request-port+ [vendor-id]\n  (log/info :port/request \"Requesting port\"\n            :port/filter vendor-id)\n  (let [filters (if (and vendor-id (> vendor-id 0))\n                  [{:usbVendorId vendor-id}]\n                  [])]\n    (.requestPort (get-webserial-entrypoint) (clj->js {:filters filters}))))\n\n(defn describe-port [port]\n  (let [port-info (.getInfo ^js port)]\n    ;; ClojureScript uselessly doesn't have built in hex formatting\n    (str/format \"%s::%s\" (.-usbVendorId port-info) (.-usbProductId port-info))))\n\n(defn await-port [& {:keys [vendor-id on-success on-failure] :or {vendor-id nil}}]\n  (async/go (p/let [port (request-port+ vendor-id)]\n             (if port (on-success port) (on-failure))\n             (log/info :port/acquired (str \"Got port \" (describe-port port))))))\n\n(defn- open-port+ [port]\n  (log/info :port/open-attempt (describe-port port))\n  (try\n    ;; This returns a promise...\n    (.open port (clj->js {:baudRate BAUD_RATE_DEFAULT\n                          :flowControl FLOW_CONTROL_DEFAULT\n                          :bufferSize 4096}))\n    (catch js/Error e\n      (log/error :port/open-failure e)\n      ;; InvalidStateError = port already open\n      ;; NetworkError = failed to open port\n      nil)))\n\n(defn open-port [port & {:keys [options on-success on-failure] :or {options DEFAULTS}}]\n  (async/go (log/info :port/open-serial-options options)\n           (-> (open-port+ port)\n               (p/then (fn []\n                         (log/info :port/open-success port)\n                         (on-success port)))\n               (p/catch (fn [e]\n                          (log/error :port/open-failure e)\n                          ;; InvalidStateError = port already open\n                          ;; NetworkError = failed to open port\n                          (on-failure port)\n                          nil)))))\n\n(defn forget-port\n  \"Close and 'forget' the port (i.e. relinquish the access permissions).\n  See https://developer.mozilla.org/en-US/docs/Web/API/SerialPort/forget\"\n  [port & {:keys [on-success on-failure]}]\n  (async/go (-> (.forget ^js port)\n               ;; The promise resolves to nil\n               (p/then on-success)\n               (p/catch (fn [e]\n                          (log/error :port/forget-failure e)\n                          (on-failure e))))))\n\n;;TODO Add flag for graceful exit?\n;;     Currently when we forget/disconnect, there's an error in the console\n;;     Harmless, but noisy/inelegant\n(defn go-read-as [{:keys [port byte-stream-transformer handler]}]\n  (async/go\n    (let [reader (-> (.-readable port)\n                     (byte-stream-transformer)\n                     (.getReader))]\n      (try\n        (loop [response (<p! (.read reader))]\n          (when response\n              ;; N.B. converted javascript hashmap keys are strings rather than keywords...\n              ;; N.B. 'done' flag is a mechanism to allow aborting a read via reader.cancel()\n              ;;      ... though we're not respecting that here (yet)\n            (let [{:strs [value _done]} (js->clj response)\n                    ;;if we want to work with binary data later, this will convert bytearr to string\n                    ;;bytes-as-str (apply str (map char (vec value)))\n                  ]\n              (handler value)))\n          (recur (<p! (.read reader))))\n        (catch js/Error e\n          (log/error :port/read-failure e))\n        (finally\n          (log/debug :port/release-read-lock port)\n          (.releaseLock reader))))))\n\n\n(defn as-byte-readable [readable]\n  ;;This one's an NOP\n  readable)\n\n(defn as-text-readable [readable]\n  (.pipeThrough readable (js/TextDecoderStream.)))\n\n(defn go-read-text [port handler]\n  (go-read-as {:port port\n               :handler handler\n               :byte-stream-transformer as-text-readable}))\n\n(defn go-read-bytes [port handler]\n  (go-read-as {:port port\n               :handler handler\n               :byte-stream-transformer as-byte-readable}))\n\n(defn get-read-channel [port]\n  (let [byte-channel (async/chan)\n        byte-handler (fn [new-bytes] (async/>! byte-channel new-bytes))]\n    (go-read-bytes port byte-handler)\n    ; return the channel\n    byte-channel))\n\n(defn write [port command]\n  (let [writer (.getWriter (.-writable port))\n        encoder (js/TextEncoder.)]\n    (log/debug :port/tx-line command)\n    (.write writer (.encode encoder command))\n    (.releaseLock writer)))\n"]}