{"version":3,"sources":["day8/re_frame_10x/tools/highlight_hiccup.cljs"],"mappings":"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","names":["day8.re-frame-10x.tools.highlight-hiccup/clj-core-macros","p__83845","map__83846","cljs.core/--destructure-map","cljs.core.get","day8.re-frame-10x.tools.highlight-hiccup/selected-style","position","cljs.core/deref","day8.re_frame_10x.inlined_deps.re_frame.v1v3v0.re_frame.core.subscribe","day8.re-frame-10x.styles/clj-highlighted","js/day8","js/day8.re-frame-10x","js/day8.re-frame-10x.tools","js/day8.re-frame-10x.tools.highlight-hiccup","js/day8.re-frame-10x.tools.highlight-hiccup.form","method-table__5599__auto__","cljs.core.atom","prefer-table__5600__auto__","method-cache__5601__auto__","cached-hierarchy__5602__auto__","hierarchy__5603__auto__","fexpr__83847","cljs.core/MultiFn","cljs.core.symbol","day8.re-frame-10x.tools.highlight-hiccup/form","cljs.core/type","p__83858","map__83859","string-value","node","js/day8.re-frame-10x.tools.highlight-hiccup.token-form","fexpr__83895","day8.re-frame-10x.tools.highlight-hiccup/token-form","cljs.core.comp","p__83897","map__83898","day8.re-frame-10x.styles/clj-boolean","p__83900","map__83901","day8.re-frame-10x.styles/clj-number","p__83904","map__83905","day8.re-frame-10x.styles/clj-nil","p__83909","map__83910","rewrite-clj.node.token/TokenNode","rewrite-clj.node.whitespace/CommaNode","_","js/day8.re-frame-10x.tools.highlight-hiccup.seq-form","fexpr__83918","day8.re-frame-10x.tools.highlight-hiccup/seq-form","p__83924","map__83925","children","cljs.core.into","day8.re-frame-10x.styles/clj-seq","cljs.core.concat","p__83930","map__83931","p__83934","map__83935","p__83945","map__83946","rewrite-clj.node.seq/SeqNode","p__83950","map__83951","rewrite-clj.node.token/SymbolNode","value","day8.re-frame-10x.styles/clj-core-macro","day8.re-frame-10x.styles/clj-symbol","p__83955","map__83957","rewrite-clj.node.whitespace/WhitespaceNode","whitespace","rewrite-clj.node.whitespace/NewlineNode","p__83961","map__83962","rewrite-clj.node.keyword/KeywordNode","k","ns->alias","day8.re-frame-10x.styles/clj-keyword","day8.re-frame-10x.tools.datafy/alias","p__83966","map__83967","rewrite-clj.node.stringz/StringNode","lines","day8.re-frame-10x.styles/clj-string","cljs.core.apply","cljs.core/str","day8.re-frame-10x.tools.highlight-hiccup/str->hiccup","s","positional-ast","rewrite_clj.zip.of_string","p1__83969#","rewrite_clj.zip.postwalk","rewrite_clj.zip.edit_STAR_","cljs.core/assoc","rewrite-clj.zip/position","rewrite-clj.zip/node","p1__83970#","clojure.walk/postwalk","G__83975","cljs.core/record?"],"sourcesContent":[";; TODO: make this a standalone library\n\n(ns day8.re-frame-10x.tools.highlight-hiccup\n  (:require [clojure.walk :as walk]\n            [rewrite-clj.zip :as rz]\n            [rewrite-clj.node.token :refer [SymbolNode TokenNode]]\n            [rewrite-clj.node.whitespace :refer [WhitespaceNode NewlineNode CommaNode]]\n            [rewrite-clj.node.keyword :refer [KeywordNode]]\n            [rewrite-clj.node.stringz :refer [StringNode]]\n            [rewrite-clj.node.seq :refer [SeqNode]]\n            [day8.re-frame-10x.styles :as styles]\n            [day8.re-frame-10x.tools.datafy :as tools.datafy]\n            [day8.re-frame-10x.inlined-deps.re-frame.v1v3v0.re-frame.core :as rf]\n            [day8.re-frame-10x.panels.event.subs :as event.subs]\n            [day8.re-frame-10x.panels.settings.subs :as settings.subs]))\n\n(def clj-core-macros #{'and 'binding 'case 'catch 'comment 'cond 'cond-> 'cond->> 'condp 'def\n                       'defmacro 'defn 'defn- 'defmulti 'defmethod 'defonce 'defprotocol 'deftype\n                       'do 'dotimes 'doseq 'dosync 'fn 'for 'future 'if 'if-let 'if-not 'import 'let\n                       'letfn 'locking 'loop 'ns 'or 'proxy 'quote 'recur 'set! 'struct-map 'sync 'throw\n                       'try 'when 'when-first 'when-let 'when-not 'when-some 'while})\n\n(defn selected-style [{:keys [position]}]\n  (when @(rf/subscribe [::event.subs/highlighted? position])\n    (styles/clj-highlighted)))\n\n(defmulti form type)\n\n(defmethod form :default [{:keys [string-value] :as node}]\n  [:span.clj-unknown {:data-clj-node (str (type node))}\n   string-value])\n\n(defmulti token-form (comp type :value))\n\n(defmethod token-form (type true) [{:keys [string-value]}]\n  [:code.clj__boolean {:class (styles/clj-boolean)}\n   string-value])\n\n(defmethod token-form (type 0) [{:keys [string-value]}]\n  [:code.clj__number {:class (styles/clj-number)}\n   string-value])\n\n(defmethod token-form (type nil) [{:keys [string-value]}]\n  [:code.clj__nil {:class (styles/clj-nil)}\n   string-value])\n\n(defmethod token-form :default [{:keys [string-value]}]\n  [:span.clj__token string-value])\n\n(defmethod form TokenNode [node]\n  [token-form node])\n\n(defmethod form CommaNode [_]\n  [:span.clj__comma \",\"])\n\n(defmulti seq-form :tag)\n\n(defmethod seq-form :default [_]\n  [:code.clj__unknown])\n\n(defmethod seq-form :list [{:keys [children] :as node}]\n  (into [:code.seq {:class [(styles/clj-seq)\n                            (selected-style node)]}]\n        (concat [\"(\"] children [\")\"])))\n\n(defmethod seq-form :vector [{:keys [children] :as node}]\n  (into [:code.clj__seq {:class [(selected-style node)]}]\n        (concat [\"[\"] children [\"]\"])))\n\n(defmethod seq-form :map [{:keys [children] :as node}]\n  (into [:code.clj__map {:class [(selected-style node)]}]\n        (concat [\"{\"] children [\"}\"])))\n\n(defmethod seq-form :set [{:keys [children] :as node}]\n  (into [:code.seq {:class [(styles/clj-seq)\n                            (selected-style node)]}]\n        (concat [\"#{\"] children [\"}\"])))\n\n(defmethod form SeqNode [node]\n  (seq-form node))\n\n(defmethod form SymbolNode [{:keys [value string-value] :as node}]\n  [:code.clj__symbol {:class [(if (clj-core-macros value)\n                                (styles/clj-core-macro)\n                                (styles/clj-symbol))\n                              (selected-style node)]}\n   string-value])\n\n(defmethod form WhitespaceNode [{:keys [whitespace]}]\n  [:code.clj__whitespace\n   whitespace])\n\n(defmethod form NewlineNode [_]\n  [:br])\n\n(defmethod form KeywordNode [{:keys [k] :as node}]\n  (let [ns->alias (rf/subscribe [::settings.subs/ns->alias])]\n    [:code.clj__keyword {:class [(styles/clj-keyword)\n                                 (selected-style node)]}\n     (str (tools.datafy/alias k @ns->alias))]))\n\n(defmethod form StringNode [{:keys [lines]}]\n  [:code.clj__string {:class (styles/clj-string)}\n   \\\" (apply str lines) \\\"])\n\n(defn str->hiccup [s]\n  (let [positional-ast\n        (-> s\n            (rz/of-string {:track-position? true})\n            (rz/postwalk #(rz/edit* % assoc\n                                    :position (rz/position %)))\n            rz/node)]\n    (walk/postwalk #(cond-> % (record? %) form) positional-ast)))\n"],"x_google_ignoreList":[0]}