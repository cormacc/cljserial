{"version":3,"sources":["stack/services/auth.cljs"],"mappings":"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","names":["stack.services.auth/Session","stack.services.auth/initial-state","G__97817","G__97818","stack.utils.dbfx/reg-sub","db","_query_vector","cljs.core.get_in","G__97831","G__97832","G__97833","stack.utils.dbfx/reg-event-fx","G__97834","stack.utils.dbfx/path","p__97838","p__97839","map__97840","cljs.core/--destructure-map","cljs.core.get","vec__97841","cljs.core.nth","_eid","session","stack.services.auth/init","enable","__run-fn-form","__kind","__ns","__id","__level","sf","taoensso.telemere.impl/*rt-sig-filter*","__inst","js/Date","__thread","__root0","taoensso.telemere.impl/*trace-root*","__otel-context1","__uid","__root1","__run-result","signal__42410__auto__","cljs.core/Delay","signal__42401__auto__","taoensso.telemere.impl/Signal","taoensso.telemere/*ctx*","taoensso.telemere.impl/*trace-parent*","temp__5821__auto__","taoensso.telemere/*middleware*","sig-middleware__42402__auto__","taoensso.telemere.impl/dispatch-signal!","taoensso.telemere.impl/WrappedSignal","p1__97850#","stack.utils.supabase/register-session-callback","G__97872","stack.utils.dbfx/dispatch","G__97875","stack.services.auth/sign-out","stack.utils.supabase/sign-out","stack.services.auth/ui-component","stack.utils.supabase/auth-component","props__46991__auto__","props97916","uix.core/glue-args","vec__97969","map__97972","f__46992__auto__","js/goog.DEBUG","temp__5823__auto__","stack.services.auth/wrap-layout","f__46909__auto__","*current-component*-orig-val__97991","uix.core/*current-component*","*current-component*-temp-val__97992","cljs.core/map?","js/Error","js/Object.defineProperty","obj98007","js/window","js/window.uix","js/window.uix.dev","sig__46918__auto__","js/window.uix.dev.signature!","js/window.uix.dev.register!","layout","G__97982","stack.utils.dbfx/use-sub","uix.compiler.alpha/component-element"],"sourcesContent":[" (ns stack.services.auth\n  (:require\n   [taoensso.telemere :as t]\n   [uix.core :refer [defui $]]\n   [stack.utils.dbfx :as dbfx]\n   [stack.utils.supabase :as supabase]))\n\n\n;;---------------------------------------------------------------------------------------\n;; Schema\n\n; Placeholder for now -- elaborate at some point...\n(def Session [:maybe :map])\n\n(def initial-state nil)\n\n;;---------------------------------------------------------------------------------------\n;; Events etc.\n\n; Subscribe to this for auth changes\n(dbfx/reg-sub\n :auth-session\n (fn [db _query_vector]\n   (get-in db [:session])))\n\n; Used to both set session token on sign-in and nil it on sign-out\n(dbfx/reg-event-fx\n :auth-set-session\n [(dbfx/path [:session])]\n (fn [{:keys [db]} [_eid session]]\n   {:db session\n    ;;TODO: Include username as event arg?\n    :fx [[:dispatch [(if session\n                       :auth-sign-in\n                       :auth-sign-out)]]]}))\n\n(defn init [enable]\n  (t/log! :info enable)\n  (if enable\n    (supabase/register-session-callback #(dbfx/dispatch [:auth-set-session %]))\n    ; Set to any non-nil value to be effectively authenticated\n    ; .... todo spoof some data to render in the UI\n    (dbfx/dispatch [:auth-set-session {:auth-enabled false}])))\n\n(defn sign-out []\n  (t/log! :info \"initiated\")\n  (supabase/sign-out))\n\n\n(def ui-component supabase/auth-component)\n\n(defui wrap-layout [{:keys [layout]}]\n  (let [session (dbfx/use-sub [:auth-session])]\n    (if session\n      ($ layout)\n      ($ ui-component))))\n"]}