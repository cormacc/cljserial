{"version":3,"sources":["cljserial/components/cd_info.cljs"],"mappings":";AAWA,AAAA,oCAAA,4CAAAA,hFAAOS;AAAP,AAAA,IAAAR,2BAAA,AAAAC,mBAAAF;IAAAG,aAAA,CAAAF;cAAA,AAAAG,4CAAAD,WAAA,IAAA,rEAAakB;IAAbhB,mBAAA;AAAA,AAAA,oBACSiB;AADT;AAAA,AAAA,MAAA,KAAAhB,MAAA;;;AAAA,oBACoBiB;AADpB;AAAA,AAAA,MAAA,KAAAjB,MAAA;;;AAAA,oBACmCe;AADnC;AAAA,AAAA,MAAA,KAAAf,MAAA;;;AAAA,GAAAC;AAAA,AAAA,IAAAC,2BAAA,AAAAC;AAAA,AAAA,oBAAAD;AAAA,AAAA,IAAAE,yBAAAF;AAAA,AAAA,CAAAE,uDAAAA,yDAAAA;;AAAA;;AAAA;;AAEE,OAAAc,qEAAA,CAAA,2CAAA,sDAAA,2BAAA,7JAAGC,8JACA,AAAAD,uEAAA,CAAA,oCAAA,vEAAGE,wEACA,AAAAC,wBAAA,QAAA,CAAA,MAAA,CACG,AAAAA,wBAAA,KAAA,CAAA,MAAA,CAAO,AAAAH,oEAAA,AAAAI,wCAAA,YAAA,nFAAGC,uFAAe,AAAAL,oEAAA,AAAAI,yIAAA,xKAAGC,uEAAG,AAAA,uFAASR,gBACxC,AAAAM,wBAAA,KAAA,CAAA,MAAA,CAAO,AAAAH,oEAAA,AAAAI,wCAAA,qBAAA,5FAAGC,gGAAwB,AAAAL,oEAAA,AAAAI,gKAAA,/LAAGC,uEAAG,AAAA,8GAAoBR,gBAC5D,AAAAM,wBAAA,KAAA,CAAA,MAAA,CAAO,AAAAH,oEAAA,AAAAI,wCAAA,qBAAA,5FAAGC,gGAAyB,AAAAL,oEAAA,AAAAI,qMAAA,pOAAGC,uEAAG,AAACC,qCAAiB,AAAA,6GAAoBT,iBAC/E,AAAAM,wBAAA,KAAA,CAAA,MAAA,CAAO,AAAAH,oEAAA,AAAAI,wCAAA,uBAAA,9FAAGC,kGAA0B,AAAAL,oEAAA,AAAAI,oKAAA,nMAAGC,uEAAG,AAAA,kHAAsBR,gBAChE,AAAAM,wBAAA,KAAA,CAAA,MAAA,CAAO,AAAAH,oEAAA,AAAAI,wCAAA,SAAA,hFAAGC,oFAAY,AAAAL,oEAAA,AAAAI,sIAAA,rKAAGC,uEAAG,AAAA,oFAAQR,gBACpC,iBAAMU,UAAQ,AAAA,mFAAO,AAAA,yFAAUV;IACzBW,QAAM,AAAA,qFAAQ,AAAA,yFAAUX;AAD9B,AAEE,AAAAM,wBAAA,KAAA,CAAA,MAAA,CAAO,AAAAH,oEAAA,AAAAI,wCAAA,WAAA,lFAAGC,sFAAc,AAAAL,oEAAA,AAAAI,qXAAA,pZAAGC,uEAAG,yDAAA,zDAACI,wHAAwB,AAAA,0FAAUF,SAAS,AAAA,kGAAcA;;AACxF,OAAAJ,wBAAA,KAAA,CAAA,MAAA,CAAO,AAAAH,oEAAA,AAAAI,wCAAA,SAAA,hFAAGC,oFAAY,AAAAL,oEAAA,AAAAI,gEAAA,/FAAGC,uEAAG,AAACK,gBAAMF;;;AAbhD,AAAA,GAAAzB;AAAA,IAAAI,gDAAAC;IAAAC,gDAAAJ;AAAA,AAAA,CAAAG,yCAAAC;;AAAA,IAAA,AAAA,GAAA,EAAA,AAAAC,qBAAAb,+BAAA,CAAAA,4BAAA;AAAA;AAAA,AAAA,MAAA,KAAAK,MAAA,CAAA,kBAAA,CAAA,qGAAAL,oCAAA,KAAA;;;AAAA,OAAAI;UAAA,AAAA,CAAAO,yCAAAD;;AAAA,OAAAN;;;;AAAA,CAAA,AAAAI,yDAAA;;AAAA,CAAA,AAAAA,gDAAA;;AAAA,GAAAF;AAAA,AAAA,GAAA,QAAAQ,mCAAAC,uCAAAC;AAAA,AAAA,IAAAC,2BAAA,AAAAC;AAAA,AAAA,CAAAD,yDAAAA,uDAAAT,kCAAA,GAAA,KAAA,QAAAS,oCAAAT,kCAAA,GAAA,KAAA;;AAAA,AAAAW,8BAAAX,kCAAA,AAAAA;;AAAA,CAAA,AAAAA,2DAAAS;;AAAA;;AAAA","names":["props__39917__auto__","clj-props__39918__auto__","uix.core/glue-args","vec__56886","cljs.core.nth","f__39919__auto__","js/Error","js/goog.DEBUG","temp__5804__auto__","cljserial.components.cd-info/card","f__39838__auto__","*current-component*-orig-val__56906","uix.core/*current-component*","*current-component*-temp-val__56907","cljs.core/map?","js/window","js/window.uix","js/window.uix.dev","sig__39847__auto__","js/window.uix.dev.signature!","js/window.uix.dev.register!","cd-info","malli.core/validate","cljserial.services.mbt-cd/CdState","uix.compiler.alpha/component-element","cljserial.components.cards/card","cljserial.components.tables/table","uix.compiler.aot/>el","uix.compiler.attributes/interpret-props","cljserial.components.tables/td","cljserial.schema.version/->string","sd-info","files","cuerdas.core.format","cljs.core/count"],"sourcesContent":["(ns cljserial.components.cd-info\n  \"A generic info component for the MBT and MBX Controllers\"\n  (:require\n   [cuerdas.core :as str]\n   [uix.core :as uix :refer [defui $]]\n   [malli.core :as m]\n   [cljserial.components.cards :as cards]\n   [cljserial.components.tables :as tables :refer [td]]\n   [cljserial.schema.version :as version]\n   [cljserial.services.mbt-cd :as mbt-cd]))\n\n(defui card [cd-info]\n  {:pre [m/validate mbt-cd/CdState cd-info]}\n  ($ cards/card {:title \"Controller Info\"}\n     ($ tables/table\n        ($ :tbody\n           ($ :tr ($ td \"Serial #\") ($ td (:serial cd-info)))\n           ($ :tr ($ td \"Hardware Revision\") ($ td (:hardware-revision cd-info)))\n           ($ :tr ($ td \"Firmware Revision\")  ($ td (version/->string (:firmware-revision cd-info))))\n           ($ :tr ($ td \"Build Configuration\") ($ td (:build-configuration cd-info)))\n           ($ :tr ($ td \"Track\") ($ td (:track cd-info)))\n           (let [sd-info (:info (:sd-card cd-info))\n                 files (:files (:sd-card cd-info))]\n             ($ :tr ($ td \"Storage\") ($ td (str/format \"%s / %s MB\" (:used-mb sd-info) (:capacity-mb sd-info))))\n             ($ :tr ($ td \"Files\") ($ td (count files))))\n           ;; END\n           ))))\n"]}