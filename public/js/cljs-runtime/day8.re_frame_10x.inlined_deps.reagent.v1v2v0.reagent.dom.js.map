{"version":3,"sources":["day8/re_frame_10x/inlined_deps/reagent/v1v2v0/reagent/dom.cljs"],"mappings":"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","names":["js/day8","js/day8.re-frame-10x","js/day8.re-frame-10x.inlined-deps","js/day8.re-frame-10x.inlined-deps.reagent","js/day8.re-frame-10x.inlined-deps.reagent.v1v2v0","js/day8.re-frame-10x.inlined-deps.reagent.v1v2v0.reagent","js/day8.re-frame-10x.inlined-deps.reagent.v1v2v0.reagent.dom","js/day8.re-frame-10x.inlined-deps.reagent.v1v2v0.reagent.dom.roots","day8.re-frame-10x.inlined-deps.reagent.v1v2v0.reagent.dom/roots","cljs.core.atom","day8.re-frame-10x.inlined-deps.reagent.v1v2v0.reagent.dom/unmount-comp","container","cljs.core.swap_BANG_","cljs.core/dissoc","js/module$node_modules$react_dom$index.unmountComponentAtNode","day8.re-frame-10x.inlined-deps.reagent.v1v2v0.reagent.dom/render-comp","comp","callback","*always-update*-orig-val__62821","*always-update*-temp-val__62822","day8.re-frame-10x.inlined-deps.reagent.v1v2v0.reagent.impl.util/*always-update*","js/module$node_modules$react_dom$index.render","*always-update*-orig-val__62823","*always-update*-temp-val__62824","cljs.core/assoc","day8.re-frame-10x.inlined-deps.reagent.v1v2v0.reagent.impl.batching/flush-after-render","day8.re-frame-10x.inlined-deps.reagent.v1v2v0.reagent.dom/re-render-component","var_args","G__62832","day8.re-frame-10x.inlined-deps.reagent.v1v2v0.reagent.dom/render","js/Error","day8.re_frame_10x.inlined_deps.reagent.v1v2v0.reagent.dom.render","day8.re-frame-10x.inlined-deps.reagent.v1v2v0.reagent.impl.template/*current-default-compiler*","callback-or-compiler","day8.re-frame-10x.inlined-deps.reagent.v1v2v0.reagent.ratom/flush!","vec__62834","cljs.core.nth","compiler","cljs.core/map?","cljs.core/fn?","f","day8.re-frame-10x.inlined-deps.reagent.v1v2v0.reagent.impl.protocols/as-element","day8.re-frame-10x.inlined-deps.reagent.v1v2v0.reagent.dom/unmount-component-at-node","day8.re-frame-10x.inlined-deps.reagent.v1v2v0.reagent.dom/dom-node","this","js/module$node_modules$react_dom$index.findDOMNode","day8.re-frame-10x.inlined-deps.reagent.v1v2v0.reagent.dom/force-update-all","seq__62840","cljs.core/seq","cljs.core/deref","chunk__62841","count__62842","i__62843","vec__62864","temp__5823__auto__","cljs.core/chunked-seq?","c__5525__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","vec__62870","cljs.core/first","cljs.core/next"],"sourcesContent":["(ns ^{:mranderson/inlined true} day8.re-frame-10x.inlined-deps.reagent.v1v2v0.reagent.dom\n  (:require [react-dom :as react-dom]\n            [day8.re-frame-10x.inlined-deps.reagent.v1v2v0.reagent.impl.util :as util]\n            [day8.re-frame-10x.inlined-deps.reagent.v1v2v0.reagent.impl.template :as tmpl]\n            [day8.re-frame-10x.inlined-deps.reagent.v1v2v0.reagent.impl.batching :as batch]\n            [day8.re-frame-10x.inlined-deps.reagent.v1v2v0.reagent.impl.protocols :as p]\n            [day8.re-frame-10x.inlined-deps.reagent.v1v2v0.reagent.ratom :as ratom]))\n\n(defonce ^:private roots (atom {}))\n\n(defn- unmount-comp [container]\n  (swap! roots dissoc container)\n  (react-dom/unmountComponentAtNode container))\n\n(defn- render-comp [comp container callback]\n  (binding [util/*always-update* true]\n    (react-dom/render (comp) container\n      (fn []\n        (binding [util/*always-update* false]\n          (swap! roots assoc container comp)\n          (batch/flush-after-render)\n          (if (some? callback)\n            (callback)))))))\n\n(defn- re-render-component [comp container]\n  (render-comp comp container nil))\n\n(defn render\n  \"Render a Reagent component into the DOM. The first argument may be\n  either a vector (using Reagent's Hiccup syntax), or a React element.\n  The second argument should be a DOM node.\n\n  Optionally takes a callback that is called when the component is in place.\n\n  Returns the mounted component instance.\"\n  ([comp container]\n   (render comp container tmpl/*current-default-compiler*))\n  ([comp container callback-or-compiler]\n   (ratom/flush!)\n   (let [[compiler callback] (cond\n                               (map? callback-or-compiler)\n                               [(:compiler callback-or-compiler) (:callback callback-or-compiler)]\n\n                               (fn? callback-or-compiler)\n                               [tmpl/*current-default-compiler* callback-or-compiler]\n\n                               :else\n                               [callback-or-compiler nil])\n         f (fn []\n             (p/as-element compiler (if (fn? comp) (comp) comp)))]\n     (render-comp f container callback))))\n\n(defn unmount-component-at-node\n  \"Remove a component from the given DOM node.\"\n  [container]\n  (unmount-comp container))\n\n(defn dom-node\n  \"Returns the root DOM node of a mounted component.\"\n  {:deprecated \"1.2.0\"}\n  [this]\n  (react-dom/findDOMNode this))\n\n(defn force-update-all\n  \"Force re-rendering of all mounted Reagent components. This is\n  probably only useful in a development environment, when you want to\n  update components in response to some dynamic changes to code.\n\n  Note that force-update-all may not update root components. This\n  happens if a component 'foo' is mounted with `(render [foo])` (since\n  functions are passed by value, and not by reference, in\n  ClojureScript). To get around this you'll have to introduce a layer\n  of indirection, for example by using `(render [#'foo])` instead.\"\n  {:deprecated \"1.2.0\"}\n  []\n  (ratom/flush!)\n  (doseq [[container comp] @roots]\n    (re-render-component comp container))\n  (batch/flush-after-render))\n"],"x_google_ignoreList":[0]}