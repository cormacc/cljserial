{"version":3,"sources":["statecharts/store.cljc"],"mappings":"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","names":["statecharts$store$IStore$unique_id$dyn","x__5350__auto__","m__5351__auto__","statecharts.store/unique-id","goog/typeOf","m__5349__auto__","cljs.core/missing-protocol","statecharts$store$IStore$initialize$dyn","statecharts.store/initialize","statecharts$store$IStore$transition$dyn","statecharts.store/transition","statecharts$store$IStore$get_state$dyn","statecharts.store/get-state","statecharts.store/IStore","this","state","machine","opts","event","id","this__5300__auto__","k__5301__auto__","this__5302__auto__","k95643","else__5303__auto__","G__95655","cljs.core/Keyword","state*","cljs.core.get","__extmap","this__5320__auto__","f__5321__auto__","init__5322__auto__","cljs.core.reduce","ret__5323__auto__","p__95662","vec__95664","k__5324__auto__","cljs.core.nth","v__5325__auto__","this__5315__auto__","writer__5316__auto__","opts__5317__auto__","pr-pair__5318__auto__","keyval__5319__auto__","cljs.core/pr-sequential-writer","cljs.core.concat","cljs.core/PersistentVector","G__95642","cljs.core/RecordIter","cljs.core/-iterator","cljs.core/nil-iter","this__5298__auto__","__meta","this__5295__auto__","__hash","this__5304__auto__","cljs.core/count","this__5296__auto__","h__5111__auto__","coll__5297__auto__","cljs.core/hash-unordered-coll","this95644","other95645","cljs.core._EQ_","cljs.core/PROTOCOL_SENTINEL","cljs.core/deref","this__5310__auto__","k__5311__auto__","cljs.core/contains?","cljs.core.dissoc","cljs.core/-with-meta","cljs.core.into","cljs.core/not-empty","this__5307__auto__","G__95702","this__5308__auto__","k__5309__auto__","pred__95703","cljs.core/keyword-identical?","expr__95704","cljs.core.assoc","this__5313__auto__","cljs.core/seq","cljs.core/MapEntry","this__5299__auto__","this__5305__auto__","entry__5306__auto__","cljs.core/vector?","cljs.core/-nth","cljs.core/-conj","statecharts.store/SingleStore","this__5346__auto__","cljs.core/List","writer__5347__auto__","cljs.core/-write","G__95651","extmap__5342__auto__","G__95722","cljs.core/record?","statecharts.store/->SingleStore","statecharts.store/map->SingleStore","_","_state","cljs.core/reset!","statecharts.impl.initialize","p1__95641#","cljs.core.swap_BANG_","statecharts.impl.transition","statecharts.store/single-store","cljs.core.atom","k95739","G__95756","states*","p__95766","vec__95767","G__95738","this95740","other95741","G__95812","pred__95823","expr__95824","statecharts.store/ManyStore","G__95747","G__95882","statecharts.store/->ManyStore","statecharts.store/map->ManyStore","p1__95734#","cljs.core.update","or__5002__auto__","cljs.core.gensym","cljs.core/assoc","state-id","p1__95735#","cljs.core/update","var_args","G__95884","statecharts.store/many-store","js/Error","p__95888","map__95889","cljs.core/--destructure-map","statecharts.store.many_store"],"sourcesContent":["(ns statecharts.store\n  \"This namespace provides an interface for a mutable datastore for one or more\n  states.\n\n  It is used in places that are concerned with storing states as they change _over\n  time_. So, [[statecharts.service]], which notifies listeners when a state\n  changes, and [[statecharts.integrations.re-frame]], which persists state changes\n  in a re-frame app-db, both use it. It is also used in [[statecharts.scheduler]],\n  which is concerned with scheduling state changes that will happen at some future\n  time.\"\n  (:require [statecharts.impl :as impl]))\n\n(defprotocol IStore\n  (unique-id [this state]\n    \"Get the id that the store uses to identify this state.\")\n  (initialize [this machine opts]\n    \"Initialize a state, and save it in the store.\")\n  (transition [this machine state event opts]\n    \"Transition a state previously saved in the store. Save and return its new value.\")\n  (get-state [this id]\n    \"Get the current value of a state, by its id.\"))\n\n\n(defrecord SingleStore [state*]\n  IStore\n  (unique-id [_ _state] :context)\n  (initialize [_ machine opts]\n    (reset! state* (impl/initialize machine opts)))\n  (transition [_ machine _state event opts]\n    (swap! state* #(impl/transition machine % event opts)))\n  (get-state [_ _]\n    @state*))\n\n(defn single-store\n  \"A single-store stores the current value of a single state.\"\n  []\n  (SingleStore. (atom nil)))\n\n(defrecord ManyStore [states* id]\n  IStore\n  (unique-id [_ state] (get state id))\n  (initialize [this machine opts]\n    (let [state (-> (impl/initialize machine opts)\n                    (update id #(or % (gensym))))]\n      (swap! states* assoc (unique-id this state) state)\n      state))\n  (transition [this machine state event opts]\n    (let [state-id (unique-id this state)]\n      (swap! states* update state-id #(impl/transition machine % event opts))\n      (get-state this state-id)))\n  (get-state [_ id]\n    (get @states* id)))\n\n(defn many-store\n  \"A many-store stores the current values of many states.\n\n  The `opts` provided to `init` should configure the state to have a unique id.\n  This ensures that the state can be identified and transitioned later, by both\n  external and scheduled events.\n\n  By default, a many-store expects the id to be `:id`.\n  ```clojure\n  (let [store (store/many-store)]\n    (store/initialize store fsm {:context {:id 1}})\n    (store/get-state store 1))\n  ```\n  The id can be configured by providing an `:id` key in the many-store\n  configuration options.\n  ```clojure\n  (let [store (store/many-store {:id :my-id})]\n    (store/initialize store fsm {:context {:my-id 1}})\n    (store/get-state store 1))\n  ```\n  \"\n  ([] (many-store {}))\n  ([{:keys [id] :or {id :id}}]\n   (ManyStore. (atom {}) id)))\n"],"x_google_ignoreList":[0]}