{"version":3,"sources":["stack/uix/serial_port.cljs"],"mappings":";AAYA,uCAAA,vCAAMA,sFAAgBC;AAAtB,AACE,GAAI,eAAAC,dAAUD;AACZ,OAACE,eAAKF;;AACN,mDAAKA;;;AAET,AAAA,iCAAA,yCAAAG,1EAAOW;AAAP,AAAA,IAAAV,aAAA,AAAAC,mBAAAF;IAAAG,aAAA,CAAAF;IAAAG,aAAA,AAAAC,4CAAAF,WAAA,IAAA;IAAAC,iBAAA,AAAAE,4BAAAF;WAAA,AAAAG,4CAAAH,eAAA,lEACWsB;cADX,AAAAnB,4CAAAH,eAAA,rEACgBuB;sBADhB,AAAApB,4CAAAH,eAAA,7EACwBwB;qBADxB,AAAArB,4CAAAH,eAAA,5EACwCyB;uBADxC,AAAAtB,4CAAAH,eAAA,9EACuD0B;IADvDtB,mBAAA;AAAA,AAAA;AAAA,GAAAC;AAAA,AAAA,IAAAC,2BAAA,AAAAC;AAAA,AAAA,oBAAAD;AAAA,AAAA,IAAAE,yBAAAF;AAAA,AAAA,CAAAE,uDAAAA,yDAAAA;;AAAA;;AAAA;;AAIE,IAAMmB,WAAS,GAAK,kDAAA,lDAACC,6CAAEN;AAAvB,AACE,OAAAO,0DAAA,CAAA,2CAAA,sDAAA,gBAAA,0rBAAA,j0BAAGC,gMACoB,EAAIH,UACF,AAAAE,8DAAA,CAAA,2CAAA,qDAAA,gDAAA,qFAAA,CAAA,hQAAGE,uOACqBN,wCAExB,AAAAI,8DAAA,CAAA,2CAAA,qDAAA,gDAAA,sFAAA,CAAA,jQAAGE,uOACqBP,sDAE9C,AAAAK,4DAAA,CAAA,oCAAA,5DAAGG,6DACA,AAAAC,wBAAA,QAAA,AAAAC,wCACG,EAAIP,UACF,AAAAM,wBAAA,KAAA,CAAA,MAAA,CAAO,AAAAA,wBAAA,KAAA,AAAAC,wCAAA,OAAA,CAAA,KAAA,KAAA,KAAA,OAAA,OAAA,IAAe,AAAAD,wBAAA,KAAA,AAAAC,6CAAA,CAAA,KAAA,KAAA,KAAA,OAAA,OAAA,nCAAOZ,yCAC7B,AAAAW,wBAAA,KAAA,CAAA,MAAA,CACG,AAAAA,wBAAA,KAAA,AAAAC,wCAAA,cAAA,CAAA,KAAA,KAAA,KAAA,OAAA,OAAA,IACA,AAAAD,wBAAA,KAAA,CAAA,MAAA,CAAO,AAAAJ,4DAAA,CAAA,2CAAA,igBAAA,sGAAA,sDAAA,WAAAM,3uBAAGE,0HAAeC,AAAA,ogBACCC;AADnB,AAEmB,OAAA,iGAAAJ;GAFnB,2KAAA,uEAAA,+DAAA,WAAAC,hQAGqB,AAAA,sGAAiBb,uEACjBI;AAJrB,AAKuB,IAAAa,WAAA;IAAAC,WAAkC,AAAS,AAAAL;AAA3C,AAAA,wGAAAI,SAAAC,wCAAAD,SAAAC,1JAACf,iDAAAA,oEAAAA;qBAVvC,CAAA,QAAA,KAAA,KAAA,OAAA,OAAA,1CAKe,2CAMZ,AAAAO,wBAAA,KAAA,CAAA,MAAA,CACG,AAAAA,wBAAA,KAAA,AAAAC,wCAAA,YAAA,CAAA,KAAA,KAAA,KAAA,OAAA,OAAA,IACA,AAAAD,wBAAA,KAAA,CAAA,MAAA,CAAO,AAAAJ,4DAAA,CAAA,2CAAA,oPAAA,iKAAA,uEAAA,+DAAA,WAAAa,zmBAAGL,0HAAeM,AAAA,yPACG,AAAA,4FAAWpB,uEACXI;AAFrB,AAGuB,IAAAiB,WAAA;IAAAC,WAA4B,AAAS,AAAAH;AAArC,AAAA,wGAAAE,SAAAC,wCAAAD,SAAAC,1JAACnB,iDAAAA,oEAAAA;YAHxB,QAIV,AAAAO,wBAAA,KAAA,CAAA,MAAA,CACG,AAAAA,wBAAA,KAAA,AAAAC,wCAAA,YAAA,CAAA,KAAA,KAAA,KAAA,OAAA,OAAA,IACA,AAAAD,wBAAA,KAAA,CAAA,MAAA,CAAO,AAAAJ,4DAAA,CAAA,2CAAA,qHAAA,0DAAA,WAAAiB,7PAAGT,0HAAe,AAACW,6BAAiBC;AAApC,AACoB,mDAAAH;GADpB,gKAAA,uEAAA,+DAAA,WAAAC,rPAEqB,AAAA,2FAAWxB,uEACXI;AAHrB,AAIuB,IAAAuB,WAAA;IAAAC,WAA4B,AAAS,AAAAJ;AAArC,AAAA,wGAAAG,SAAAC,wCAAAD,SAAAC,1JAACzB,iDAAAA,oEAAAA;YAJxB,QAKV,AAAAO,wBAAA,KAAA,CAAA,MAAA,CACG,AAAAA,wBAAA,KAAA,AAAAC,wCAAA,YAAA,CAAA,KAAA,KAAA,KAAA,OAAA,OAAA,IACA,AAAAD,wBAAA,KAAA,CAAA,MAAA,CAAO,AAAAJ,4DAAA,CAAA,2CAAA,qHAAA,0DAAA,WAAAuB,7PAAGf,0HAAe,AAACW,6BAAiBM;AAApC,AACoB,mDAAAF;GADpB,+JAAA,uEAAA,+DAAA,WAAAC,pPAEqB,AAAA,0FAAW9B,uEACXI;AAHrB,AAIuB,IAAA4B,WAAA;IAAAC,WAA4B,AAAS,AAAAH;AAArC,AAAA,wGAAAE,SAAAC,wCAAAD,SAAAC,1JAAC9B,iDAAAA,oEAAAA;YAJxB,QAKV,AAAAO,wBAAA,KAAA,CAAA,MAAA,CACG,AAAAA,wBAAA,KAAA,AAAAC,wCAAA,SAAA,CAAA,KAAA,KAAA,KAAA,OAAA,OAAA,IACA,AAAAD,wBAAA,KAAA,CAAA,MAAA,CAAO,AAAAJ,4DAAA,CAAA,2CAAA,qHAAA,+FAAA,6JAAA,uEAAA,+DAAA,WAAA4B,rkBAAGpB,0HAAe,AAACqB,+BAAmBC,yFACnBnE,iGACE,AAAA,wFAAS+B,uEACTI;AAHrB,AAIuB,IAAAiC,WAAA;IAAAC,WAA0B,AAAS,AAAAJ;AAAnC,AAAA,wGAAAG,SAAAC,wCAAAD,SAAAC,1JAACnC,iDAAAA,oEAAAA;YAJxB,QAKV,AAAAO,wBAAA,KAAA,CAAA,MAAA,CACG,AAAAA,wBAAA,KAAA,AAAAC,wCAAA,eAAA,CAAA,KAAA,KAAA,KAAA,OAAA,OAAA,IACA,AAAAD,wBAAA,KAAA,CAAA,MAAA,CAAO,AAAAJ,4DAAA,CAAA,2CAAA,0HAAA,+FAAA,sKAAA,uEAAA,+DAAA,WAAAiC,nlBAAGzB,0HAAe,AAACqB,+BAAmBK,8FACnBvE,iGACE,AAAA,iGAAc+B,uEACdI;AAHrB,AAIuB,IAAAqC,WAAA;IAAAC,WAA+B,AAAS,AAAAH;AAAxC,AAAA,wGAAAE,SAAAC,wCAAAD,SAAAC,1JAACvC,iDAAAA,oEAAAA;YAJxB;;AAtDvB,AAAA,GAAArB;AAAA,IAAAI,gDAAAC;IAAAC,gDAAAJ;AAAA,AAAA,CAAAG,yCAAAC;;AAAA,IAAA,AAAA,GAAA,EAAA,AAAAC,qBAAAf,iBAAA,CAAAA,cAAA;AAAA;AAAA,AAAA,MAAA,KAAAgB,MAAA,CAAA,kBAAA,CAAA,qGAAAhB,sBAAA,KAAA;;;AAAA,OAAAO;UAAA,AAAA,CAAAM,yCAAAD;;AAAA,OAAAL;;;;AAAA,CAAA,AAAAG,sDAAA;;AAAA,AAAA,CAAA,AAAAA,6CAAA;;AAAA,AAAAO,sBAAAP,+BAAA,OAAA,iBAAAQ,WAAA,EAAA,QAAA;AAAA,AAAAA;;;AAAA,GAAAV;AAAA,AAAA,GAAA,QAAAW,mCAAAC,uCAAAC;AAAA,AAAA,IAAAC,2BAAA,AAAAC;AAAA,AAAA,CAAAD,yDAAAA,uDAAAZ,+BAAA,GAAA,KAAA,QAAAY,oCAAAZ,+BAAA,GAAA,KAAA;;AAAA,AAAAc,8BAAAd,+BAAA,AAAAA;;AAAA,CAAA,AAAAA,wDAAAY;;AAAA;;AAAA;;AAAA","names":["stack.uix.serial-port/format-keyword","kw","cljs.core/Keyword","cljs.core/name","props__46991__auto__","props97921","uix.core/glue-args","vec__97931","map__97934","cljs.core.nth","cljs.core/--destructure-map","cljs.core.get","f__46992__auto__","js/goog.DEBUG","temp__5823__auto__","stack.uix.serial-port/settings","f__46909__auto__","*current-component*-orig-val__98041","uix.core/*current-component*","*current-component*-temp-val__98042","cljs.core/map?","js/Error","js/Object.defineProperty","obj98048","js/window","js/window.uix","js/window.uix.dev","sig__46918__auto__","js/window.uix.dev.signature!","js/window.uix.dev.register!","port","options","on-port-request","on-port-forget","on-option-update","has-port","cljs.core._EQ_","uix.compiler.alpha/component-element","stack.uix.cards/card","stack.uix.buttons/button","stack.uix.tables/table","uix.compiler.aot/>el","uix.compiler.attributes/interpret-attrs","p1__97889#","p1__97890#","stack.uix.forms/select","stack.schema.webserial/PORT-FILTERS","stack.schema.webserial/describe-port-filter","G__97961","G__97962","p1__97891#","stack.schema.webserial/BAUD-RATES","G__97985","G__97986","p1__97892#","p1__97893#","stack.utils.schema/int-range","stack.schema.webserial/DataBits","G__98002","G__98003","p1__97894#","p1__97895#","stack.schema.webserial/StopBits","G__98013","G__98014","p1__97896#","stack.utils.schema/enum-values","stack.schema.webserial/Parity","G__98026","G__98027","p1__97897#","stack.schema.webserial/FlowControl","G__98038","G__98039"],"sourcesContent":["(ns stack.uix.serial-port\n  \"A webserial connection settings UI component.\"\n  (:require\n   [uix.core :as uix :refer [defui $]]\n   [malli.core :as m]\n   [stack.utils.schema :as schema]\n   [stack.schema.webserial :as webserial]\n   [stack.uix.cards :as cards]\n   [stack.uix.tables :as tables]\n   [stack.uix.buttons :as buttons]\n   [stack.uix.forms :as forms :refer [select]]))\n\n(defn format-keyword [kw]\n  (if (keyword? kw)\n    (name kw)\n    (str kw)))\n\n(defui settings\n  [{:keys [port options on-port-request on-port-forget on-option-update]}]\n  {:pre [(m/validate webserial/SerialOptions options)]}\n\n  (let [has-port (not (= port nil))]\n    ($ cards/card {:title \"Port settings\"\n                   :action (if has-port\n                             ($ buttons/button\n                                {:size :xs :on-click on-port-forget}\n                                \"Close port\")\n                             ($ buttons/button\n                                {:size :xs :on-click on-port-request}\n                                \"Request port\"))}\n       ($ tables/table\n          ($ :tbody\n             (if has-port\n               ($ :tr ($ :td \"Port\") ($ :td port))\n               ($ :tr\n                  ($ :td \"Port filter\")\n                  ($ :td ($ select {:items webserial/PORT-FILTERS\n                                    :format webserial/describe-port-filter\n                                    :value #(:usbVendorId %)\n                                    :selected (:vendorIdFilter options)\n                                    :disabled has-port\n                                    :on-change #(on-option-update :vendorIdFilter (.-value (.-target %1)))}))))\n             ($ :tr\n                ($ :td \"Baud rate\")\n                ($ :td ($ select {:items webserial/BAUD-RATES\n                                  :selected (:baudRate options)\n                                  :disabled has-port\n                                  :on-change #(on-option-update :baudRate (.-value (.-target %1)))})))\n             ($ :tr\n                ($ :td \"Data bits\")\n                ($ :td ($ select {:items (schema/int-range webserial/DataBits)\n                                  :format #(str %)\n                                  :selected (:dataBits options)\n                                  :disabled has-port\n                                  :on-change #(on-option-update :dataBits (.-value (.-target %1)))})))\n             ($ :tr\n                ($ :td \"Stop bits\")\n                ($ :td ($ select {:items (schema/int-range webserial/StopBits)\n                                  :format #(str %)\n                                  :selected (:stopBits options)\n                                  :disabled has-port\n                                  :on-change #(on-option-update :stopBits (.-value (.-target %1)))})))\n             ($ :tr\n                ($ :td \"Parity\")\n                ($ :td ($ select {:items (schema/enum-values webserial/Parity)\n                                  :format format-keyword\n                                  :selected (:parity options)\n                                  :disabled has-port\n                                  :on-change #(on-option-update :parity (.-value (.-target %1)))})))\n             ($ :tr\n                ($ :td \"Flow control\")\n                ($ :td ($ select {:items (schema/enum-values webserial/FlowControl)\n                                  :format format-keyword\n                                  :selected (:flowControl options)\n                                  :disabled has-port\n                                  :on-change #(on-option-update :flowControl (.-value (.-target %1)))}))))))))\n"]}