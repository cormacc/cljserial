{"version":3,"sources":["stack/pages/todos.cljs"],"mappings":";AAQA,qCAAA,6CAAAA,lFAAMI;AAAN,AAAA,IAAAH,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;YAAA,AAAAE,4CAAAF,eAAA,nEAAgCI;gBAAhC,AAAAF,4CAAAF,eAAA,vEAAsCK;WAAtC,AAAAH,4CAAAF,eAAA,lEAAgDM;kBAAhD,AAAAJ,4CAAAF,eAAA,zEAAqDO;eAArD,AAAAL,4CAAAF,eAAA,tEAAiEQ;AAAjE,AACE,IAAMC,QAAM,AAACC,2CAAqBJ;IAC5BK,cAAY,AAACC,6CAAuBH;IACpCI,gBAAc,AAACC,uCAAiBP,YAAYE;AAFlD,AAAA,0FAAA,2GAAA,2CAAA,yGAAA,qHAAA,2HAAA,gHAAA,+GAAA,rdAGoCL,iHACIC,yHACEE,mHACHC,0GACHK,4HACMF;;AAE5C,2BAAA,mCAAAI,9DAAME;AAAN,AAAA,IAAAD,aAAAD;IAAAC,iBAAA,AAAAf,4BAAAe;aAAAA,TAAgDI;gBAAhD,AAAAlB,4CAAAc,eAAA,vEAAsBE;iBAAtB,AAAAhB,4CAAAc,eAAA,xEAAgCG;AAAhC,AACE,IAAAE,aAAqCH;IAArCG,iBAAA,AAAApB,4BAAAoB;eAAA,AAAAnB,4CAAAmB,eAAA,tEAAcE;kBAAd,AAAArB,4CAAAmB,eAAA,zEAAuBG;IAAvBF,aACwDH;IADxDG,iBAAA,AAAArB,4BAAAqB;cAAA,AAAApB,4CAAAoB,eAAA,rEACcG;iBADd,AAAAvB,4CAAAoB,eAAA,xEACsBI;kBADtB,AAAAxB,4CAAAoB,eAAA,zEACiCf;eADjC,AAAAL,4CAAAoB,eAAA,tEAC6Cd;IAGvCmB,WAAS,AAAA,mFAAOT;IAChBU,YAAU,8HAAA,mEAAA,jMAACC,kEAASX,uHAAmBO,yEAAoBC;AALjE,AAAA,0FAAA,iGAAA,mFAAA,uGAAA,mFAAA,+FAAA,0CAAA,mFAAA,wGAAA,mFAAA,wJAAA,2CAAA,yGAAA,2DAAA,4GAAA,8EAAA,mFAAA,2JAAA,2CAAA,yGAAA,iEAAA,+GAAA,iFAAA,mFAAA,7yBAYqBH,+DACRE,8jBAGQD,kEACRE,oMAER,mCAAA,2CAAA,sDAAA,MAAA,+DAAA,MAAA,8DAAA,+EAAA,5VAACvB,oQAEwBwB,4EACOpB,yEACHC,kBAC7B,mCAAA,2CAAA,sDAAA,OAAA,+DAAA,KAAA,+DAAA,+EAAA,7VAACL,oQAEwByB,6EACOrB,yEACHC","names":["p__64175","map__64177","cljs.core/--destructure-map","cljs.core.get","stack.pages.todos/render-task-view","title","immutable","data","task-filter","new-task","tasks","stack.examples.models.domain/extract-tasks","task-counts","stack.examples.models.domain/get-task-counts","visible-tasks","stack.examples.models.domain/filter-by","p__64217","map__64219","stack.pages.todos/render","domain-db","user-input","_state","map__64222","map__64223","tx-times","valid-times","tx-time","valid-time","data-now","data-then","stack.utils.datascript.as_of"],"sourcesContent":["(ns stack.pages.todos\n  (:require [stack.utils.datascript :as du]\n            [stack.examples.models.domain :as domain]\n            [stack.components.layout :as layout]\n            [stack.components.forms :as forms]\n            [stack.components.tasks :as tasks]))\n\n\n(defn render-task-view [{:keys [title immutable data task-filter new-task]}]\n  (let [tasks (domain/extract-tasks data)\n        task-counts (domain/get-task-counts tasks)\n        visible-tasks (domain/filter-by task-filter tasks)]\n    [::tasks/task-view {::tasks/title title\n                        ::tasks/immutable immutable\n                        ::tasks/task-filter task-filter\n                        ::tasks/new-task new-task\n                        ::tasks/tasks visible-tasks\n                        ::tasks/task-counts task-counts}]))\n\n(defn render [{:keys [domain-db user-input] :as _state}]\n  (let [{:keys [tx-times valid-times]} domain-db\n        {:keys [tx-time valid-time task-filter new-task]} user-input\n        ;;TODO: data-now and data-then (and the derived tasks, task-counts, visible tasks)\n        ;;      should probably be updated in the dispatch loop rather than regenerated here\n        data-now (:data domain-db)\n        data-then (du/as-of domain-db :tx-time tx-time :valid-time valid-time)]\n    [::layout/card\n     [::layout/header\n      [:h2.text-base.font-semibold \"Time-travelling TodoMVC\"]]\n     [::layout/content\n      [::forms/range-slider.range-sm.range-info\n       {::forms/input-id :tx-time\n        ::forms/values tx-times\n        :value tx-time}]\n      [::forms/range-slider.range-sm.range-accent\n       {::forms/input-id :valid-time\n        ::forms/values valid-times\n        :value valid-time}]\n      [:div.grid.grid-cols-2\n       (render-task-view {:title \"Now\"\n                          :immutable false\n                          :data data-now\n                          :task-filter task-filter\n                          :new-task new-task})\n       (render-task-view {:title \"Then\"\n                          :immutable true\n                          :data data-then\n                          :task-filter task-filter\n                          :new-task new-task})]]]))\n"]}