{"version":3,"sources":["refx/interop.cljs"],"mappings":";AAGA,2BAAA,AAAAA,6CAAA,AAAAC,gCAAA,xGAAKC;AAEL,AAAKC,yBAAUC;AAEf,AAAKC,4BAAaF;AAMlB;;;AAAcG,oCAA4CC;AAE1D,iCAAA,jCAAMC,0EAAcC,EAAEC;AAAtB,AACE,OAACC,WAAcF,EAAEC;;AAEnB,uBAAA,2CAAA,oFAAA,+EAAA,gFAAA,rTAAKE,0HACK,AAAOC,mBAAiBC,8DACxB,AAAOC,iBAAeD,8DACtB,AAAOE,kBAAgBF,gEACvB,AAAOG,mBAAiBH;AAElC,mBAAA,nBAAMI,8CAAKC,MAAMC;AAAjB,AACE,OAACC,8CAAM,CAACT,qDAAAA,4DAAAA,TAAQO,yCAAAA,QAAOC","names":["cljs.core.into","cljs.core/PersistentQueue","refx.interop/empty-queue","refx.interop/next-tick","js/goog.async.nextTick","refx.interop/after-render","refx.interop/debug-enabled?","goog/DEBUG","refx.interop/set-timeout!","f","ms","js/setTimeout","refx.interop/loggers","js/console.debug","js/console","js/console.log","js/console.warn","js/console.error","refx.interop/log","level","args","cljs.core.apply"],"sourcesContent":["(ns refx.interop\n  (:require [goog.async.nextTick]))\n\n(def empty-queue #queue [])\n\n(def next-tick goog.async.nextTick)\n\n(def after-render next-tick)  ;; is there an equivalent in plain React?\n\n;; Make sure the Google Closure compiler sees this as a boolean constant,\n;; otherwise Dead Code Elimination won't happen in `:advanced` builds.\n;; Type hints have been liberally sprinkled.\n;; https://developers.google.com/closure/compiler/docs/js-for-compiler\n(def ^boolean debug-enabled? \"@define {boolean}\" ^boolean goog/DEBUG)\n\n(defn set-timeout! [f ms]\n  (js/setTimeout f ms))\n\n(def loggers\n  {:debug (.bind js/console.debug js/console)\n   :info  (.bind js/console.log js/console)\n   :warn  (.bind js/console.warn js/console)\n   :error (.bind js/console.error js/console)})\n\n(defn log [level args]\n  (apply (loggers level) args))\n"],"x_google_ignoreList":[0]}