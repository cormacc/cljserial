shadow$provide.module$node_modules$$supabase$storage_js$dist$main$lib$errors = function(global, require, module, exports) {
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.StorageUnknownError = exports.StorageApiError = exports.isStorageError = exports.StorageError = void 0;
  class StorageError extends Error {
    constructor(message) {
      super(message);
      this.__isStorageError = !0;
      this.name = "StorageError";
    }
  }
  exports.StorageError = StorageError;
  exports.isStorageError = function(error) {
    return "object" === typeof error && null !== error && "__isStorageError" in error;
  };
  class StorageApiError extends StorageError {
    constructor(message, status) {
      super(message);
      this.name = "StorageApiError";
      this.status = status;
    }
    toJSON() {
      return {name:this.name, message:this.message, status:this.status};
    }
  }
  exports.StorageApiError = StorageApiError;
  class StorageUnknownError extends StorageError {
    constructor(message, originalError) {
      super(message);
      this.name = "StorageUnknownError";
      this.originalError = originalError;
    }
  }
  exports.StorageUnknownError = StorageUnknownError;
};

//# sourceMappingURL=module$node_modules$$supabase$storage_js$dist$main$lib$errors.js.map
