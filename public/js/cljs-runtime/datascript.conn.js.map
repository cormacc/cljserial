{"version":3,"sources":["datascript/conn.cljc"],"mappings":"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","names":["other__48936__auto__","this__48935__auto__","oldv__48943__auto__","newv__48938__auto__","seq__91610","cljs.core/seq","watches","chunk__91611","count__91612","i__91613","vec__91646","k__48944__auto__","cljs.core.nth","f__48939__auto__","temp__5823__auto__","cljs.core/chunked-seq?","c__5525__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","vec__91659","cljs.core/first","cljs.core/next","key__48945__auto__","cljs.core.assoc","cljs.core.dissoc","o__48937__auto__","goog/getUid","cljs.core/constantly","a__48940__auto__","cljs.core/List","b__48941__auto__","xs__48942__auto__","cljs.core/cons","meta","cljs.core/PROTOCOL_SENTINEL","validator__48947__auto__","value__48948__auto__","cljs.core.ex_info","seq__91744","chunk__91745","count__91746","i__91747","vec__91786","w__48949__auto__","vec__91821","args__48950__auto__","cljs.core/deref","cljs.core.apply","validator","not-found__48946__auto__","G__91873","cljs.core/Keyword","this__5287__auto__","writer__5288__auto__","opt__5289__auto__","cljs.core/-write","datascript.conn/Conn","datascript.conn/->Conn","var_args","G__91898","args-arr__5751__auto__","len__5726__auto__","i__5727__auto__","argseq__5752__auto__","cljs.core/IndexedSeq","rest__48951__auto__","opts__48952__auto__","cljs.core/array-map","ref__48953__auto__","temp__5827__auto__","meta__48954__auto__","cljs.core/reset-meta!","seq91895","G__91896","self__5711__auto__","atom","this","oldv","newv","cljs.core/compare-and-set!","datascript.conn/make-conn","opts","G__91914","cljs.core.atom","G__91919","datascript.conn/with","js/Error","db","tx-data","datascript.conn.with$","tx-meta","datascript.db/db?","datascript.db/FilteredDB","datascript.db/transact-tx-data","datascript.db/->TxReport","datascript.conn/db-with","datascript.conn/conn?","conn","and__5000__auto__","cljs.core/native-satisfies?","cljs.core/IDeref","temp__5825__auto__","datascript.conn/conn-from-db","storage","datascript.storage/storage","datascript.storage.store","G__91986","datascript.conn/conn-from-datoms","datoms","datascript.db/init-db","schema","datascript.storage/maybe-adapt-storage","G__92044","datascript.conn/create-conn","datascript.db/empty-db","datascript.conn/-transact!","*report","cljs.core/volatile!","cljs.core.swap_BANG_","r","cljs.core/vreset!","G__92102","datascript.conn/transact!","datascript.conn.transact_BANG_","report","seq__92112","chunk__92113","count__92114","i__92115","vec__92132","vec__92142","_","callback","G__92152","datascript.conn/reset-conn!","datascript.conn.reset_conn_BANG_","db-before","datascript.db/map->TxReport","cljs.core.concat","p1__92148#","cljs.core.map","datascript.db/-datoms","cljs.core/assoc","cljs.core/reset!","seq__92163","chunk__92164","count__92165","i__92166","vec__92189","vec__92195","datascript.conn/reset-schema!","datascript.db/with-schema","G__92218","datascript.conn/listen!","datascript.conn.listen_BANG_","cljs.core.rand","key","cljs.core/update","datascript.conn/unlisten!","cljs.core/dissoc"],"sourcesContent":["(ns datascript.conn\n  (:require\n    [datascript.db :as db #?@(:cljs [:refer [DB FilteredDB]])]\n    [datascript.storage :as storage]\n    [extend-clj.core :as extend]\n    [me.tonsky.persistent-sorted-set :as set])\n  #?(:clj\n     (:import\n       [datascript.db DB FilteredDB])))\n\n(extend/deftype-atom Conn [atom]\n  (deref-impl [this]\n    (:db @atom))\n  (compare-and-set-impl [this oldv newv]\n    (compare-and-set!\n      atom\n      (assoc @atom :db oldv)\n      (assoc @atom :db newv))))\n\n(defn- make-conn [opts]\n  (->Conn (atom opts)))\n\n(defn with\n  ([db tx-data] (with db tx-data nil))\n  ([db tx-data tx-meta]\n   {:pre [(db/db? db)]}\n   (if (instance? FilteredDB db)\n     (throw (ex-info \"Filtered DB cannot be modified\" {:error :transaction/filtered}))\n     (db/transact-tx-data (db/->TxReport db db [] {} tx-meta) tx-data))))\n\n(defn ^DB db-with\n  \"Applies transaction to an immutable db value, returning new immutable db value. Same as `(:db-after (with db tx-data))`.\"\n  [db tx-data]\n  {:pre [(db/db? db)]}\n  (:db-after (with db tx-data)))\n\n(defn conn? [conn]\n  (and\n    #?(:clj  (instance? clojure.lang.IDeref conn)\n       :cljs (satisfies? cljs.core/IDeref conn))\n    (if-some [db @conn]\n      (db/db? db)\n      true)))\n\n(defn conn-from-db [db]\n  {:pre [(db/db? db)]}\n  (if-some [storage (storage/storage db)]\n    (do\n      (storage/store db)\n      (make-conn\n        {:db db\n         :tx-tail []\n         :db-last-stored db}))\n    (make-conn {:db db})))\n\n(defn conn-from-datoms\n  ([datoms]\n   (conn-from-db (db/init-db datoms nil {})))\n  ([datoms schema]\n   (conn-from-db (db/init-db datoms schema {})))\n  ([datoms schema opts]\n   (conn-from-db (db/init-db datoms schema (storage/maybe-adapt-storage opts)))))\n\n(defn create-conn\n  ([]\n   (conn-from-db (db/empty-db nil {})))\n  ([schema]\n   (conn-from-db (db/empty-db schema {})))\n  ([schema opts]\n   (conn-from-db (db/empty-db schema (storage/maybe-adapt-storage opts)))))\n\n#?(:clj\n   (defn restore-conn\n     ([storage]\n      (restore-conn storage {}))\n     ([storage opts]\n      (when-some [[db tail] (storage/restore-impl storage opts)]\n        (make-conn\n          {:db (storage/db-with-tail db tail)\n           :tx-tail tail\n           :db-last-stored db})))))\n\n(defn ^:no-doc -transact! [conn tx-data tx-meta]\n  {:pre [(conn? conn)]}\n  (let [*report (volatile! nil)]\n    (swap! conn\n      (fn [db]\n        (let [r (with db tx-data tx-meta)]\n          (vreset! *report r)\n          (:db-after r))))\n    #?(:clj\n       (when-some [storage (storage/storage @conn)]\n         (let [{db     :db-after\n                datoms :tx-data} @*report\n               settings (set/settings (:eavt db))\n               *atom    (:atom conn)\n               tx-tail' (:tx-tail (swap! *atom update :tx-tail conj datoms))]\n           (if (> (transduce (map count) + 0 tx-tail') (:branching-factor settings))\n             ;; overflow tail\n             (do\n               (storage/store-impl! db (storage/storage-adapter db) false)\n               (swap! *atom assoc\n                 :tx-tail []\n                 :db-last-stored db))\n             ;; just update tail\n             (storage/store-tail db tx-tail')))))\n    @*report))\n\n(defn transact!\n  ([conn tx-data]\n   (transact! conn tx-data nil))\n  ([conn tx-data tx-meta]\n   {:pre [(conn? conn)]}\n   (locking conn\n     (let [report (-transact! conn tx-data tx-meta)]\n       (doseq [[_ callback] (:listeners @(:atom conn))]\n         (callback report))\n       report))))\n\n(defn reset-conn!\n  ([conn db]\n   (reset-conn! conn db nil))\n  ([conn db tx-meta]\n   {:pre [(conn? conn)\n          (db/db? db)]}\n   (let [db-before @conn\n         report    (db/map->TxReport\n                     {:db-before db-before\n                      :db-after  db\n                      :tx-data   (concat\n                                   (when db-before\n                                     (map #(assoc % :added false) (db/-datoms db-before :eavt nil nil nil nil)))\n                                   (db/-datoms db :eavt nil nil nil nil))\n                      :tx-meta   tx-meta})]\n     (if-some [storage (storage/storage db-before)]\n       (do\n         (storage/store db)\n         (swap! (:atom conn) assoc\n           :db db\n           :tx-tail []\n           :db-last-stored db))\n       (reset! conn db))\n     (doseq [[_ callback] (:listeners @(:atom conn))]\n       (callback report))\n     db)))\n\n(defn reset-schema! [conn schema]\n  {:pre [(conn? conn)]}\n  (let [db (swap! conn db/with-schema schema)]\n    #?(:clj\n       (when-some [storage (storage/storage @conn)]\n         (storage/store-impl! db (storage/storage-adapter db) true)\n         (swap! (:atom conn) assoc\n           :tx-tail []\n           :db-last-stored db)))\n    db))\n\n(defn listen!\n  ([conn callback]\n   (listen! conn (rand) callback))\n  ([conn key callback]\n   {:pre [(conn? conn)]}\n   (swap! (:atom conn) update :listeners assoc key callback)\n   key))\n\n(defn unlisten! [conn key]\n  {:pre [(conn? conn)]}\n  (swap! (:atom conn) update :listeners dissoc key))\n"],"x_google_ignoreList":[0]}