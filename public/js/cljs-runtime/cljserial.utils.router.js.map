{"version":3,"sources":["cljserial/utils/router.cljs"],"mappings":"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","names":["cljserial.utils.router/RoutePath","cljserial.utils.router/RouteProps","cljserial.utils.router/PureRouteProps","malli.util.merge","cljserial.utils.router/Route","cljserial.utils.router/PureRoute","js/Error","%","cljserial.utils.router/augment-reitit-route-props","route-props","match-name","malli.core.validate","malli.core/validate","name","active","cljs.core._EQ_","cljs.core.assoc","reitit.frontend.easy.href","cljserial.utils.router/augment-reitit-routes","routes","iter__5523__auto__","s__52180","cljs.core/LazySeq","temp__5804__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__5521__auto__","size__5522__auto__","cljs.core/count","b__52186","cljs.core/chunk-buffer","i__52185","vec__52187","cljs.core/-nth","cljs.core.nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__52179","cljs.core/chunk-rest","vec__52194","cljs.core/first","cljs.core/cons","cljs.core/rest","route","cljserial.utils.router/get-default-view","cljs.core/second","cljserial.utils.router/get-match-view","route-match","default-view","cljserial.utils.router/extract-valid-route","default-route","props__38176__auto__","clj-props__38177__auto__","uix.core/glue-args","vec__52219","map__52222","cljs.core/--destructure-map","cljs.core.get","f__38178__auto__","js/goog.DEBUG","cljserial.utils.router/inject-routes","f__38107__auto__","*current-component*-orig-val__52232","uix.core/*current-component*","*current-component*-temp-val__52233","cljs.core/map?","js/window","js/window.uix","js/window.uix.dev","sig__38116__auto__","js/window.uix.dev.signature!","js/window.uix.dev.register!","languages","layout","with-auth","session","G__52230","cljserial.utils.dbfx/use-sub","G__52231","route-name","uix.compiler.alpha/component-element","stack.services.auth/sign-out","stack.services.auth/ui-component","cljserial.utils.router/start!","reitit.frontend.easy/start!","reitit.frontend.router","m","G__52238","cljserial.utils.dbfx/dispatch","p__52239","map__52240","cljserial.utils.router/render!","stack.services.auth/init","cljserial.utils.uix/render","cljs.core/chunk-first"],"sourcesContent":["(ns cljserial.utils.router\n  (:require\n   [malli.core :as m]\n   [malli.util :as mu]\n   [reitit.frontend :as rf]\n   [reitit.frontend.easy :as rfe]\n   ;; [reitit.coercion.spec :as rss]\n   [uix.core :refer [defui $]]\n   [stack.services.auth :as auth]\n   [cljserial.utils.dbfx :refer [use-sub dispatch]]\n   [cljserial.utils.uix :as uix-utils]))\n\n;; -------------------------------------------------------------------\n;; -- Specs --------------------------------------------------\n\n;; TODO: Does reitit define specs for any of this?\n(def RoutePath :string)\n\n;; The route props required by reitit\n(def RouteProps\n  [:map\n   [:name :keyword]\n   [:title :string]\n   ;;TODO: Return type of view function is a React element - replace :any below with something more accurate...\n   [:view [:=> :cat :any]]])\n\n;; ;; The route props augmented with the href for export/use in router-agnostic components\n(def PureRouteProps\n  (mu/merge\n   RouteProps\n   [:map\n    [:href :string]\n    [:active :boolean]]))\n\n(def Route [:tuple RoutePath RouteProps])\n(def PureRoute [:tuple RoutePath PureRouteProps])\n\n;; -------------------------------------------------------------------\n;; -- Helper functions -----------------------------------------------\n(defn- augment-reitit-route-props\n  \"Augment reitit minimal route props with a href derived from the title.\n  N.B. Calling this BEFORE starting the router will cause an error as depends on existing history.\"\n  [route-props match-name]\n  {:pre [(m/validate RouteProps route-props)]\n   :post [m/validate PureRouteProps %]}\n  (let [name (:name route-props)\n        active (= name match-name)]\n    (assoc route-props :href (rfe/href name) :active active)))\n\n(defn- augment-reitit-routes\n  \"Augment each reitit route with a href derived from the title.\"\n  [routes match-name]\n  {:pre [(m/validate [:sequential Route] routes)]\n   :post [m/validate [:sequential PureRoute] %]}\n  (for [[route route-props] routes]\n    [route (augment-reitit-route-props route-props match-name)]))\n\n(defn get-default-view [routes]\n  (:view (second (first routes))))\n\n(defn get-match-view [routes route-match]\n  (let [default-view (get-default-view routes)]\n    (if route-match\n      (:view (:data route-match))\n      default-view)))\n\n(defn extract-valid-route [routes route-match]\n  (let [default-route (second (first routes))]\n    (if route-match\n      (:data route-match)\n      default-route)))\n\n(defui inject-routes [{:keys [routes languages layout with-auth]}]\n  (let [session (use-sub [:auth-session])\n        route-match (use-sub [:route-match])\n        route (extract-valid-route routes route-match)\n        route-name (:name route)]\n    (if session\n      ($ layout {:routes (augment-reitit-routes routes route-name)\n                 :languages languages\n                 :view (:view route)\n                 :on-sign-out auth/sign-out})\n      ($ auth/ui-component))))\n\n(defn start! [routes]\n  {:pre [(m/validate [:sequential Route] routes)]}\n  (rfe/start!\n   (rf/router routes)\n   ;; reitit supports dynamic routes using tokens -- \"/:company/users/:user-id\" for example\n   ;; If using this, we'd want to enable coercion (we're just using simple routes currently)...\n   ;; See https://cljdoc.org/d/metosin/reitit/0.7.0-alpha7/doc/coercion/coercion-explained\n   ;; (rf/router reitit-routes {:data {:coercion rss/coercion}})\n   (fn [m]\n     (dispatch [:route-matched m]))\n    ;; set to false to enable HistoryAPI\n   {:use-fragment true}))\n\n\n(defn render! [{:keys [routes languages layout with-auth]}]\n  (auth/init with-auth)\n  (start! routes)\n  (uix-utils/render ($ inject-routes {:routes routes :languages languages :layout layout :with-auth with-auth})))\n"]}