{
"version":3,
"file":"module$node_modules$use_sync_external_store$cjs$use_sync_external_store_shim_development.js",
"lineCount":61,
"mappings":"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",
"sources":["node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$use_sync_external_store$cjs$use_sync_external_store_shim_development\"] = function(global,require,module,exports) {\n/**\n * @license React\n * use-sync-external-store-shim.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var React = require('react');\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nvar objectIs = typeof Object.is === 'function' ? Object.is : is;\n\n// dispatch for CommonJS interop named imports.\n\nvar useState = React.useState,\n    useEffect = React.useEffect,\n    useLayoutEffect = React.useLayoutEffect,\n    useDebugValue = React.useDebugValue;\nvar didWarnOld18Alpha = false;\nvar didWarnUncachedGetSnapshot = false; // Disclaimer: This shim breaks many of the rules of React, and only works\n// because of a very particular set of implementation details and assumptions\n// -- change any one of them and it will break. The most important assumption\n// is that updates are always synchronous, because concurrent rendering is\n// only available in versions of React that also have a built-in\n// useSyncExternalStore API. And we only use this shim when the built-in API\n// does not exist.\n//\n// Do not assume that the clever hacks used by this hook also work in general.\n// The point of this shim is to replace the need for hacks by other libraries.\n\nfunction useSyncExternalStore(subscribe, getSnapshot, // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n// React do not expose a way to check if we're hydrating. So users of the shim\n// will need to track that themselves and return the correct value\n// from `getSnapshot`.\ngetServerSnapshot) {\n  {\n    if (!didWarnOld18Alpha) {\n      if (React.startTransition !== undefined) {\n        didWarnOld18Alpha = true;\n\n        error('You are using an outdated, pre-release alpha of React 18 that ' + 'does not support useSyncExternalStore. The ' + 'use-sync-external-store shim will not work correctly. Upgrade ' + 'to a newer pre-release.');\n      }\n    }\n  } // Read the current snapshot from the store on every render. Again, this\n  // breaks the rules of React, and only works here because of specific\n  // implementation details, most importantly that updates are\n  // always synchronous.\n\n\n  var value = getSnapshot();\n\n  {\n    if (!didWarnUncachedGetSnapshot) {\n      var cachedValue = getSnapshot();\n\n      if (!objectIs(value, cachedValue)) {\n        error('The result of getSnapshot should be cached to avoid an infinite loop');\n\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  } // Because updates are synchronous, we don't queue them. Instead we force a\n  // re-render whenever the subscribed state changes by updating an some\n  // arbitrary useState hook. Then, during render, we call getSnapshot to read\n  // the current value.\n  //\n  // Because we don't actually use the state returned by the useState hook, we\n  // can save a bit of memory by storing other stuff in that slot.\n  //\n  // To implement the early bailout, we need to track some things on a mutable\n  // object. Usually, we would put that in a useRef hook, but we can stash it in\n  // our useState hook instead.\n  //\n  // To force a re-render, we call forceUpdate({inst}). That works because the\n  // new object always fails an equality check.\n\n\n  var _useState = useState({\n    inst: {\n      value: value,\n      getSnapshot: getSnapshot\n    }\n  }),\n      inst = _useState[0].inst,\n      forceUpdate = _useState[1]; // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n\n\n  useLayoutEffect(function () {\n    inst.value = value;\n    inst.getSnapshot = getSnapshot; // Whenever getSnapshot or subscribe changes, we need to check in the\n    // commit phase if there was an interleaved mutation. In concurrent mode\n    // this can happen all the time, but even in synchronous mode, an earlier\n    // effect may have mutated the store.\n\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst: inst\n      });\n    }\n  }, [subscribe, value, getSnapshot]);\n  useEffect(function () {\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst: inst\n      });\n    }\n\n    var handleStoreChange = function () {\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({\n          inst: inst\n        });\n      }\n    }; // Subscribe to the store and return a clean-up function.\n\n\n    return subscribe(handleStoreChange);\n  }, [subscribe]);\n  useDebugValue(value);\n  return value;\n}\n\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  var prevValue = inst.value;\n\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n\nfunction useSyncExternalStore$1(subscribe, getSnapshot, getServerSnapshot) {\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  return getSnapshot();\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined');\n\nvar isServerEnvironment = !canUseDOM;\n\nvar shim = isServerEnvironment ? useSyncExternalStore$1 : useSyncExternalStore;\nvar useSyncExternalStore$2 = React.useSyncExternalStore !== undefined ? React.useSyncExternalStore : shim;\n\nexports.useSyncExternalStore = useSyncExternalStore$2;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","error","format","_len2","arguments","length","args","Array","_key2","printWarning","level","stack","ReactSharedInternals","ReactDebugCurrentFrame","getStackAddendum","concat","argsWithFormat","map","item","String","unshift","Function","prototype","apply","call","console","is","x","y","useSyncExternalStore","subscribe","getSnapshot","getServerSnapshot","didWarnOld18Alpha","undefined","React","startTransition","value","didWarnUncachedGetSnapshot","cachedValue","objectIs","_useState","useState","inst","forceUpdate","useLayoutEffect","checkIfSnapshotChanged","useEffect","handleStoreChange","useDebugValue","latestGetSnapshot","prevValue","nextValue","useSyncExternalStore$1","__REACT_DEVTOOLS_GLOBAL_HOOK__","registerInternalModuleStart","Error","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","Object","shim","window","document","createElement","useSyncExternalStore$2","registerInternalModuleStop"]
}
