{
"version":3,
"file":"module$node_modules$base64_js$index.js",
"lineCount":46,
"mappings":"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",
"sources":["node_modules/base64-js/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$base64_js$index\"] = function(global,require,module,exports) {\n'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","getLens","b64","len","length","Error","validLen","indexOf","placeHoldersLen","byteLength","lens","toByteArray","arr","Arr","curByte","i","tmp","revLookup","charCodeAt","fromByteArray","uint8","extraBytes","parts","len2","maxChunkLength","push","output","end","lookup","join","Uint8Array","Array","code"]
}
