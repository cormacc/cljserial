{"version":3,"sources":["rewrite_clj/parser/string.cljc"],"mappings":";AAOA,yCAAA,zCAAMA,0FACkBC;AADxB,AAEE,OAACC,qCAAoB,AAACC,yCAAuBF;;AAE/C,wCAAA,xCAAMG,wFACkBH;AADxB,AAEE,IAAMI,IAAE,AAACF,yCAAuBF;AAAhC,AACE,yDAAA,lDAACK,uDAAiBD","names":["rewrite-clj.parser.string/parse-string","reader","rewrite-clj.node.stringz/string-node","rewrite-clj.parser.impl/read-string-data","rewrite-clj.parser.string/parse-regex","h","clojure.string.join"],"sourcesContent":["(ns ^:no-doc rewrite-clj.parser.string\n  (:require [clojure.string :as string]\n            [rewrite-clj.node.stringz :as nstring]\n            [rewrite-clj.parser.impl :as pimpl]))\n\n#?(:clj (set! *warn-on-reflection* true))\n\n(defn parse-string\n  [#?(:cljs ^not-native reader :default reader)]\n  (nstring/string-node (pimpl/read-string-data reader)))\n\n(defn parse-regex\n  [#?(:cljs ^not-native reader :default reader)]\n  (let [h (pimpl/read-string-data reader)]\n    (string/join \"\\n\" h)))\n"],"x_google_ignoreList":[0]}