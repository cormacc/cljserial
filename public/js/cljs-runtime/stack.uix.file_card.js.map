{"version":3,"sources":["stack/uix/file_card.cljs"],"mappings":"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","names":["props__46991__auto__","props97694","uix.core/glue-args","vec__97697","map__97700","cljs.core.nth","cljs.core/--destructure-map","cljs.core.get","f__46992__auto__","js/goog.DEBUG","temp__5823__auto__","stack.uix.file-card/card-with-footer","f__46909__auto__","*current-component*-orig-val__97768","uix.core/*current-component*","*current-component*-temp-val__97772","cljs.core/map?","js/Error","js/Object.defineProperty","obj97789","js/window","js/window.uix","js/window.uix.dev","sig__46918__auto__","js/window.uix.dev.signature!","js/window.uix.dev.register!","filestore","on-file-click","info","entries","uix.compiler.alpha/component-element","stack.uix.cards/card","stack.uix.tables/table","uix.compiler.aot/>el","uix.compiler.attributes/interpret-attrs","cljs.core.map","p__97726","map__97727","name","type","size","p1__97691#","cljs.core.sort_by","cljs.core/vals","uix.compiler.attributes/keyword->string","_","cuerdas.core.format","props97811","vec__97824","map__97827","stack.uix.file-card/card","*current-component*-orig-val__97928","*current-component*-temp-val__97929","obj97946","title","map__97852","p__97877","map__97880","path","created","modified","synced"],"sourcesContent":["(ns stack.uix.file-card\n  (:require\n   [cuerdas.core :as str]\n   [uix.core :as uix :refer [defui $]]\n   [malli.core :as m]\n   [stack.uix.cards :as cards]\n   [stack.uix.tables :as tables]\n   [stack.schema.filestore :refer [FileStore]]))\n\n(defui card-with-footer [{:keys [filestore on-file-click]}]\n  {:pre [m/validate FileStore filestore]}\n  (let [info (:info filestore)\n        entries (:entries filestore)]\n    ($ cards/card {:title \"Files\"}\n       ($ tables/table\n          ($ :thead ($ :tr ($ :th \"type\") ($ :th \"name\") ($ :th \"size\")))\n          ($ :tbody\n             ;;FIXME: Sorting should probably happen at re-frame DB level rather than in the component?\n             (for [{:keys [name type size]} (sort-by #(str (:type %) (:name %)) (vals entries))]\n               ;;TODO: Differentiate between files and folders here...\n               ($ :tr {:key name :on-click (fn [^js _] (on-file-click name))} ($ :td (str type)) ($ :td name) ($ :td size)))\n             ($ :tr ($ :td \"Storage\") ($ :td (str/format \"%s / %s MB\" (:used_mb info) (:capacity_mb info)))))))))\n\n(defui card [{:keys [title filestore on-file-click]}]\n  ;; {:pre [m/validate FSEntryMap entries]}\n  ;; TODO: Can probably do this via nested destructuring above?\n  (let [{:keys [entries info]} filestore]\n    ($ cards/card {:title title}\n       ($ tables/table\n          ($ :thead ($ :tr  ($ :th \"path\") ($ :th \"size\") ($ :th \"created\") ($ :th \"modified\") ($ :th \"synced\")))\n          ($ :tbody\n             (for [{:keys [path size created modified synced]}  (vals entries)]\n               ($ :tr {:key path :on-click (fn [^js _] (on-file-click path))}  ($ :td path)\n                  ($ :td size)\n                  ($ :td created) ($ :td modified) ($ :td synced)))\n             ;;TODO: Allow for non-standard additional info here (indexeddb/etc)?\n             ($ :tr ($ :td \"Storage\") ($ :td (str/format \"%s / %s bytes\" (:used info) (:capacity info)))))))))\n"]}