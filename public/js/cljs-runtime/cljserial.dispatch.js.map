{"version":3,"sources":["cljserial/dispatch.cljs"],"mappings":"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","names":["cljserial.dispatch/interpolate-actions","event","actions","clojure.walk/postwalk","x","cljs.core/Keyword","G__64575","cljs.core.keyword","cljserial.dispatch/execute-actions","seq__64578","cljs.core/seq","chunk__64579","count__64580","i__64581","vec__64620","seq__64621","first__64622","cljs.core/first","cljs.core/next","temp__5823__auto__","cljs.core/chunked-seq?","c__5525__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","vec__64639","seq__64640","first__64641","action","args","G__64623","G__64642","cljs.core.apply","cljs.core/swap!","cljserial.model/!state","cljs.core/assoc","cljs.core/assoc-in","cljs.core/dissoc","current-db","cljs.core/deref","new-db","stack.utils.datascript/transact!","cljs.core.swap_BANG_","vec__64624","seq__64625","first__64626","vec__64643","seq__64644","first__64645","id","value","vec__64627","cljs.core.nth","vec__64646","key-exp","key-act","nested-actions","cljs.core._EQ_","__run-fn-form","__kind","__ns","__id","__level","sf","taoensso.telemere.impl/*rt-sig-filter*","__inst","js/Date","__thread","__root0","taoensso.telemere.impl/*trace-root*","__otel-context1","__uid","__root1","__run-result","signal__48019__auto__","cljs.core/Delay","signal__48010__auto__","taoensso.telemere.impl/Signal","taoensso.telemere/*ctx*","taoensso.telemere.impl/*trace-parent*","temp__5821__auto__","taoensso.telemere/*middleware*","sig-middleware__48011__auto__","taoensso.telemere.impl/dispatch-signal!","taoensso.telemere.impl/WrappedSignal","vec__64630","vec__64649","path","data","stack.utils.filestore/write+","p1__64576#","promesa.core.then","G__64633","G__64652","stack.utils.filestore/read+","p1__64577#","G__64634","G__64653","map__64635","cljs.core/--destructure-map","cljs.core.get","map__64654","event-type","event-data","cljs.core/rest","current-context","new-context","G__64636","G__64637","G__64638","G__64655","G__64656","G__64657","statecharts.core/transition","stack.statecharts.webserial/controller","cljserial.dispatch/handle-events"],"sourcesContent":["(ns cljserial.dispatch\n  (:require [clojure.walk :as walk]\n            [taoensso.telemere :as t]\n            [promesa.core :as p]\n            [statecharts.core :as hsm]\n            [stack.utils.datascript :as du]\n            [stack.utils.filestore :as filestore]\n            [stack.statecharts.webserial :as webserial]\n            [cljserial.model :as model]))\n\n\n;; replicant event dispatch...\n;; See:\n;; - https://replicant.fun/event-handlers/\n;; - https://replicant.fun/life-cycle-hooks/\n;; - https://github.com/anteoas/replicant-mini-app/blob/main/src/mini/app.cljs\n\n(defn interpolate-actions [event actions]\n  (walk/postwalk\n   (fn [x]\n     (cond\n       ;; Value interpolation....\n       (keyword? x)\n       (case x\n         :event/target.id (.. event -target -id)\n         :event/target.value (.. event -target -value)\n         :event/target.value-as-int  (.. event -target -valueAsNumber)\n         :event/target.value-as-keyword (keyword (.. event -target -value))\n         :event/key (.. event -key)\n         x)\n       ;; Augment a simple-input event\n       ;; ... this is overengineering / needless obfuscation\n       ;; (and (vector? x) (= :simple/input (first x)))\n       ;; [:view/assoc-in [:user-input (keyword (.. event -target -id))] (second x)]\n       :else x))\n   actions))\n\n(defn execute-actions [actions]\n  (doseq [[action & args] actions]\n    (case action\n\n;;=== View model actions ===\n      :view/assoc\n      (apply swap! model/!state assoc args)\n\n      :view/assoc-in\n      (apply swap! model/!state assoc-in args)\n\n      :view/dissoc\n      (apply swap! model/!state dissoc args)\n\n;;=== Domain model actions ===\n      :domain/transact\n      (let [current-db (:domain-db @model/!state)\n            new-db (du/transact! current-db args)]\n        ;;TODO: Update tx-time and valid-time if they're pointing at prev transaction\n        (swap! model/!state assoc :domain-db new-db))\n\n;;=== User actions ===\n      :user/input\n      (let [[id & value] args]\n        (apply swap! model/!state assoc-in [:user-input id] value))\n\n      :user/on-key\n      (let [[key-exp key-act nested-actions] args]\n        (when (= key-exp key-act)\n          (execute-actions nested-actions)))\n\n      :user/sign-out\n      (t/log! \"IMPLEMENT ME!\")\n\n;;=== Filesystem actions ===\n      ;;Initiate a write to the local filestore\n      :file/write\n      (let [[path data] args]\n        (-> (filestore/write+ path data)\n            (p/then #(execute-actions [[:file/update-index %]]))))\n\n      ;;Initiate a read from the local filestore\n      :file/read\n      (-> (filestore/read+ (first args))\n          (p/then #(execute-actions [[:file/update-index %]])))\n\n      ;;Update the file index after a read or write\n      ;;TODO: Strictly speaking should also update the storage usage attributes here....\n      :file/update-index\n      (let [{:keys [path data]} args]\n        (t/event! ::file-index-updated {:data {:args args :path path :data data}})\n        (apply swap! model/!state assoc-in [:filestore :entries path] args)\n        ;; Display the file content for editing...\n        ;; ... FIXME: Why doesn't this work? It only takes the first char\n        ;; (apply swap! model/!state assoc-in [:user-input :create-file-path] path)\n        ;; (apply swap! model/!state assoc-in [:user-input :create-file-content] data)\n        ;; ....\n        )\n\n;;=== Statechart integrations ===\n      :webserial\n      (let [event-type (first args)\n            event-data (rest args)\n            current-context (:webserial @model/!state)\n            new-context (hsm/transition webserial/controller current-context {:type event-type :data event-data})]\n        (swap! model/!state assoc :webserial new-context))\n\n\n;;=== Default action / catchall -- log an error ===\n      (t/event! ::action-unrecognised {:level :error :data {:action action :args args}}))))\n\n(defn handle-events [event-data actions]\n  (t/event! ::handle-event {:level :debug :data {:event-data event-data :actions actions}})\n  (->> actions\n       (interpolate-actions\n        (:replicant/dom-event event-data))\n       execute-actions))\n"]}