{"version":3,"sources":["gadget/browsable.cljc"],"mappings":";AAEA,AAAA;AAAA;;;6BAAA,7BAAaW;;AAAb,IAAAX,+CAAA,WAEYY;AAFZ,AAAA,IAAAX,kBAAA,EAAA,SAAA,OAAA,fAEYW,oBAAAA;IAFZV,kBAAA,CAAAC,yBAAA,AAAAC,YAAAH;AAAA,AAAA,GAAA,GAAA,CAAAC,mBAAA;AAAA,QAAAA,gDAAAA,sDAAAA,RAEYU,mCAAAA;;AAFZ,IAAAP,kBAAA,CAAAF,yBAAA;AAAA,AAAA,GAAA,GAAA,CAAAE,mBAAA;AAAA,QAAAA,gDAAAA,sDAAAA,RAEYO,mCAAAA;;AAFZ,MAAA,AAAAN,2BAAA,oBAEYM;;;;AAFZ,AAAA;;;2BAAA,3BAEGT,8DAASS;AAFZ,AAAA,IAAAL,qBAAA,AAAAC,4CAAA,AAAAC,qBAAA,AAAA,NAEYG;AAFZ,AAAA,GAAAL;AAAA,IAAAG,0BAAAH;AAAA,AAAA,QAAAG,wDAAAA,8DAAAA,RAEYE,2CAAAA;;AAFZ,GAAA,EAAA,GAAA,SAAA,aAAA,GAAA,CAAA,mDAAA,5EAEYA,yBAAAA;AAFZ,OAEYA,gDAAAA;;AAFZ,OAAAZ,6CAEYY;;;;;AAFZ,AAIA,AAAA,CAAA,AAAA,mEAAAC,nEAAsBC;;AAAtB,CAAA,AAAA,AAAsBA,kFAGpB,WAAUC;AAAV,AAAA,YAAA,RAAUA;AAAV,AAAa,OAACC,oDAAYC,iBAAOF;;AAEnC,AAAA,CAAA,AAAA,uDAAAF,vDAAsBK;;AAAtB,CAAA,AAAA,AAAsBA,sEAGpB,WAAUC;AAAV,AAAA,YAAA,RAAUA;AAAV,AAAa,OAACH,oDAAYC,iBAAOE;;AAEnC,AAAA,CAAA,AAAA,oEAAAN,pEAAsBO;;AAAtB,CAAA,AAAA,AAAsBA,mFAGpB,WAAUC;AAAV,AAAA,YAAA,RAAUA;AAAV,AAEkB,OAACL,oDAAY,6CAAA,WAAAQ,xDAACC;AAAD,AAAO,2BAAAD,iBAAA,2CAAA,0EAAA,1JAACE;sFAFrBL,jEACA,AAACC,gDAAQC,lEACgDN;;AAE7E,+BAAA,/BAAKU;AAGL,AAAA,CAAA,AAAA,0DAAAd,1DAAsBe;;AAAtB,CAAA,AAAA,AAAsBA,yEAGpB,WAAUP;AAAV,AAAA,YAAA,RAAUA;AAAV,sJAAkBA,1EACA,AAACQ,6CAAKF,zHACN,OAACX,oDAAYC;;AAEjC,AAAA,CAAA,AAAA,6DAAAJ,7DAAsBiB;;AAAtB,CAAA,AAAA,AAAsBA,4EAGpB,WAAUT;AAAV,AAAA,YAAA,RAAUA;AAAV,AAAa,OAACL,oDAAYC,iBAAOI","names":["gadget$browsable$Browsable$entries$dyn","x__5350__auto__","m__5351__auto__","gadget.browsable/entries","goog/typeOf","m__5349__auto__","cljs.core/missing-protocol","temp__5821__auto__","cljs.core.get","cljs.core/meta","meta-impl__5352__auto__","gadget.browsable/Browsable","data","cljs.core/PROTOCOL_SENTINEL","cljs.core/PersistentVector","v","cljs.core.map_indexed","cljs.core/vector","cljs.core/List","l","cljs.core/PersistentHashSet","s","cljs.core.sort_by","cljs.core/pr-str","p1__61318#","cljs.core.comp","cljs.core/with-meta","gadget.browsable/lazy-sample","cljs.core/LazySeq","cljs.core.take","cljs.core/IndexedSeq"],"sourcesContent":["(ns gadget.browsable)\n\n(defprotocol Browsable\n  :extend-via-metadata true\n  (entries [data] \"Return a sorted seq of key value pairs for browsing\"))\n\n(extend-type #?(:cljs cljs.core/PersistentVector\n                :clj clojure.lang.PersistentVector)\n  Browsable\n  (entries [v] (map-indexed vector v)))\n\n(extend-type #?(:cljs cljs.core/List\n                :clj clojure.lang.PersistentList)\n  Browsable\n  (entries [l] (map-indexed vector l)))\n\n(extend-type #?(:cljs cljs.core/PersistentHashSet\n                :clj clojure.lang.PersistentHashSet)\n  Browsable\n  (entries [s] (->> s\n                    (sort-by pr-str)\n                    (map-indexed (comp #(with-meta % {:synthetic-key? true}) vector)))))\n\n(def lazy-sample 1000)\n\n;; TODO: Make it possible to browse other sections of the seq than [0-1000]\n(extend-type #?(:cljs cljs.core/LazySeq\n                :clj clojure.lang.LazySeq)\n  Browsable\n  (entries [s] (->> s\n                    (take lazy-sample)\n                    (map-indexed vector))))\n\n(extend-type #?(:cljs cljs.core/IndexedSeq\n                :clj clojure.lang.IndexedSeq)\n  Browsable\n  (entries [s] (map-indexed vector s)))\n"],"x_google_ignoreList":[0]}