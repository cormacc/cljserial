{"version":3,"sources":["stack/apis/indexed_db.cljs"],"mappings":"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","names":["var_args","args__5732__auto__","len__5726__auto__","i__5727__auto__","argseq__5733__auto__","cljs.core/IndexedSeq","stack.apis.indexed-db/open+","p__92464","map__92470","cljs.core/--destructure-map","cljs.core.get","seq92432","G__92434","cljs.core/first","cljs.core/next","self__5711__auto__","id","schema-version","on-upgrade","__run-fn-form","__kind","__ns","__id","__level","sf","taoensso.telemere.impl/*rt-sig-filter*","__inst","js/Date","__thread","__root0","taoensso.telemere.impl/*trace-root*","__otel-context1","__uid","__root1","__run-result","signal__42410__auto__","cljs.core/Delay","signal__42401__auto__","taoensso.telemere.impl/Signal","taoensso.telemere/*ctx*","taoensso.telemere.impl/*trace-parent*","temp__5821__auto__","taoensso.telemere/*middleware*","sig-middleware__42402__auto__","taoensso.telemere.impl/dispatch-signal!","taoensso.telemere.impl/WrappedSignal","result","promesa.core/deferred","js/window","cljs.core/clj->js","stack.utils.events/add-listener","error","promesa.core/reject!","idb-version-change-event","evt","G__92645","stack.utils.events/extract-result","promesa.core.resolve_BANG_","stack.apis.indexed-db/records=>sorted-map","records","key-path","cljs.core.into","cljs.core/sorted-map","iter__5480__auto__","s__92677","cljs.core/LazySeq","temp__5823__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__5478__auto__","size__5479__auto__","cljs.core/count","b__92679","cljs.core/chunk-buffer","i__92678","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__92676","cljs.core/chunk-rest","cljs.core/cons","cljs.core/rest","r","stack.apis.indexed-db/get-all+","p__92689","map__92690","seq92685","G__92686","G__92687","idb-conn","store-id","as","conn-id","promesa.protocols/-mcat","promesa.protocols/-promise","___91412__auto__","object-store","cljs.core.keyword","e","cljs.core.js__GT_clj","cljs.core._EQ_","stack.apis.indexed-db/define-error-callback","label","context","result+","cljs.core/assoc-in","stack.apis.indexed-db/define-success-callback","stack.apis.indexed-db/add+","data","log-context","_result","stack.apis.indexed-db/delete+","key","cljs.core/chunk-first"],"sourcesContent":["(ns stack.apis.indexed-db\n  (:require\n   [promesa.core :as p]\n   [taoensso.telemere :as t]\n   [stack.utils.events :as events]))\n\n;; See https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB\n;; This wraps indexed-db in a promise-based API - may be helpful? https://github.com/jakearchibald/idb\n\n(defn open+ [id & {:keys [schema-version on-upgrade] :or {schema-version 1}}]\n  (t/event! ::open-connection {:data {:id id :schema-version schema-version}})\n  (let [result (p/deferred)]\n    (-> js/window\n        (.-indexedDB)\n        (.open id (clj->js schema-version))\n        (events/add-listener \"error\"\n                             (fn [error]\n                               (t/event! ::idb-open-error {:data {:id id :error error}})\n                               (p/reject! result error)))\n        (events/add-listener \"blocked\"\n                             (fn [idb-version-change-event]\n                               (t/event! ::idb-open-blocked {:data {:id id :event idb-version-change-event}})\n                               (p/reject! result idb-version-change-event)))\n        (events/add-listener \"upgradeneeded\"\n                             (fn [evt]\n                               (t/event! ::idb-create-or-upgrade {:level :warn :data {:id id :schema-version schema-version}})\n                               (on-upgrade (events/extract-result evt))))\n        (events/add-listener \"success\"\n                             (fn [evt]\n                               (t/event! ::idb-open-ok {:data {:id id :schema-version schema-version}})\n                               ;;Resolve to the idb connection\n                               (p/resolve! result (events/extract-result evt)))))\n    result))\n\n(comment\n  (def conn (atom nil))\n  (-> (open+ \"cljstack\" :on-upgrade #(t/log! {:data %} \"Wahey\"))\n      (p/then #(reset! conn %)))\n\n  ,)\n\n(defn- records=>sorted-map [records key-path]\n  (into (sorted-map) (for [r records] [(key-path r) r])))\n\n(defn get-all+\n  \"Get all records as either a sorted map (default) or vector.\"\n  [idb-conn store-id & {:keys [as] :or {as :map}}]\n  (let [conn-id (.-name idb-conn)\n        result (p/deferred)]\n    (p/let [object-store (-> (.transaction idb-conn [store-id] \"readonly\")\n                             (.objectStore store-id))\n            key-path (keyword (.-keyPath object-store))]\n      (-> object-store\n          (.getAll)\n          (events/add-listener\n           \"success\"\n           (fn [e]\n             (t/event! ::idb-get-all-ok {:data {:id conn-id :store store-id}})\n             (let [records (-> (events/extract-result e)\n                               (js->clj :keywordize-keys true))]\n               (p/resolve! result (if (= as :map)\n                                    (records=>sorted-map records key-path)\n                                    records)))))))\n    result))\n\n;; (defn load-store+ [idb-conn store-id]\n;;   (p/->\n;;    ;;TODO: Open and get-all is a common use-case... add sugar in indexed-db namespace?\n;;    (indexed-db/open+ index-connection index-store-id\n;;                      :schema-version index-schema-version\n;;                      :on-upgrade index-schema-upgrade-handler)\n;;    (p/then #(indexed-db/get-all+ % index-store-id))\n;;     ;;     ...\n;;    (p/then #(into (sorted-map) (for [e %] [(:path e) e])))))\n\n(defn- define-error-callback [label context result+]\n  (fn [error]\n    (t/event! label {:level :error\n                     :data (assoc-in context [:error] error)})\n    (p/reject! result+ error)))\n\n(defn- define-success-callback [label context result+]\n  (fn [result]\n    (t/event! label {:level :info :data context})\n    (p/resolve! result+ result)))\n\n(defn add+ [idb-conn store-id data]\n  (let [conn-id (.-name idb-conn)\n        log-context {:id conn-id :store-id store-id}\n        result (p/deferred)]\n    (t/event! ::add {:level :debug :data {:id conn-id :store store-id :data data}})\n    (-> (.transaction idb-conn [store-id] \"readwrite\")\n        (.objectStore store-id)\n        (.add (clj->js data))\n        (events/add-listener \"error\" (fn [error]\n                                       (t/event! ::idb-add-error {:data {:id conn-id\n                                                                     :store store-id\n                                                                     :error error}})\n                                       (p/reject! result error)))\n        (events/add-listener \"success\" (fn [_result]\n                                         (t/event! ::idb-add-ok {:level :debug :data {:id conn-id\n                                                                                  :store store-id}})\n                                         (p/resolve! result data))))\n    result))\n\n\n(defn delete+ [idb-conn store-id key]\n  (let [conn-id (.-name idb-conn)\n        log-context {:id conn-id :store-id store-id}\n        result (p/deferred)]\n    (t/event! ::idb-delete {:level :debug :data log-context})\n    (-> (.transaction idb-conn [store-id] \"readwrite\")\n        (.objectStore store-id)\n        (.delete key)\n        (events/add-listener \"error\" (define-error-callback ::idb-delete-error log-context result))\n        (events/add-listener \"success\" (define-success-callback ::idb-delete-ok log-context result)))))\n"]}