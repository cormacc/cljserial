{"version":3,"sources":["datascript/impl/entity.cljc"],"mappings":"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","names":["datascript.impl.entity/entid","db","eid","cljs.core/sequential?","cljs.core/Keyword","datascript.db/entid","js/Error","datascript.impl.entity/entity","datascript.db/db?","temp__5823__auto__","e","datascript.db/numeric-eid-exists?","G__91630","G__91631","G__91632","G__91633","datascript.impl.entity/->Entity","cljs.core/volatile!","datascript.impl.entity/entity-attr","a","datoms","datascript.db/multival?","datascript.db/ref?","p1__91642#","p2__91643#","cljs.core.reduce","cljs.core.conj","p1__91644#","p2__91645#","cljs.core/first","datascript.impl.entity/-lookup-backwards","attr","not-found","temp__5821__auto__","cljs.core/not-empty","datascript.db/-search","datascript.db/component?","p1__91654#","p2__91655#","datascript.impl.entity/multival->js","val","cljs.core/to-array","datascript.impl.entity/js-seq","datascript.impl.entity/touch","iter__5480__auto__","s__91693","cljs.core/LazySeq","cljs.core/seq","cljs.core/chunked-seq?","c__5478__auto__","size__5479__auto__","cljs.core/count","b__91695","cljs.core/chunk-buffer","i__91694","vec__91702","cljs.core/-nth","cljs.core.nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__91692","cljs.core/chunk-rest","vec__91711","cljs.core/cons","cljs.core/rest","cljs.core/deref","v","cljs.core/ES6Iterator","cljs.core/ITER_SYMBOL","this#","cljs.core/ES6EntriesIterator","unused__11220__auto__","self__","G__91899","args91726","cljs.core/aclone","this__5287__auto__","writer__5288__auto__","opt__5289__auto__","cljs.core/-write","datascript.impl.entity/Entity","touched","cache","this","cljs.core/pr-str*","other","datascript.impl.entity/equiv-entity","cljs.core/es6-iterator","cljs.core/keys","cljs.core/es6-entries-iterator","cljs.core.map","cljs.core/second","cljs.core._EQ_","datascript.db/reverse-ref?","datascript.db/reverse-ref","G__91854","datascript.impl.entity/lookup-entity","f","seq__91732","chunk__91733","count__91734","i__91735","vec__91759","c__5525__auto__","cljs.core/chunk-first","vec__91762","cljs.core/next","use-as-this","seq__91775","chunk__91776","count__91777","i__91778","vec__91811","vec__91839","o","datascript.impl.entity/hash-entity","k","cljs.core.not_EQ_","_","writer","opts","cljs.core/-pr-writer","cljs.core.assoc","datascript.impl.entity/entity?","x","that","datascript.db/combine-hashes","cljs.core/hash","goog/getUid","var_args","G__91922","datascript.impl.entity.lookup_entity","temp__5825__auto__","fexpr__91923","value","cljs.core/vreset!","datascript.impl.entity/touch-components","a->v","cljs.core/reduce-kv","acc","cljs.core/set","datascript.impl.entity/datoms->cache","part","cljs.core.partition_by","goog/exportSymbol"],"sourcesContent":["(ns ^:no-doc datascript.impl.entity\n  (:refer-clojure :exclude [keys get])\n  (:require [#?(:cljs cljs.core :clj clojure.core) :as c]\n    [datascript.db :as db]))\n\n(declare entity ->Entity equiv-entity lookup-entity touch hash-entity)\n\n(defn- entid [db eid]\n  (when (or (number? eid)\n          (sequential? eid)\n          (keyword? eid))\n    (db/entid db eid)))\n\n(defn entity [db eid]\n  {:pre [(db/db? db)]}\n  (when-let [e (entid db eid)]\n    (when (db/numeric-eid-exists? db e)\n      (->Entity db e (volatile! false) (volatile! {})))))\n\n(defn- entity-attr [db a datoms]\n  (if (db/multival? db a)\n    (if (db/ref? db a)\n      (reduce #(conj %1 (entity db (:v %2))) #{} datoms)\n      (reduce #(conj %1 (:v %2)) #{} datoms))\n    (if (db/ref? db a)\n      (entity db (:v (first datoms)))\n      (:v (first datoms)))))\n\n(defn- -lookup-backwards [db eid attr not-found]\n  (if-let [datoms (not-empty (db/-search db [nil attr eid]))]\n    (if (db/component? db attr)\n      (entity db (:e (first datoms)))\n      (reduce #(conj %1 (entity db (:e %2))) #{} datoms))\n    not-found))\n\n#?(:cljs\n   (defn- multival->js [val]\n     (when val (to-array val))))\n\n#?(:cljs\n   (defn- js-seq [e]\n     (touch e)\n     (for [[a v] @(.-cache e)]\n       (if (db/multival? (.-db e) a)\n         [a (multival->js v)]\n         [a v]))))\n\n#?(:cljs\n  (unchecked-set (.-prototype ES6Iterator) cljs.core/ITER_SYMBOL\n     (fn []\n       (this-as this# this#))))\n\n#?(:cljs\n  (unchecked-set (.-prototype ES6EntriesIterator) cljs.core/ITER_SYMBOL\n     (fn []\n       (this-as this# this#))))\n\n(deftype Entity [db eid touched cache]\n  #?@(:cljs\n      [Object\n       (toString [this]\n         (pr-str* this))\n       (equiv [this other]\n         (equiv-entity this other))\n\n       ;; js/map interface\n       (keys [this]\n         (es6-iterator (c/keys this)))\n       (entries [this]\n         (es6-entries-iterator (js-seq this)))\n       (values [this]\n         (es6-iterator (map second (js-seq this))))\n       (has [this attr]\n         (not (nil? (.get this attr))))\n       (get [this attr]\n         (if (= attr \":db/id\")\n           eid\n           (if (db/reverse-ref? attr)\n             (-> (-lookup-backwards db eid (db/reverse-ref attr) nil)\n               multival->js)\n             (cond-> (lookup-entity this attr)\n               (db/multival? db attr) multival->js))))\n       (forEach [this f]\n         (doseq [[a v] (js-seq this)]\n           (f v a this)))\n       (forEach [this f use-as-this]\n         (doseq [[a v] (js-seq this)]\n           (.call f use-as-this v a this)))\n\n       ;; js fallbacks\n       (key_set   [this] (to-array (c/keys this)))\n       (entry_set [this] (to-array (map to-array (js-seq this))))\n       (value_set [this] (to-array (map second (js-seq this))))\n\n       IEquiv\n       (-equiv [this o] (equiv-entity this o))\n\n       IHash\n       (-hash [this]\n         (hash-entity this))\n\n       ISeqable\n       (-seq [this]\n         (touch this)\n         (seq @cache))\n\n       ICounted\n       (-count [this]\n         (touch this)\n         (count @cache))\n\n       ILookup\n       (-lookup [this attr]           (lookup-entity this attr nil))\n       (-lookup [this attr not-found] (lookup-entity this attr not-found))\n\n       IAssociative\n       (-contains-key? [this k]\n         (not= ::nf (lookup-entity this k ::nf)))\n\n       IFn\n       (-invoke [this k]\n         (lookup-entity this k))\n       (-invoke [this k not-found]\n         (lookup-entity this k not-found))\n\n       IPrintWithWriter\n       (-pr-writer [_ writer opts]\n         (-pr-writer (assoc @cache :db/id eid) writer opts))]\n\n      :clj\n      [Object\n       (toString [e]      (pr-str (assoc @cache :db/id eid)))\n       (hashCode [e]      (hash-entity e))\n       (equals [e o]      (equiv-entity e o))\n\n       clojure.lang.Seqable\n       (seq [e]           (touch e) (seq @cache))\n\n       clojure.lang.Associative\n       (equiv [e o]       (equiv-entity e o))\n       (containsKey [e k] (not= ::nf (lookup-entity e k ::nf)))\n       (entryAt [e k]     (some->> (lookup-entity e k) (clojure.lang.MapEntry. k)))\n\n       (empty [e]         (throw (UnsupportedOperationException.)))\n       (assoc [e k v]     (throw (UnsupportedOperationException.)))\n       (cons  [e [k v]]   (throw (UnsupportedOperationException.)))\n       (count [e]         (touch e) (count @(.-cache e)))\n\n       clojure.lang.ILookup\n       (valAt [e k]       (lookup-entity e k))\n       (valAt [e k not-found] (lookup-entity e k not-found))\n\n       clojure.lang.IFn\n       (invoke [e k]      (lookup-entity e k))\n       (invoke [e k not-found] (lookup-entity e k not-found))]))\n\n(defn entity? [x] (instance? Entity x))\n\n#?(:cljs\n  (unchecked-set (.-prototype Entity) cljs.core/ITER_SYMBOL\n     (fn []\n       (this-as this# (.entries this#)))))\n\n#?(:clj\n   (defmethod print-method Entity [e, ^java.io.Writer w]\n     (.write w (str e))))\n\n(defn- equiv-entity [^Entity this that]\n  (and\n    (instance? Entity that)\n    (identical? (.-db this) (.-db ^Entity that)) ; `=` and `hash` on db is expensive\n    (= (.-eid this) (.-eid ^Entity that))))\n\n(defn- hash-entity [^Entity e]\n  (db/combine-hashes\n    (hash (.-eid e))\n    ;; A hash compatible with `identical?`. Consistent with `=`.\n    (#?(:clj System/identityHashCode :cljs goog/getUid) (.-db e))))\n\n(defn- lookup-entity\n  ([this attr] (lookup-entity this attr nil))\n  ([^Entity this attr not-found]\n   (if (= attr :db/id)\n     (.-eid this)\n     (if (db/reverse-ref? attr)\n       (-lookup-backwards (.-db this) (.-eid this) (db/reverse-ref attr) not-found)\n       (if-some [v (@(.-cache this) attr)]\n         v\n         (if @(.-touched this)\n           not-found\n           (if-some [datoms (not-empty (db/-search (.-db this) [(.-eid this) attr]))]\n             (let [value (entity-attr (.-db this) attr datoms)]\n               (vreset! (.-cache this) (assoc @(.-cache this) attr value))\n               value)\n             not-found)))))))\n\n(defn touch-components [db a->v]\n  (reduce-kv\n    (fn [acc a v]\n      (assoc acc a\n        (if (db/component? db a)\n          (if (db/multival? db a)\n            (set (map touch v))\n            (touch v))\n          v)))\n    {} a->v))\n\n(defn- datoms->cache [db datoms]\n  (reduce (fn [acc part]\n            (let [a (:a (first part))]\n              (assoc acc a (entity-attr db a part))))\n    {} (partition-by :a datoms)))\n\n(defn touch [^Entity e]\n  {:pre [(or (nil? e) (entity? e))]}\n  (when (some? e)\n    (when-not @(.-touched e)\n      (when-let [datoms (not-empty (db/-search (.-db e) [(.-eid e)]))]\n        (vreset! (.-cache e) (->> datoms\n                               (datoms->cache (.-db e))\n                               (touch-components (.-db e))))\n        (vreset! (.-touched e) true)))\n    e))\n\n#?(:cljs (goog/exportSymbol \"datascript.impl.entity.Entity\" Entity))\n"],"x_google_ignoreList":[0]}