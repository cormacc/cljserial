{
"version":3,
"file":"module$node_modules$$supabase$storage_js$dist$main$packages$StorageBucketApi.js",
"lineCount":112,
"mappings":"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",
"sources":["node_modules/@supabase/storage-js/dist/main/packages/StorageBucketApi.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$supabase$storage_js$dist$main$packages$StorageBucketApi\"] = function(global,require,module,exports) {\n\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../lib/constants\");\nconst errors_1 = require(\"../lib/errors\");\nconst fetch_1 = require(\"../lib/fetch\");\nconst helpers_1 = require(\"../lib/helpers\");\nclass StorageBucketApi {\n    constructor(url, headers = {}, fetch) {\n        this.url = url;\n        this.headers = Object.assign(Object.assign({}, constants_1.DEFAULT_HEADERS), headers);\n        this.fetch = (0, helpers_1.resolveFetch)(fetch);\n    }\n    /**\n     * Retrieves the details of all Storage buckets within an existing project.\n     */\n    listBuckets() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield (0, fetch_1.get)(this.fetch, `${this.url}/bucket`, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if ((0, errors_1.isStorageError)(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Retrieves the details of an existing Storage bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to retrieve.\n     */\n    getBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield (0, fetch_1.get)(this.fetch, `${this.url}/bucket/${id}`, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if ((0, errors_1.isStorageError)(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Creates a new Storage bucket\n     *\n     * @param id A unique identifier for the bucket you are creating.\n     * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations. By default, buckets are private.\n     * @param options.fileSizeLimit specifies the max file size in bytes that can be uploaded to this bucket.\n     * The global file size limit takes precedence over this value.\n     * The default value is null, which doesn't set a per bucket file size limit.\n     * @param options.allowedMimeTypes specifies the allowed mime types that this bucket can accept during upload.\n     * The default value is null, which allows files with all mime types to be uploaded.\n     * Each mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.\n     * @returns newly created bucket id\n     */\n    createBucket(id, options = {\n        public: false,\n    }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield (0, fetch_1.post)(this.fetch, `${this.url}/bucket`, {\n                    id,\n                    name: id,\n                    public: options.public,\n                    file_size_limit: options.fileSizeLimit,\n                    allowed_mime_types: options.allowedMimeTypes,\n                }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if ((0, errors_1.isStorageError)(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Updates a Storage bucket\n     *\n     * @param id A unique identifier for the bucket you are updating.\n     * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations.\n     * @param options.fileSizeLimit specifies the max file size in bytes that can be uploaded to this bucket.\n     * The global file size limit takes precedence over this value.\n     * The default value is null, which doesn't set a per bucket file size limit.\n     * @param options.allowedMimeTypes specifies the allowed mime types that this bucket can accept during upload.\n     * The default value is null, which allows files with all mime types to be uploaded.\n     * Each mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.\n     */\n    updateBucket(id, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield (0, fetch_1.put)(this.fetch, `${this.url}/bucket/${id}`, {\n                    id,\n                    name: id,\n                    public: options.public,\n                    file_size_limit: options.fileSizeLimit,\n                    allowed_mime_types: options.allowedMimeTypes,\n                }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if ((0, errors_1.isStorageError)(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Removes all objects inside a single bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to empty.\n     */\n    emptyBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield (0, fetch_1.post)(this.fetch, `${this.url}/bucket/${id}/empty`, {}, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if ((0, errors_1.isStorageError)(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Deletes an existing bucket. A bucket can't be deleted with existing objects inside it.\n     * You must first `empty()` the bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to delete.\n     */\n    deleteBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield (0, fetch_1.remove)(this.fetch, `${this.url}/bucket/${id}`, {}, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if ((0, errors_1.isStorageError)(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n}\nexports.default = StorageBucketApi;\n//# sourceMappingURL=StorageBucketApi.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Object","defineProperty","constants_1","errors_1","fetch_1","helpers_1","StorageBucketApi","constructor","url","headers","fetch","assign","DEFAULT_HEADERS","resolveFetch","listBuckets","data","get","error","isStorageError","getBucket","id","createBucket","options","public","post","name","file_size_limit","fileSizeLimit","allowed_mime_types","allowedMimeTypes","updateBucket","put","emptyBucket","deleteBucket","remove","default"]
}
