{"version":3,"sources":["stack/examples/pages/cloud_db.cljs"],"mappings":";AAiBA,AAAA,uCAAA,+CAAAA,tFAAOQ;AAAP,AAAA,IAAAP,2BAAA,AAAAC,mBAAAF;IAAAG,aAAA,CAAAF;aAAA,AAAAG,4CAAAD,WAAA,IAAA,pEAAekB;IAAfhB,mBAAA;AAAA,AAAA,GAAAC;AAAA,AAAA,IAAAC,2BAAA,AAAAC;AAAA,AAAA,oBAAAD;AAAA,AAAA,IAAAE,yBAAAF;AAAA,AAAA,CAAAE,uDAAAA,yDAAAA;;AAAA;;AAAA;;AAEE,IAAAa,aAA6B,mBAAA,nBAACG;cAA9B,AAAArB,4CAAAkB,WAAA,IAAA,rEAAOC;wBAAP,AAAAnB,4CAAAkB,WAAA,IAAA,/EAAeE;AAAf,AACE,AAAAE,yDAEC;AAAA,AAAO,2EAAA,4DAAA,hIAACE,oLAAmCJ;GAF5C,AAAAG,mBAAA;;AAKA,OAAAE,4EAAA,CAAA,2CAAA,4EAAA,/JAAGC,8IAAuBP;;AAR9B,AAAA,GAAAjB;AAAA,IAAAI,gDAAAC;IAAAC,gDAAAJ;AAAA,AAAA,CAAAG,yCAAAC;;AAAA,IAAA,AAAA,GAAA,EAAA,AAAAC,qBAAAZ,+BAAA,CAAAA,4BAAA;AAAA;AAAA,AAAA,MAAA,KAAAa,MAAA,CAAA,kBAAA,CAAA,qGAAAb,oCAAA,KAAA;;;AAAA,OAAAI;UAAA,AAAA,CAAAM,yCAAAD;;AAAA,OAAAL;;;;AAAA,CAAA,AAAAG,4DAAA;;AAAA,CAAA,AAAAA,mDAAA;;AAAA,GAAAF;AAAA,AAAA,GAAA,QAAAS,mCAAAC,uCAAAC;AAAA,AAAA,IAAAC,2BAAA,AAAAC;AAAA,AAAA,CAAAD,yDAAAA,uDAAAV,qCAAA,8GAAA,KAAA,QAAAU,oCAAAV,qCAAA,8GAAA,KAAA;;AAAA,AAAAY,8BAAAZ,qCAAA,AAAAA;;AAAA,CAAA,AAAAA,8DAAAU;;AAAA;;AAAA;AAUA,AAAA,iDAAA,yDAAAlB,1GAAOgC;AAAP,AAAA,IAAA/B,2BAAA,AAAAC,mBAAAF;IAAA+B,aAAA,CAAA9B;aAAA,AAAAG,4CAAA2B,WAAA,IAAA,pEAAyBV;IAAzBhB,mBAAA;AAAA,AAAA,GAAAC;AAAA,AAAA,IAAAC,2BAAA,AAAAyB;AAAA,AAAA,oBAAAzB;AAAA,AAAA,IAAAE,yBAAAF;AAAA,AAAA,CAAAE,uDAAAA,yDAAAA;;AAAA;;AAAA;;AACE,OAAAoB,qEAAA,CAAA,2CAAA,wGAAA,pLAAGM,sIAA0B3B;;AAD/B,AAAA,GAAAF;AAAA,IAAA2B,gDAAAtB;IAAAuB,gDAAAF;AAAA,AAAA,CAAArB,yCAAAuB;;AAAA,IAAA,AAAA,GAAA,EAAA,AAAArB,qBAAAZ,+BAAA,CAAAA,4BAAA;AAAA;AAAA,AAAA,MAAA,KAAAa,MAAA,CAAA,kBAAA,CAAA,qGAAAb,oCAAA,KAAA;;;AAAA,OAAAI;UAAA,AAAA,CAAAM,yCAAAsB;;AAAA,OAAA5B;;;;AAAA,CAAA,AAAA2B,sEAAA;;AAAA,CAAA,AAAAA,6DAAA;;AAAA,GAAA1B;AAAA,AAAA,GAAA,QAAAS,mCAAAC,uCAAAC;AAAA,AAAA,IAAAC,2BAAA,AAAAC;AAAA,AAAA,CAAAD,yDAAAA,uDAAAc,+CAAA,GAAA,KAAA,QAAAd,oCAAAc,+CAAA,GAAA,KAAA;;AAAA,AAAAZ,8BAAAY,+CAAA,AAAAA;;AAAA,CAAA,AAAAA,wEAAAd;;AAAA;;AAAA","names":["props__45317__auto__","clj-props__45318__auto__","uix.core/glue-args","vec__95624","cljs.core.nth","f__45319__auto__","js/goog.DEBUG","temp__5823__auto__","stack.examples.pages.cloud-db/layout","f__45248__auto__","*current-component*-orig-val__95633","uix.core/*current-component*","*current-component*-temp-val__95634","cljs.core/map?","js/Error","js/window","js/window.uix","js/window.uix.dev","sig__45257__auto__","js/window.uix.dev.signature!","js/window.uix.dev.register!","_props","vec__95627","devices","set-devices!","uix.core/use-state","uix.hooks.alpha.use_effect","uix.core/jsfy-deps","stack.utils.supabase.get_table","uix.compiler.alpha/component-element","stack.components.hardware/device-table","vec__95657","stack.examples.pages.cloud-db/layout-with-auth","*current-component*-orig-val__95666","*current-component*-temp-val__95667","stack.services.auth/wrap-layout"],"sourcesContent":["(ns stack.examples.pages.cloud-db\n  \"A page demonstrating some backend functionality provided by supabase.\n  Using react state/effect hooks for now to keep things focused (no re-frame).\n\n  TODO: Rework to detect connection failure and display an appropriate message\n  \"\n  (:require\n   ;Libs\n   [taoensso.telemere :as t]\n   [uix.core :refer [defui $]]\n   ;Stack\n   [stack.utils.supabase :as supabase]\n   [stack.services.auth :as auth]\n   ;App\n   [stack.components.hardware :refer [device-table]]))\n\n\n(defui layout [_props]\n  ;; Using local state hooks rather then re-frame db here while exploring the supabase api...\n  (let [[devices set-devices!] (uix.core/use-state [])]\n    (uix.core/use-effect\n     ;; Retrieve the device table\n     (fn [] (supabase/get-table \"devices\" :then set-devices!))\n     ;; No dependencies -- i.e. don't re-run the effecthook\n     [])\n    ($ device-table {:devices devices})))\n\n(defui layout-with-auth [_props]\n  ($ auth/wrap-layout {:layout layout}))\n"]}