{
"version":3,
"file":"module$node_modules$$supabase$auth_js$dist$main$GoTrueAdminApi.js",
"lineCount":142,
"mappings":"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",
"sources":["node_modules/@supabase/auth-js/dist/main/GoTrueAdminApi.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$supabase$auth_js$dist$main$GoTrueAdminApi\"] = function(global,require,module,exports) {\n\"use strict\";\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fetch_1 = require(\"./lib/fetch\");\nconst helpers_1 = require(\"./lib/helpers\");\nconst errors_1 = require(\"./lib/errors\");\nclass GoTrueAdminApi {\n    constructor({ url = '', headers = {}, fetch, }) {\n        this.url = url;\n        this.headers = headers;\n        this.fetch = (0, helpers_1.resolveFetch)(fetch);\n        this.mfa = {\n            listFactors: this._listFactors.bind(this),\n            deleteFactor: this._deleteFactor.bind(this),\n        };\n    }\n    /**\n     * Removes a logged-in session.\n     * @param jwt A valid, logged-in JWT.\n     * @param scope The logout sope.\n     */\n    async signOut(jwt, scope = 'global') {\n        try {\n            await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/logout?scope=${scope}`, {\n                headers: this.headers,\n                jwt,\n                noResolveJson: true,\n            });\n            return { data: null, error: null };\n        }\n        catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Sends an invite link to an email address.\n     * @param email The email address of the user.\n     * @param options Additional options to be included when inviting.\n     */\n    async inviteUserByEmail(email, options = {}) {\n        try {\n            return await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/invite`, {\n                body: { email, data: options.data },\n                headers: this.headers,\n                redirectTo: options.redirectTo,\n                xform: fetch_1._userResponse,\n            });\n        }\n        catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n                return { data: { user: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Generates email links and OTPs to be sent via a custom email provider.\n     * @param email The user's email.\n     * @param options.password User password. For signup only.\n     * @param options.data Optional user metadata. For signup only.\n     * @param options.redirectTo The redirect url which should be appended to the generated link\n     */\n    async generateLink(params) {\n        try {\n            const { options } = params, rest = __rest(params, [\"options\"]);\n            const body = Object.assign(Object.assign({}, rest), options);\n            if ('newEmail' in rest) {\n                // replace newEmail with new_email in request body\n                body.new_email = rest === null || rest === void 0 ? void 0 : rest.newEmail;\n                delete body['newEmail'];\n            }\n            return await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/admin/generate_link`, {\n                body: body,\n                headers: this.headers,\n                xform: fetch_1._generateLinkResponse,\n                redirectTo: options === null || options === void 0 ? void 0 : options.redirectTo,\n            });\n        }\n        catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n                return {\n                    data: {\n                        properties: null,\n                        user: null,\n                    },\n                    error,\n                };\n            }\n            throw error;\n        }\n    }\n    // User Admin API\n    /**\n     * Creates a new user.\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async createUser(attributes) {\n        try {\n            return await (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/admin/users`, {\n                body: attributes,\n                headers: this.headers,\n                xform: fetch_1._userResponse,\n            });\n        }\n        catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n                return { data: { user: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Get a list of users.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     * @param params An object which supports `page` and `perPage` as numbers, to alter the paginated results.\n     */\n    async listUsers(params) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        try {\n            const pagination = { nextPage: null, lastPage: 0, total: 0 };\n            const response = await (0, fetch_1._request)(this.fetch, 'GET', `${this.url}/admin/users`, {\n                headers: this.headers,\n                noResolveJson: true,\n                query: {\n                    page: (_b = (_a = params === null || params === void 0 ? void 0 : params.page) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : '',\n                    per_page: (_d = (_c = params === null || params === void 0 ? void 0 : params.perPage) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : '',\n                },\n                xform: fetch_1._noResolveJsonResponse,\n            });\n            if (response.error)\n                throw response.error;\n            const users = await response.json();\n            const total = (_e = response.headers.get('x-total-count')) !== null && _e !== void 0 ? _e : 0;\n            const links = (_g = (_f = response.headers.get('link')) === null || _f === void 0 ? void 0 : _f.split(',')) !== null && _g !== void 0 ? _g : [];\n            if (links.length > 0) {\n                links.forEach((link) => {\n                    const page = parseInt(link.split(';')[0].split('=')[1].substring(0, 1));\n                    const rel = JSON.parse(link.split(';')[1].split('=')[1]);\n                    pagination[`${rel}Page`] = page;\n                });\n                pagination.total = parseInt(total);\n            }\n            return { data: Object.assign(Object.assign({}, users), pagination), error: null };\n        }\n        catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n                return { data: { users: [] }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Get user by id.\n     *\n     * @param uid The user's unique identifier\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async getUserById(uid) {\n        try {\n            return await (0, fetch_1._request)(this.fetch, 'GET', `${this.url}/admin/users/${uid}`, {\n                headers: this.headers,\n                xform: fetch_1._userResponse,\n            });\n        }\n        catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n                return { data: { user: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Updates the user data.\n     *\n     * @param attributes The data you want to update.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async updateUserById(uid, attributes) {\n        try {\n            return await (0, fetch_1._request)(this.fetch, 'PUT', `${this.url}/admin/users/${uid}`, {\n                body: attributes,\n                headers: this.headers,\n                xform: fetch_1._userResponse,\n            });\n        }\n        catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n                return { data: { user: null }, error };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Delete a user. Requires a `service_role` key.\n     *\n     * @param id The user id you want to remove.\n     * @param shouldSoftDelete If true, then the user will be soft-deleted from the auth schema. Soft deletion allows user identification from the hashed user ID but is not reversible.\n     * Defaults to false for backward compatibility.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    async deleteUser(id, shouldSoftDelete = false) {\n        try {\n            return await (0, fetch_1._request)(this.fetch, 'DELETE', `${this.url}/admin/users/${id}`, {\n                headers: this.headers,\n                body: {\n                    should_soft_delete: shouldSoftDelete,\n                },\n                xform: fetch_1._userResponse,\n            });\n        }\n        catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n                return { data: { user: null }, error };\n            }\n            throw error;\n        }\n    }\n    async _listFactors(params) {\n        try {\n            const { data, error } = await (0, fetch_1._request)(this.fetch, 'GET', `${this.url}/admin/users/${params.userId}/factors`, {\n                headers: this.headers,\n                xform: (factors) => {\n                    return { data: { factors }, error: null };\n                },\n            });\n            return { data, error };\n        }\n        catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n    async _deleteFactor(params) {\n        try {\n            const data = await (0, fetch_1._request)(this.fetch, 'DELETE', `${this.url}/admin/users/${params.userId}/factors/${params.id}`, {\n                headers: this.headers,\n            });\n            return { data, error: null };\n        }\n        catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n                return { data: null, error };\n            }\n            throw error;\n        }\n    }\n}\nexports.default = GoTrueAdminApi;\n//# sourceMappingURL=GoTrueAdminApi.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","defineProperty","value","fetch_1","helpers_1","errors_1","GoTrueAdminApi","constructor","url","headers","fetch","resolveFetch","mfa","listFactors","_listFactors","bind","deleteFactor","_deleteFactor","signOut","jwt","scope","_request","noResolveJson","data","error","isAuthError","inviteUserByEmail","email","options","body","redirectTo","xform","_userResponse","user","generateLink","params","rest","assign","new_email","newEmail","_generateLinkResponse","properties","createUser","attributes","listUsers","_a","_b","_c","_d","_e","_f","_g","pagination","nextPage","lastPage","total","response","query","page","toString","per_page","perPage","_noResolveJsonResponse","users","json","get","links","split","forEach","link","parseInt","substring","rel","JSON","parse","getUserById","uid","updateUserById","deleteUser","id","shouldSoftDelete","should_soft_delete","userId","factors","default"]
}
