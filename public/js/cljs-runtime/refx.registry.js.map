{"version":3,"sources":["refx/registry.cljc"],"mappings":";AAIA,AAAKA,yBAAS,6CAAA,7CAACC;AAEf,AAAA,uBAAA,+BAAAC,tDAAME;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,mDAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,mDAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAC,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,qDAAA,rDAAMD,gEACFE,KAAKC;AADT,AAEG,IAAMC,UAAQ,+CAAA,AAAAC,wCAAA,vFAACC,+DAAQV,2GAAUM,KAAKC;AAAtC,AACE,GAAMI;AAAN,AACE,GAAM,YAAA,XAAMH;AAAZ,AACE,sGAAA,uDAAA,7JAACI,2GAAe,4CAAKN,gCAAgCC;;AADvD;;AADF;;AAGAC;;;AANL,CAAA,qDAAA,rDAAMJ,gEAOFE,KAAKC,GAAGM;AAPZ,AAQG,sDAAA,AAAAJ,wCAAA,vFAACC,+DAAQV,2GAAUM,KAAKC,WAAIM;;;AAR/B,CAAA,+CAAA,/CAAMT;;AAAN,AAUA,0BAAA,1BAAMU,4DAAMR,KAAKC,GAAGC;AAApB,AACE,6FAAA,7FAACO,mDAAMf,uBAASgB,sGAAUV,KAAKC,WAAIC;;AACnCA;;AAEF,6BAAA,7BAAMS,kEAASX,KAAKC;AAApB,AACE,AAACQ,0DAAMf,uBAASkB,iBAAOZ,KAAKa,mEAAOZ;;AADrC;;AAIA,4BAAA,5BAAMa,gEAAQd;AAAd,AACE,AAACS,mDAAMf,uBAASmB,iBAAOb;;AADzB;;AAIA,gCAAA,hCAAMe;AAAN,AACE,6CAAA,7CAACC,sBAAOtB;;AADV","names":["refx.registry/registry","cljs.core.atom","var_args","G__86003","refx.registry/lookup","js/Error","kind","id","handler","cljs.core/deref","cljs.core.get_in","refx.interop/debug-enabled?","refx.log.error","not-found","refx.registry/add!","cljs.core.swap_BANG_","cljs.core/assoc-in","refx.registry/remove!","cljs.core/update","cljs.core/dissoc","refx.registry/clear!","refx.registry/clear-all!","cljs.core/reset!"],"sourcesContent":["(ns refx.registry\n  (:require [refx.interop :as interop]\n            [refx.log :as log]))\n\n(def registry (atom {}))\n\n(defn lookup\n  ([kind id]\n   (let [handler (get-in @registry [kind id])]\n     (when interop/debug-enabled?\n       (when (nil? handler)\n         (log/error \"no\" (str kind) \"handler registered for:\" id)))\n     handler))\n  ([kind id not-found]\n   (get-in @registry [kind id] not-found)))\n\n(defn add! [kind id handler]\n  (swap! registry assoc-in [kind id] handler)\n  handler)\n\n(defn remove! [kind id]\n  (swap! registry update kind dissoc id)\n  nil)\n\n(defn clear! [kind]\n  (swap! registry dissoc kind)\n  nil)\n\n(defn clear-all! []\n  (reset! registry {})\n  nil)\n"],"x_google_ignoreList":[0]}