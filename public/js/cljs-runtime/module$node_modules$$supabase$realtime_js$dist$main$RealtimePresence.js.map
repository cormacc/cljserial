{
"version":3,
"file":"module$node_modules$$supabase$realtime_js$dist$main$RealtimePresence.js",
"lineCount":126,
"mappings":"AAAAA,cAAA,CAAA,oEAAA,GAAyF,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAMjIC,QAAOC,CAAAA,cAAP,CAAsBF,OAAtB,EAA+B,YAA/B,EAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CAAA;AACAH,SAAQI,CAAAA,+BAAR,GAA0C,IAAK,EAA/C;AAEC,WAAS,CAACA,+BAAD,CAAkC;AACxCA,mCAAA,CAAA,IAAA,GAA0C,MAA1C;AACAA,mCAAA,CAAA,IAAA,GAA0C,MAA1C;AACAA,mCAAA,CAAA,KAAA,GAA2C,OAA3C;AAHwC,GAA3C,CAAD,CAIqCJ,OAAQI,CAAAA,+BAJ7C,KAIiFJ,OAAQI,CAAAA,+BAJzF,GAI2H,EAJ3H,EAAA;AAKA,OAAMC,iBAAN;AAQIC,eAAW,CAACC,OAAD,EAAUC,IAAV,CAAgB;AACvB,UAAKD,CAAAA,OAAL,GAAeA,OAAf;AACA,UAAKE,CAAAA,KAAL,GAAa,EAAb;AACA,UAAKC,CAAAA,YAAL,GAAoB,EAApB;AACA,UAAKC,CAAAA,OAAL,GAAe,IAAf;AACA,UAAKC,CAAAA,MAAL,GAAc,CACVC,OAAQ,EAAAA,IAAM;OADJ,EAEVC,QAAS,EAAAA,IAAM;OAFL,EAGVC,OAAQ,EAAAA,IAAM;OAHJ,CAAd;AAKMC,aAAAA,IAAmB,IAAT,KAAAR,IAAA,IAA0B,IAAK,EAA/B,KAAiBA,IAAjB,GAAmC,IAAK,EAAxC,GAA4CA,IAAKQ,CAAAA,MAA3DA,KAAsE,CACxEP,MAAO,gBADiE,EAExEQ,KAAM,eAFkE,CAAtED;AAIN,UAAKT,CAAAA,OAAQW,CAAAA,GAAb,CAAiBF,OAAOP,CAAAA,KAAxB,EAA+B,EAA/B,EAAoCU,QAAD,IAAc;AAC7C,cAAM,CAAEN,MAAF,EAAUC,OAAV,EAAmBC,MAAnB,CAAA,GAA8B,IAAKH,CAAAA,MAAzC;AACA,YAAKD,CAAAA,OAAL,GAAe,IAAKJ,CAAAA,OAAQa,CAAAA,QAAb,EAAf;AACA,YAAKX,CAAAA,KAAL,GAAaJ,gBAAiBgB,CAAAA,SAAjB,CAA2B,IAAKZ,CAAAA,KAAhC,EAAuCU,QAAvC,EAAiDN,MAAjD,EAAyDC,OAAzD,CAAb;AACA,YAAKJ,CAAAA,YAAaY,CAAAA,OAAlB,CAA2BL,IAAD,IAAU;AAChC,cAAKR,CAAAA,KAAL,GAAaJ,gBAAiBkB,CAAAA,QAAjB,CAA0B,IAAKd,CAAAA,KAA/B,EAAsCQ,IAAtC,EAA4CJ,MAA5C,EAAoDC,OAApD,CAAb;AADgC,SAApC,CAAA;AAGA,YAAKJ,CAAAA,YAAL,GAAoB,EAApB;AACAK,cAAA,EAAA;AAR6C,OAAjD,CAAA;AAUA,UAAKR,CAAAA,OAAQW,CAAAA,GAAb,CAAiBF,OAAOC,CAAAA,IAAxB,EAA8B,EAA9B,EAAmCA,IAAD,IAAU;AACxC,cAAM,CAAEJ,MAAF,EAAUC,OAAV,EAAmBC,MAAnB,CAAA,GAA8B,IAAKH,CAAAA,MAAzC;AACI,YAAKY,CAAAA,kBAAL,EAAJ,GACI,IAAKd,CAAAA,YAAae,CAAAA,IAAlB,CAAuBR,IAAvB,CADJ,IAII,IAAKR,CAAAA,KACL,GADaJ,gBAAiBkB,CAAAA,QAAjB,CAA0B,IAAKd,CAAAA,KAA/B,EAAsCQ,IAAtC,EAA4CJ,MAA5C,EAAoDC,OAApD,CACb,EAAAC,MAAA,EALJ,CAAA;AAFwC,OAA5C,CAAA;AAUA,UAAKF,CAAAA,MAAL,CAAY,CAACa,GAAD,EAAMC,gBAAN,EAAwBC,YAAxB,CAAA,IAAyC;AACjD,YAAKrB,CAAAA,OAAQsB,CAAAA,QAAb,CAAsB,UAAtB,EAAkC,CAC9BC,MAAO,MADuB,EAE9BJ,GAF8B,EAG9BC,gBAH8B,EAI9BC,YAJ8B,CAAlC,CAAA;AADiD,OAArD,CAAA;AAQA,UAAKd,CAAAA,OAAL,CAAa,CAACY,GAAD,EAAMC,gBAAN,EAAwBI,aAAxB,CAAA,IAA0C;AACnD,YAAKxB,CAAAA,OAAQsB,CAAAA,QAAb,CAAsB,UAAtB,EAAkC,CAC9BC,MAAO,OADuB,EAE9BJ,GAF8B,EAG9BC,gBAH8B,EAI9BI,aAJ8B,CAAlC,CAAA;AADmD,OAAvD,CAAA;AAQA,UAAKhB,CAAAA,MAAL,CAAY,EAAA,IAAM;AACd,YAAKR,CAAAA,OAAQsB,CAAAA,QAAb,CAAsB,UAAtB,EAAkC,CAAEC,MAAO,MAAT,CAAlC,CAAA;AADc,OAAlB,CAAA;AAlDuB;AAgEpBT,oBAAS,CAACW,YAAD,EAAeb,QAAf,EAAyBN,MAAzB,EAAiCC,OAAjC,CAA0C;AACtD,YAAML,QAAQ,IAAKwB,CAAAA,SAAL,CAAeD,YAAf,CAAd,EACME,mBAAmB,IAAKC,CAAAA,cAAL,CAAoBhB,QAApB,CADzB,EAEMiB,QAAQ,EAFd,EAGMC,SAAS,EAHf;AAIA,UAAKC,CAAAA,GAAL,CAAS7B,KAAT,EAAgB,CAACiB,GAAD,EAAMa,SAAN,CAAA,IAAoB;AAC3BL,wBAAA,CAAiBR,GAAjB,CAAL,KACIW,MAAA,CAAOX,GAAP,CADJ,GACkBa,SADlB;AADgC,OAApC,CAAA;AAKA,UAAKD,CAAAA,GAAL,CAASJ,gBAAT,EAA2B,CAACR,GAAD,EAAME,YAAN,CAAA,IAAuB;AAC9C,YAAMD,mBAAmBlB,KAAA,CAAMiB,GAAN,CAAzB;AACA,YAAIC,gBAAJ,CAAsB;AAClB,gBAAMa,kBAAkBZ,YAAaU,CAAAA,GAAb,CAAkBG,CAAD,IAAOA,CAAEC,CAAAA,YAA1B,CAAxB,EACMC,kBAAkBhB,gBAAiBW,CAAAA,GAAjB,CAAsBG,CAAD,IAAOA,CAAEC,CAAAA,YAA9B,CADxB;AAEME,sBAAAA,GAAkBhB,YAAaiB,CAAAA,MAAb,CAAqBJ,CAAD,IAAiD,CAAjD,GAAOE,eAAgBG,CAAAA,OAAhB,CAAwBL,CAAEC,CAAAA,YAA1B,CAA3B,CAAlBE;AACAb,0BAAAA,GAAgBJ,gBAAiBkB,CAAAA,MAAjB,CAAyBJ,CAAD,IAAiD,CAAjD,GAAOD,eAAgBM,CAAAA,OAAhB,CAAwBL,CAAEC,CAAAA,YAA1B,CAA/B,CAAhBX;AACuB,WAA7B,GAAIa,YAAgBG,CAAAA,MAApB,KACIX,KAAA,CAAMV,GAAN,CADJ,GACiBkB,YADjB;AAG2B,WAA3B,GAAIb,gBAAcgB,CAAAA,MAAlB,KACIV,MAAA,CAAOX,GAAP,CADJ,GACkBK,gBADlB;AARkB,SAAtB;AAaIK,eAAA,CAAMV,GAAN,CAAA,GAAaE,YAAb;AAbJ;AAF8C,OAAlD,CAAA;AAkBA,aAAO,IAAKL,CAAAA,QAAL,CAAcd,KAAd,EAAqB,CAAE2B,KAAF,EAASC,MAAT,CAArB,EAAwCxB,MAAxC,EAAgDC,OAAhD,CAAP;AA5BsD;AAwCnDS,mBAAQ,CAACd,KAAD,EAAQQ,IAAR,EAAcJ,MAAd,EAAsBC,OAAtB,CAA+B;AAC1C,YAAM,CAAEsB,KAAF,EAASC,MAAT,CAAA,GAAoB,CACtBD,MAAO,IAAKD,CAAAA,cAAL,CAAoBlB,IAAKmB,CAAAA,KAAzB,CADe,EAEtBC,OAAQ,IAAKF,CAAAA,cAAL,CAAoBlB,IAAKoB,CAAAA,MAAzB,CAFc,CAA1B;AAIKxB,YAAL,KACIA,MADJ,GACa,EAAAA,IAAM;OADnB;AAGKC,aAAL,KACIA,OADJ,GACc,EAAAA,IAAM;OADpB;AAGA,UAAKwB,CAAAA,GAAL,CAASF,KAAT,EAAgB,CAACV,GAAD,EAAME,YAAN,CAAA,IAAuB;AACnC,YAAIoB,EAAJ;AACA,cAAMrB,mBAAyC,IAAtB,MAACqB,EAAD,GAAMvC,KAAA,CAAMiB,GAAN,CAAN,KAAqC,IAAK,EAA1C,KAA8BsB,EAA9B,GAA8CA,EAA9C,GAAmD,EAA5E;AACAvC,aAAA,CAAMiB,GAAN,CAAA,GAAa,IAAKO,CAAAA,SAAL,CAAeL,YAAf,CAAb;AACA,YAA8B,CAA9B,GAAID,gBAAiBoB,CAAAA,MAArB,CAAiC;AAC7B,gBAAME,qBAAqBxC,KAAA,CAAMiB,GAAN,CAAWY,CAAAA,GAAX,CAAgBG,CAAD,IAAOA,CAAEC,CAAAA,YAAxB,CAA3B;AACMQ,YAAAA,GAAevB,gBAAiBkB,CAAAA,MAAjB,CAAyBJ,CAAD,IAAoD,CAApD,GAAOQ,kBAAmBH,CAAAA,OAAnB,CAA2BL,CAAEC,CAAAA,YAA7B,CAA/B,CAAfQ;AACNzC,eAAA,CAAMiB,GAAN,CAAWyB,CAAAA,OAAX,CAAmB,GAAGD,EAAtB,CAAA;AAH6B;AAKjCrC,cAAA,CAAOa,GAAP,EAAYC,gBAAZ,EAA8BC,YAA9B,CAAA;AATmC,OAAvC,CAAA;AAWA,UAAKU,CAAAA,GAAL,CAASD,MAAT,EAAiB,CAACX,GAAD,EAAMK,aAAN,CAAA,IAAwB;AACrC,YAAIJ,mBAAmBlB,KAAA,CAAMiB,GAAN,CAAvB;AACA,YAAKC,gBAAL,CAAA;AAEA,cAAMyB,uBAAuBrB,aAAcO,CAAAA,GAAd,CAAmBG,CAAD,IAAOA,CAAEC,CAAAA,YAA3B,CAA7B;AACAf,0BAAA,GAAmBA,gBAAiBkB,CAAAA,MAAjB,CAAyBJ,CAAD,IAAsD,CAAtD,GAAOW,oBAAqBN,CAAAA,OAArB,CAA6BL,CAAEC,CAAAA,YAA/B,CAA/B,CAAnB;AACAjC,eAAA,CAAMiB,GAAN,CAAA,GAAaC,gBAAb;AACAb,iBAAA,CAAQY,GAAR,EAAaC,gBAAb,EAA+BI,aAA/B,CAAA;AACgC,WAAhC,KAAIJ,gBAAiBoB,CAAAA,MAArB,IACI,OAAOtC,KAAA,CAAMiB,GAAN,CADX;AANA;AAFqC,OAAzC,CAAA;AAWA,aAAOjB,KAAP;AAjC0C;AAoCvC6B,cAAG,CAACe,GAAD,EAAMC,IAAN,CAAY;AAClB,aAAOrD,MAAOsD,CAAAA,mBAAP,CAA2BF,GAA3B,CAAgCf,CAAAA,GAAhC,CAAqCZ,GAAD,IAAS4B,IAAA,CAAK5B,GAAL,EAAU2B,GAAA,CAAI3B,GAAJ,CAAV,CAA7C,CAAP;AADkB;AA0BfS,yBAAc,CAAC1B,KAAD,CAAQ;AACzBA,WAAA,GAAQ,IAAKwB,CAAAA,SAAL,CAAexB,KAAf,CAAR;AACA,aAAOR,MAAOsD,CAAAA,mBAAP,CAA2B9C,KAA3B,CAAkC+C,CAAAA,MAAlC,CAAyC,CAACrC,QAAD,EAAWO,GAAX,CAAA,IAAmB;AAC/D,cAAMa,YAAY9B,KAAA,CAAMiB,GAAN,CAAlB;AAEIP,gBAAA,CAASO,GAAT,CAAA,GADA,OAAJ,IAAea,SAAf,GACoBA,SAAUkB,CAAAA,KAAMnB,CAAAA,GAAhB,CAAqBoB,QAAD,IAAc;AAC9CA,kBAAA,CAAA,YAAA,GAA2BA,QAAA,CAAA,OAA3B;AACA,iBAAOA,QAAA,CAAA,OAAP;AACA,iBAAOA,QAAA,CAAA,YAAP;AACA,iBAAOA,QAAP;AAJ8C,SAAlC,CADpB,GASoBnB,SARhB;AAUJ,eAAOpB,QAAP;AAb+D,OAA5D,EAcJ,EAdI,CAAP;AAFyB;AAmBtBc,oBAAS,CAACoB,GAAD,CAAM;AAClB,aAAOM,IAAKC,CAAAA,KAAL,CAAWD,IAAKE,CAAAA,SAAL,CAAeR,GAAf,CAAX,CAAP;AADkB;AAItBxC,UAAM,CAACiD,QAAD,CAAW;AACb,UAAKlD,CAAAA,MAAOC,CAAAA,MAAZ,GAAqBiD,QAArB;AADa;AAIjBhD,WAAO,CAACgD,QAAD,CAAW;AACd,UAAKlD,CAAAA,MAAOE,CAAAA,OAAZ,GAAsBgD,QAAtB;AADc;AAIlB/C,UAAM,CAAC+C,QAAD,CAAW;AACb,UAAKlD,CAAAA,MAAOG,CAAAA,MAAZ,GAAqB+C,QAArB;AADa;AAIjBtC,sBAAkB,EAAG;AACjB,aAAO,CAAC,IAAKb,CAAAA,OAAb,IAAwB,IAAKA,CAAAA,OAA7B,KAAyC,IAAKJ,CAAAA,OAAQa,CAAAA,QAAb,EAAzC;AADiB;AAjNzB;AAqNApB,SAAQ+D,CAAAA,OAAR,GAAkB1D,gBAAlB;AAnOiI,CAAjI;;",
"sources":["node_modules/@supabase/realtime-js/dist/main/RealtimePresence.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$supabase$realtime_js$dist$main$RealtimePresence\"] = function(global,require,module,exports) {\n\"use strict\";\n/*\n  This file draws heavily from https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/assets/js/phoenix/presence.js\n  License: https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/LICENSE.md\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.REALTIME_PRESENCE_LISTEN_EVENTS = void 0;\nvar REALTIME_PRESENCE_LISTEN_EVENTS;\n(function (REALTIME_PRESENCE_LISTEN_EVENTS) {\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"SYNC\"] = \"sync\";\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"JOIN\"] = \"join\";\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"LEAVE\"] = \"leave\";\n})(REALTIME_PRESENCE_LISTEN_EVENTS = exports.REALTIME_PRESENCE_LISTEN_EVENTS || (exports.REALTIME_PRESENCE_LISTEN_EVENTS = {}));\nclass RealtimePresence {\n    /**\n     * Initializes the Presence.\n     *\n     * @param channel - The RealtimeChannel\n     * @param opts - The options,\n     *        for example `{events: {state: 'state', diff: 'diff'}}`\n     */\n    constructor(channel, opts) {\n        this.channel = channel;\n        this.state = {};\n        this.pendingDiffs = [];\n        this.joinRef = null;\n        this.caller = {\n            onJoin: () => { },\n            onLeave: () => { },\n            onSync: () => { },\n        };\n        const events = (opts === null || opts === void 0 ? void 0 : opts.events) || {\n            state: 'presence_state',\n            diff: 'presence_diff',\n        };\n        this.channel._on(events.state, {}, (newState) => {\n            const { onJoin, onLeave, onSync } = this.caller;\n            this.joinRef = this.channel._joinRef();\n            this.state = RealtimePresence.syncState(this.state, newState, onJoin, onLeave);\n            this.pendingDiffs.forEach((diff) => {\n                this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\n            });\n            this.pendingDiffs = [];\n            onSync();\n        });\n        this.channel._on(events.diff, {}, (diff) => {\n            const { onJoin, onLeave, onSync } = this.caller;\n            if (this.inPendingSyncState()) {\n                this.pendingDiffs.push(diff);\n            }\n            else {\n                this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\n                onSync();\n            }\n        });\n        this.onJoin((key, currentPresences, newPresences) => {\n            this.channel._trigger('presence', {\n                event: 'join',\n                key,\n                currentPresences,\n                newPresences,\n            });\n        });\n        this.onLeave((key, currentPresences, leftPresences) => {\n            this.channel._trigger('presence', {\n                event: 'leave',\n                key,\n                currentPresences,\n                leftPresences,\n            });\n        });\n        this.onSync(() => {\n            this.channel._trigger('presence', { event: 'sync' });\n        });\n    }\n    /**\n     * Used to sync the list of presences on the server with the\n     * client's state.\n     *\n     * An optional `onJoin` and `onLeave` callback can be provided to\n     * react to changes in the client's local presences across\n     * disconnects and reconnects with the server.\n     *\n     * @internal\n     */\n    static syncState(currentState, newState, onJoin, onLeave) {\n        const state = this.cloneDeep(currentState);\n        const transformedState = this.transformState(newState);\n        const joins = {};\n        const leaves = {};\n        this.map(state, (key, presences) => {\n            if (!transformedState[key]) {\n                leaves[key] = presences;\n            }\n        });\n        this.map(transformedState, (key, newPresences) => {\n            const currentPresences = state[key];\n            if (currentPresences) {\n                const newPresenceRefs = newPresences.map((m) => m.presence_ref);\n                const curPresenceRefs = currentPresences.map((m) => m.presence_ref);\n                const joinedPresences = newPresences.filter((m) => curPresenceRefs.indexOf(m.presence_ref) < 0);\n                const leftPresences = currentPresences.filter((m) => newPresenceRefs.indexOf(m.presence_ref) < 0);\n                if (joinedPresences.length > 0) {\n                    joins[key] = joinedPresences;\n                }\n                if (leftPresences.length > 0) {\n                    leaves[key] = leftPresences;\n                }\n            }\n            else {\n                joins[key] = newPresences;\n            }\n        });\n        return this.syncDiff(state, { joins, leaves }, onJoin, onLeave);\n    }\n    /**\n     * Used to sync a diff of presence join and leave events from the\n     * server, as they happen.\n     *\n     * Like `syncState`, `syncDiff` accepts optional `onJoin` and\n     * `onLeave` callbacks to react to a user joining or leaving from a\n     * device.\n     *\n     * @internal\n     */\n    static syncDiff(state, diff, onJoin, onLeave) {\n        const { joins, leaves } = {\n            joins: this.transformState(diff.joins),\n            leaves: this.transformState(diff.leaves),\n        };\n        if (!onJoin) {\n            onJoin = () => { };\n        }\n        if (!onLeave) {\n            onLeave = () => { };\n        }\n        this.map(joins, (key, newPresences) => {\n            var _a;\n            const currentPresences = (_a = state[key]) !== null && _a !== void 0 ? _a : [];\n            state[key] = this.cloneDeep(newPresences);\n            if (currentPresences.length > 0) {\n                const joinedPresenceRefs = state[key].map((m) => m.presence_ref);\n                const curPresences = currentPresences.filter((m) => joinedPresenceRefs.indexOf(m.presence_ref) < 0);\n                state[key].unshift(...curPresences);\n            }\n            onJoin(key, currentPresences, newPresences);\n        });\n        this.map(leaves, (key, leftPresences) => {\n            let currentPresences = state[key];\n            if (!currentPresences)\n                return;\n            const presenceRefsToRemove = leftPresences.map((m) => m.presence_ref);\n            currentPresences = currentPresences.filter((m) => presenceRefsToRemove.indexOf(m.presence_ref) < 0);\n            state[key] = currentPresences;\n            onLeave(key, currentPresences, leftPresences);\n            if (currentPresences.length === 0)\n                delete state[key];\n        });\n        return state;\n    }\n    /** @internal */\n    static map(obj, func) {\n        return Object.getOwnPropertyNames(obj).map((key) => func(key, obj[key]));\n    }\n    /**\n     * Remove 'metas' key\n     * Change 'phx_ref' to 'presence_ref'\n     * Remove 'phx_ref' and 'phx_ref_prev'\n     *\n     * @example\n     * // returns {\n     *  abc123: [\n     *    { presence_ref: '2', user_id: 1 },\n     *    { presence_ref: '3', user_id: 2 }\n     *  ]\n     * }\n     * RealtimePresence.transformState({\n     *  abc123: {\n     *    metas: [\n     *      { phx_ref: '2', phx_ref_prev: '1' user_id: 1 },\n     *      { phx_ref: '3', user_id: 2 }\n     *    ]\n     *  }\n     * })\n     *\n     * @internal\n     */\n    static transformState(state) {\n        state = this.cloneDeep(state);\n        return Object.getOwnPropertyNames(state).reduce((newState, key) => {\n            const presences = state[key];\n            if ('metas' in presences) {\n                newState[key] = presences.metas.map((presence) => {\n                    presence['presence_ref'] = presence['phx_ref'];\n                    delete presence['phx_ref'];\n                    delete presence['phx_ref_prev'];\n                    return presence;\n                });\n            }\n            else {\n                newState[key] = presences;\n            }\n            return newState;\n        }, {});\n    }\n    /** @internal */\n    static cloneDeep(obj) {\n        return JSON.parse(JSON.stringify(obj));\n    }\n    /** @internal */\n    onJoin(callback) {\n        this.caller.onJoin = callback;\n    }\n    /** @internal */\n    onLeave(callback) {\n        this.caller.onLeave = callback;\n    }\n    /** @internal */\n    onSync(callback) {\n        this.caller.onSync = callback;\n    }\n    /** @internal */\n    inPendingSyncState() {\n        return !this.joinRef || this.joinRef !== this.channel._joinRef();\n    }\n}\nexports.default = RealtimePresence;\n//# sourceMappingURL=RealtimePresence.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","REALTIME_PRESENCE_LISTEN_EVENTS","RealtimePresence","constructor","channel","opts","state","pendingDiffs","joinRef","caller","onJoin","onLeave","onSync","events","diff","_on","newState","_joinRef","syncState","forEach","syncDiff","inPendingSyncState","push","key","currentPresences","newPresences","_trigger","event","leftPresences","currentState","cloneDeep","transformedState","transformState","joins","leaves","map","presences","newPresenceRefs","m","presence_ref","curPresenceRefs","joinedPresences","filter","indexOf","length","_a","joinedPresenceRefs","curPresences","unshift","presenceRefsToRemove","obj","func","getOwnPropertyNames","reduce","metas","presence","JSON","parse","stringify","callback","default"]
}
