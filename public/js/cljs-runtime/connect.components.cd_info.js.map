{"version":3,"sources":["connect/components/cd_info.cljs"],"mappings":"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","names":["props__46991__auto__","props97830","uix.core/glue-args","vec__97844","cljs.core.nth","f__46992__auto__","js/goog.DEBUG","temp__5823__auto__","connect.components.cd-info/card","f__46909__auto__","*current-component*-orig-val__97919","uix.core/*current-component*","*current-component*-temp-val__97920","cljs.core/map?","js/Error","js/Object.defineProperty","obj97938","js/window","js/window.uix","js/window.uix.dev","sig__46918__auto__","js/window.uix.dev.signature!","js/window.uix.dev.register!","cd-info","uix.compiler.alpha/component-element","stack.uix.cards/card","stack.uix.tables/table","uix.compiler.aot/>el","uix.compiler.attributes/interpret-attrs","stack.schema.version/->string","sd-info","files","cuerdas.core.format","cljs.core/count"],"sourcesContent":["(ns connect.components.cd-info\n  \"A generic info component for the MBT and MBX Controllers\"\n  (:require\n   [cuerdas.core :as str]\n   [uix.core :as uix :refer [defui $]]\n   [malli.core :as m]\n   [stack.uix.cards :as cards]\n   [stack.uix.tables :as tables]\n   [stack.schema.version :as version]\n   [connect.services.mbt-cd :as mbt-cd]))\n\n(defui card [cd-info]\n  {:pre [m/validate mbt-cd/CdState cd-info]}\n  ($ cards/card {:title \"Controller Info\"}\n     ($ tables/table\n        ($ :tbody\n           ($ :tr ($ :td \"Serial #\") ($ :td (:serial cd-info)))\n           ($ :tr ($ :td \"Hardware Revision\") ($ :td (:hardware_rev cd-info)))\n           ($ :tr ($ :td \"Firmware Revision\")  ($ :td (version/->string (:firmware_rev cd-info))))\n           ($ :tr ($ :td \"Build Configuration\") ($ :td (:build_configuration cd-info)))\n           ($ :tr ($ :td \"Track\") ($ :td (:track cd-info)))\n           (let [sd-info (:info (:sd_card cd-info))\n                 files (:files (:sd_card cd-info))]\n             ($ :tr ($ :td \"Storage\") ($ :td (str/format \"%s / %s MB\" (:used_mb sd-info) (:capacity_mb sd-info))))\n             ($ :tr ($ :td \"Files\") ($ :td (count files))))\n           ;; END\n           ))))\n"]}