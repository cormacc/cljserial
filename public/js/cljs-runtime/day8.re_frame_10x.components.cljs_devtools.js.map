{"version":3,"sources":["day8/re_frame_10x/components/cljs_devtools.cljs"],"mappings":"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","names":["cljs.core/deref","day8.re-frame-10x.components.cljs-devtools/initial-config","devtools.prefs/initial-config","day8.re-frame-10x.components.cljs-devtools/base-config","day8.re_frame_10x.inlined_deps.garden.v1v3v10.garden.core.style","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/px","day8.re-frame-10x.styles/gs-5","day8.re-frame-10x.components.cljs-devtools/body-style-base","day8.re-frame-10x.styles/gs-2","day8.re-frame-10x.styles/gs-12","day8.re-frame-10x.styles/nord3","day8.re-frame-10x.components.cljs-devtools/dark-ambiance-config","day8.re-frame-10x.styles/nord0","day8.re-frame-10x.styles/nord6","day8.re-frame-10x.components.cljs-devtools/bright-ambiance-config","day8.re-frame-10x.components.cljs-devtools/custom-config","cljs.core.merge","var_args","args__5732__auto__","len__5726__auto__","i__5727__auto__","argseq__5733__auto__","cljs.core/IndexedSeq","day8.re-frame-10x.components.cljs-devtools/header","p__84020","vec__84021","map__84024","cljs.core.nth","cljs.core/--destructure-map","cljs.core.get","seq84011","G__84012","cljs.core/first","cljs.core/next","G__84013","self__5711__auto__","value","config","render-paths?","previous-config__83998__auto__","devtools.prefs/get-prefs","prefs__83999__auto__","devtools.prefs/set-prefs!","cljs.core._EQ_","js/Error","devtools.formatters.core/header-api-call","day8.re-frame-10x.components.cljs-devtools/body","p__84056","vec__84057","map__84060","seq84045","G__84047","G__84048","devtools.formatters.core/body-api-call","day8.re-frame-10x.components.cljs-devtools/has-body","devtools.formatters.core/has-body-api-call","day8.re-frame-10x.components.cljs-devtools/get-object","jsonml","day8.re-frame-10x.components.cljs-devtools/get-config","day8.re-frame-10x.components.cljs-devtools/jsonml-style-factory$","style-name84095","params84096","vec__84102","style84098","day8.re-frame-10x.inlined-deps.spade.git-sha-5197e54.runtime/compile-css","factory-name84097","day8.re-frame-10x.inlined-deps.spade.git-sha-5197e54.util/factory->name","jsonml-style-name$","cljs.core/constantly","day8.re-frame-10x.inlined-deps.spade.git-sha-5197e54.runtime/ensure-style!","cljs.core/meta","day8.re-frame-10x.components.cljs-devtools/jsonml-style","day8.re-frame-10x.styles/syntax-color","day8.re-frame-10x.components.cljs-devtools/toggle-style-factory$","style-name84120","params84121","vec__84131","style84123","factory-name84122","toggle-style-name$","cljs.core/memoize","cljs.core.partial","day8.re-frame-10x.inlined-deps.spade.git-sha-5197e54.util/build-style-name","day8.re-frame-10x.components.cljs-devtools/toggle-style","ambiance","day8.re-frame-10x.styles/nord5","day8.re-frame-10x.components.cljs-devtools/data-structure","_","path","expanded?","day8.re_frame_10x.inlined_deps.re_frame.v1v3v0.re_frame.core.subscribe","e","day8.re-frame-10x.inlined-deps.re-frame.v1v3v0.re-frame.core/dispatch","day8.re-frame-10x.material/arrow-drop-down","day8.re-frame-10x.material/arrow-right","and__5000__auto__","G__84171","G__84172","day8.re-frame-10x.components.cljs-devtools/jsonml->hiccup","cljs.core.conj","G__84176","G__84177","day8.re-frame-10x.components.cljs-devtools/data-structure-with-path-annotations","p__84189","map__84190","indexed-path","devtools-path","expand?","path-id","opts","node-expanded?","show-body?","or__5002__auto__","G__84198","G__84199","G__84200","G__84201","day8.re-frame-10x.components.cljs-devtools/jsonml->hiccup-with-path-annotations","day8.re_frame_10x.components.cljs_devtools.body","G__84206","G__84207","G__84208","G__84209","day8.re-frame-10x.components.cljs-devtools/string->css","css-string","clojure.string.split","p1__84217#","cljs.core.map","cljs.core.reduce","p__84225","vec__84227","acc","property","cljs.core.assoc","cljs.core.keyword","vec__84237","seq__84238","cljs.core/seq","first__84239","tag-name","attributes","children","tagnames","cljs.core/contains?","cljs.core.into","cljs.core.js__GT_clj","cljs.core.map_indexed","i","child","G__84242","G__84243","G__84247","G__84248","p__84264","map__84270","click-listener","middle-click-listener","menu-listener","vec__84275","seq__84276","first__84277","G__84284","G__84285","G__84286","G__84287","jsonml-path-index","cljs.core/last","absolute-devtools-path","element-id","cljs.core/random-uuid","child-element","child-value","js/Array","child-component","G__84299","G__84300","G__84301","G__84302","p1__84260#","cljs.core/Keyword","G__84313","goog.events/listen","day8.re-frame-10x.components.cljs-devtools/prn-str-render?","data","js/RegExp","cljs.core/boolean?","day8.re-frame-10x.components.cljs-devtools/prn-str-render-style-factory$","style-name84339","params84340","vec__84346","style84342","factory-name84341","prn-str-render-style-name$","day8.re-frame-10x.components.cljs-devtools/prn-str-render-style","day8.re-frame-10x.components.cljs-devtools/prn-str-render","cljs.core.prn_str","day8.re-frame-10x.components.cljs-devtools/simple-render","p__84372","vec__84373","map__84376","seq84369","G__84370","G__84371","class","sort?","ns->alias","alias?","G__84380","day8.re-frame-10x.tools.datafy/alias-namespaces","day8.re-frame-10x.tools.datafy/deep-sorted-map","day8.re-frame-10x.components.re-com/box","p__84408","map__84409","day8.re-frame-10x.components.cljs-devtools/simple-render-with-path-annotations","open-new-inspectors?","G__84427","day8.re_frame_10x.components.cljs_devtools.header","p1__84399#","p1__84401#","p1__84402#","temp__5823__auto__","G__84433","target","G__84446","btn","G__84454","day8.re-frame-10x.tools.reader.edn/read-string-maybe"],"sourcesContent":["(ns day8.re-frame-10x.components.cljs-devtools\n  (:require-macros\n   [day8.re-frame-10x.components.cljs-devtools                   :refer [with-cljs-devtools-prefs]])\n  (:require\n   [clojure.string :as string]\n   [devtools.prefs]\n   [devtools.formatters.core]\n   [goog.dom]\n   [goog.events]\n   [goog.style]\n   [goog.ui.PopupMenu]\n   [goog.ui.MenuItem]\n   [goog.ui.Component]\n   [goog.object]\n   [day8.re-frame-10x.inlined-deps.re-frame.v1v3v0.re-frame.core :as rf]\n   [day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.core    :refer [style]]\n   [day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units   :refer [px]]\n   [day8.re-frame-10x.inlined-deps.spade.git-sha-5197e54.core    :refer [defclass]]\n   [day8.re-frame-10x.components.re-com                          :as rc]\n   [day8.re-frame-10x.material                                   :as material]\n   [day8.re-frame-10x.styles                                     :as styles]\n   [day8.re-frame-10x.panels.app-db.events                       :as app-db.events]\n   [day8.re-frame-10x.panels.app-db.subs                         :as app-db.subs]\n   [day8.re-frame-10x.tools.datafy                               :as tools.datafy]\n   [day8.re-frame-10x.tools.reader.edn                           :as reader.edn]\n   [day8.re-frame-10x.panels.settings.subs                       :as settings.subs]))\n\n(def initial-config @devtools.prefs/initial-config)\n\n(defn base-config\n  []\n  {; Hide index tags\n   :index-tag                              [:span :none-style]\n   :none-style                             (style {:display :none})\n\n   ; Our JSON renderer does not have hierarchy depth limit,\n   ; See https://github.com/binaryage/cljs-devtools/blob/master/src/lib/devtools/formatters/budgeting.cljs\n   :initial-hierarchy-depth-budget         false\n   :item-style                             (style {:display     :inline-block\n                                                   :white-space :nowrap\n                                                   :border-left [[(px 2) :solid :#000]]\n                                                   :padding     [[0 styles/gs-5 0 styles/gs-5]]\n                                                   :margin      [[(px 1 0 0 0)]]})})\n\n(def body-style-base\n  {:display          :inline-block\n   :padding          [[styles/gs-2 styles/gs-12]]\n   :border           [[(px 1) :solid styles/nord3]]\n   :margin           (px 1)\n   :margin-top       0})\n\n(def dark-ambiance-config\n  {:cljs-land-style (style {:background-color styles/nord0\n                            :color            styles/nord6})\n   :body-style      (style body-style-base {:background-color styles/nord0})})\n\n(def bright-ambiance-config\n  {:cljs-land-style (style {:background-color styles/nord6\n                            :color            styles/nord0})\n   :body-style      (style body-style-base {:background-color styles/nord6})})\n\n;; This used to be in the api-call fn below. However, recalculating this on *every* render is expensive so moved\n;; here as static def.\n;; TODO: If we expose ambiance and/or syntax color scheme as settings will need to fix this, maybe by recalculating\n;; at the time the setting is changed/loaded.\n(def custom-config\n  (merge initial-config (base-config) #_bright-ambiance-config))\n\n(defn header [value config & [{:keys [render-paths?]}]]\n  (with-cljs-devtools-prefs\n    (if render-paths?\n      (merge custom-config {:render-path-annotations       true})\n      custom-config)\n    (devtools.formatters.core/header-api-call value config)))\n\n(defn body [value config & [{:keys [render-paths?]}]]\n  (with-cljs-devtools-prefs\n    (if render-paths?\n      (merge custom-config {:render-path-annotations       true})\n      custom-config)\n    (devtools.formatters.core/body-api-call value config)))\n\n(defn has-body [value config]\n  (with-cljs-devtools-prefs custom-config\n    (devtools.formatters.core/has-body-api-call value config)))\n\n(defn get-object [jsonml]\n  (.-object (get jsonml 1)))\n\n(defn get-config [jsonml]\n  (.-config (get jsonml 1)))\n\n(declare jsonml->hiccup)\n(declare jsonml->hiccup-with-path-annotations)\n\n(defclass jsonml-style\n  []\n  {:display          :inline\n   :flex-direction   :row\n   :background-color (styles/syntax-color :bright :cljs-devtools :signature-background)}\n  [\"> span\"\n   {:vertical-align :text-top}]\n  [:li\n   {:margin 0}])\n\n(defclass toggle-style\n  [ambiance]\n  {:cursor      :pointer\n   :display     :inline\n   :align-self  :center\n   #_#_:line-height 1}\n  [:button\n   {:cursor :pointer\n    :background :none\n    :border :none}]\n  [:svg :path\n   {:fill (if (= ambiance :bright) styles/nord0 styles/nord5)}])\n\n(defn data-structure [_ path]\n  (let [expanded? (rf/subscribe [::app-db.subs/node-expanded? path])]\n    (fn [jsonml path]\n      [:span\n       {:class (jsonml-style)}\n       [:span {:class    (toggle-style :bright)\n               :on-click (fn [e]\n                           (.stopPropagation e)\n                           (rf/dispatch [::app-db.events/toggle-expansion path]))}\n        [:button\n         (if @expanded?\n           [material/arrow-drop-down]\n           [material/arrow-right])]]\n       (if (and @expanded? (has-body (get-object jsonml) (get-config jsonml)))\n         (jsonml->hiccup\n          (body\n           (get-object jsonml)\n           (get-config jsonml))\n          (conj path :body))\n         (jsonml->hiccup\n          (header\n           (get-object jsonml)\n           (get-config jsonml))\n          (conj path :header)))])))\n\n(defn data-structure-with-path-annotations [_ _ _ _]\n  (let [render-paths? (rf/subscribe [::app-db.subs/data-path-annotations?])]\n    (fn [jsonml indexed-path devtools-path {:keys [expand? path-id] :as opts}]\n      (let [node-expanded?  @(rf/subscribe [::app-db.subs/node-expanded? indexed-path])\n            show-body? (and (has-body (get-object jsonml) (get-config jsonml))\n                            (or (and node-expanded? (not (nil? expand?)))\n                                expand?))]\n        [:span\n         {:class (jsonml-style)}\n         [:span {:class    (toggle-style :bright)\n                 :on-click #(do (rf/dispatch [::app-db.events/toggle-expansion indexed-path])\n                                (rf/dispatch [::app-db.events/expand {:id path-id :expand? false}]))}\n          [:button\n           (if show-body?\n             [material/arrow-drop-down]\n             [material/arrow-right])]]\n         (if show-body?\n           (jsonml->hiccup-with-path-annotations\n            (body\n             (get-object jsonml)\n             (get-config jsonml)\n             {:render-paths? @render-paths?})\n            (conj indexed-path :body)\n            devtools-path\n            opts)\n           (jsonml->hiccup-with-path-annotations\n            (header\n             (get-object jsonml)\n             (get-config jsonml))\n            (conj indexed-path :header)\n            devtools-path\n            opts))]))))\n\n(defn string->css\n  \"This function converts jsonml css-strings to valid css maps for hiccup.\n  Example: 'margin-left:0px;min-height:14px;' converts to\n           {:margin-left '0px', :min-height '14px'}\"\n  [css-string]\n  (->> (string/split css-string #\";\")\n       (map #(string/split % #\":\"))\n       (reduce (fn [acc [property value]]\n                 (assoc acc (keyword property) value)) {})))\n\n(defn jsonml->hiccup\n  \"JSONML is the format used by Chrome's Custom Object Formatters.\n  The spec is at https://docs.google.com/document/d/1FTascZXT9cxfetuPRT2eXPQKXui4nWFivUnS_335T3U/preview.\n\n  JSONML is pretty much Hiccup over JSON. Chrome's implementation of this can\n  be found at https://cs.chromium.org/chromium/src/third_party/WebKit/Source/devtools/front_end/object_ui/CustomPreviewComponent.js\n  \"\n  [jsonml path]\n  (if (number? jsonml)\n    jsonml\n    (let [[tag-name attributes & children] jsonml\n          tagnames #{\"div\" \"span\" \"ol\" \"li\" \"table\" \"tr\" \"td\"}]\n      (cond\n        (contains? tagnames tag-name) (into\n                                       [(keyword tag-name) {:style (-> (js->clj attributes)\n                                                                       (get \"style\")\n                                                                       (string->css))}]\n                                       (map-indexed (fn [i child] (jsonml->hiccup child (conj path i))))\n                                       children)\n\n        (= tag-name \"object\") [data-structure jsonml path]\n        (= tag-name \"annotation\") (into [:span {}]\n                                        (map-indexed (fn [i child] (jsonml->hiccup child (conj path i))))\n                                        children)\n        :else jsonml))))\n\n(defn jsonml->hiccup-with-path-annotations\n  \"JSONML is the format used by Chrome's Custom Object Formatters.\n  The spec is at https://docs.google.com/document/d/1FTascZXT9cxfetuPRT2eXPQKXui4nWFivUnS_335T3U/preview.\n\n  JSONML is pretty much Hiccup over JSON. Chrome's implementation of this can be found at\n  https://cs.chromium.org/chromium/src/third_party/WebKit/Source/devtools/front_end/object_ui/CustomPreviewComponent.js\n\"\n  [jsonml indexed-path devtools-path {:keys [click-listener middle-click-listener menu-listener]\n                                      :as   opts}]\n  ;; indexed-path is updated on every html element such as `tagnames`\n  ;; while devtools-path is updated only when we encounter an element that contains the `:path` attribute.\n  (if (number? jsonml)\n    jsonml\n    (let [[tag-name attributes & children] jsonml\n          tagnames                         #{\"div\" \"span\" \"ol\" \"li\" \"table\" \"tr\" \"td\"}]\n      (cond\n        (contains? tagnames\n                   tag-name) (into [(keyword tag-name) {:style (-> (js->clj attributes)\n                                                                   (get \"style\")\n                                                                   (string->css))}]\n                                   (map-indexed (fn [i child] (jsonml->hiccup-with-path-annotations\n                                                               child\n                                                               (conj indexed-path i)\n                                                               devtools-path\n                                                               opts)))\n                                   children)\n\n        (= tag-name\n           \"object\")     [data-structure-with-path-annotations jsonml indexed-path devtools-path opts]\n        (= tag-name\n           \"annotation\") (let [;;index of the current element in the immediate parent\n                               jsonml-path-index      (-> attributes\n                                                          (js->clj :keywordize-keys true)\n                                                          :path\n                                                          last)\n                               ;; path of the current visible db from root node view\n                               absolute-devtools-path (if jsonml-path-index\n                                                        (conj devtools-path jsonml-path-index)\n                                                        devtools-path)\n                               element-id             (str (random-uuid))\n                               child-element          (nth children 0 nil)\n                               child-value            (when (instance? js/Array child-element)\n                                                        (nth child-element 2 nil))\n                               child-component        (fn [i child] (jsonml->hiccup-with-path-annotations\n                                                                     child\n                                                                     (conj indexed-path i)\n                                                                     absolute-devtools-path\n                                                                     opts))]\n                           (into [:span (if-not (or (string? child-value)\n                                                    (number? child-value)\n                                                    (keyword? child-value))\n                                          {}\n                                          {:id        element-id\n                                           :ref       #(when %\n                                                         (doto %\n                                                           (goog.events/listen \"contextmenu\" menu-listener)\n                                                           (goog.events/listen \"dblclick\" click-listener)\n                                                           (goog.events/listen \"mousedown\" middle-click-listener)))\n                                           :class     \"path-annotation\"\n                                           :data-path (str absolute-devtools-path)})]\n                                 (map-indexed child-component children)))\n        :else            jsonml))))\n\n(defn prn-str-render?\n  [data]\n  (or (string? data)\n      (instance? js/RegExp data)\n      (number? data)\n      (boolean? data)\n      (nil? data)))\n\n(defclass prn-str-render-style\n  []\n  {:background-color (styles/syntax-color :bright :cljs-devtools :signature-background)\n   :color            (styles/syntax-color :bright :cljs-devtools :bool)})\n\n(defn prn-str-render\n  [data]\n  [:div {:class (prn-str-render-style)}\n   (prn-str data)])\n\n(defn simple-render\n  [data path & [{:keys [class sort?]}]]\n  (let [ns->alias             @(rf/subscribe [::settings.subs/ns->alias])\n        alias?                (and (seq ns->alias)\n                                   @(rf/subscribe [::settings.subs/alias-namespaces?]))\n        data                  (cond-> data\n                                alias? (tools.datafy/alias-namespaces ns->alias)\n                                sort? tools.datafy/deep-sorted-map)]\n    [rc/box\n     :size  \"1\"\n     :class (str (jsonml-style) \" \" class)\n     :child\n     (if (prn-str-render? data)\n       (prn-str-render data)\n       (jsonml->hiccup (header data nil) (conj path 0)))]))\n\n(defn simple-render-with-path-annotations\n  [{:keys [data path path-id sort?] :as opts}]\n  (let [render-paths?         @(rf/subscribe [::app-db.subs/data-path-annotations?])\n        open-new-inspectors?  @(rf/subscribe [::settings.subs/open-new-inspectors?])\n        ns->alias             @(rf/subscribe [::settings.subs/ns->alias])\n        alias?                (and (seq ns->alias)\n                                   @(rf/subscribe [::settings.subs/alias-namespaces?]))\n        data                  (cond-> data\n                                alias? (tools.datafy/alias-namespaces ns->alias)\n                                sort? tools.datafy/deep-sorted-map)]\n    [rc/box\n     :size \"1\"\n     :class (jsonml-style)\n     :child\n     (if (prn-str-render? data)\n       (prn-str-render data)\n       (jsonml->hiccup-with-path-annotations\n        (header data nil {:render-paths? render-paths?})\n        [\"app-db-path\" path]\n        (or path [])\n        (merge\n         opts\n         {:click-listener        #(when-let [path (some-> % .-target .-parentElement (.getAttribute \"data-path\"))]\n                                    (when (= (.-button %) 0)\n                                      (rf/dispatch [::app-db.events/update-path {:id path-id\n                                                                                 :path-str path}])))\n          :middle-click-listener #(when-let [target (some-> % .-target .-parentElement)]\n                                    (let [path (.getAttribute target \"data-path\")\n                                          btn  (.-button %)]\n                                      (.preventDefault %)\n                                      (when (= btn 1)\n                                        (rf/dispatch\n                                         [::app-db.events/create-path-and-skip-to path open-new-inspectors?]))))\n          :menu-listener         #(do (.preventDefault %)\n                                      (rf/dispatch\n                                       [::app-db.events/open-popup-menu\n                                        {:data data\n                                         :mouse-position [(.-clientX %) (.-clientY %)]\n                                         :path path\n                                         :data-path (some-> %\n                                                            .-target\n                                                            .-parentElement\n                                                            (.getAttribute \"data-path\")\n                                                            reader.edn/read-string-maybe)}]))})))]))\n"],"x_google_ignoreList":[0]}