shadow$provide.module$node_modules$$supabase$auth_js$dist$main$lib$local_storage = function(global, require, module, exports) {
  Object.defineProperty(exports, "__esModule", {value:!0});
  exports.memoryLocalStorageAdapter = exports.localStorageAdapter = void 0;
  const helpers_1 = require("module$node_modules$$supabase$auth_js$dist$main$lib$helpers");
  exports.localStorageAdapter = {getItem:key => (0,helpers_1.supportsLocalStorage)() ? globalThis.localStorage.getItem(key) : null, setItem:(key, value) => {
    (0,helpers_1.supportsLocalStorage)() && globalThis.localStorage.setItem(key, value);
  }, removeItem:key => {
    (0,helpers_1.supportsLocalStorage)() && globalThis.localStorage.removeItem(key);
  }};
  exports.memoryLocalStorageAdapter = function(store = {}) {
    return {getItem:key => store[key] || null, setItem:(key, value) => {
      store[key] = value;
    }, removeItem:key => {
      delete store[key];
    }};
  };
};

//# sourceMappingURL=module$node_modules$$supabase$auth_js$dist$main$lib$local_storage.js.map
