{"version":3,"sources":["day8/re_frame_10x/inlined_deps/reagent/v1v2v0/reagent/dom/client.cljs"],"mappings":";;;;;;AASA;;;+EAAA,/EAAMA,sKAEHC;AAFH,AAGE,OAACC,gDAA4BD;;AAE/B;;;2EAAA,3EAAME,8JAEHC;AAFH,AAGE,OAAUA;;AAEZ,gFAAA,hFAAOC,wKAAkBC;AAAzB,AAGE,IAAMC,KAAG,sGAAA,tGAACC,6FAASF;AAAnB,AACE,AAACG,0CAAgB;AAAA,AACE,IAAAC,4CAAUE;IAAVD,4CAAA;AAAA,AAAA,6FAAAA,5FAAUC;;AAAV,IAAA,AACE,AAACC;;AACDC;UAFF,AAAA,6FAAAJ,5FAAUE;;;AAG7B,IAAAG,4CAAUH;IAAVI,4CAAA;AAAA,AAAA,6FAAAA,5FAAUJ;;AAAV,IAAA,AACE,QAACL,mCAAAA,qCAAAA;UADH,AAAA,6FAAAQ,5FAAUH;;AAGd,AAAA;;;;0EAAA,kFAAAK,5JAAME;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,sGAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,sGAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAC,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,wGAAA,xGAAMD,mHAGFf,KAAKG;AAHT,AAIG,OAACc,sGAAOjB,KAAKG,GAAGe;;;AAJnB,CAAA,wGAAA,xGAAMH,mHAKFf,KAAKG,GAAGgB;AALZ,AAMG,IAGMC,OAAK;AAAA,AAAO,OAACC,gFAAaF,SAAShB;;AAHzC,AAIE,OAASH,YAAK,4HAAA,5HAACsB,8CAAoBrB,wFAAwBmB;;;AAVhE,CAAA,kGAAA,lGAAML;;AAAN,AAYA,AAAA,gFAAA,wFAAAF,xKAAMW;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,4GAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,4GAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAR,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,8GAAA,9GAAMQ,yHACF3B,UAAUM;AADd,AAEG,gIAAA,zHAAC0B,4GAAahC,UAAUM;;;AAF3B,CAAA,8GAAA,wBAAAsB,tIAAMD,yHAGF3B,UAAUM;AAHd,AAAA,IAAAuB,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;eAAA,AAAAE,4CAAAF,eAAA,tEAGyBP,mIACOD;2BAJhC,AAAAU,4CAAAF,eAAA,lFAGkCI;wBAHlC,AAAAF,4CAAAF,eAAA,/EAGuDK;AAHvD,AAKG,IAAMX,OAAK;AAAA,AAAO,OAACC,gFAAaF,SAAShB;;AAAzC,AACE,OAAC6B,iDAA6BnC,UAAU,4HAAA,5HAACyB,8CAAoBrB,wFAAwBmB;;;AAN1F,CAAA,wGAAA,xGAAMI;;AAAN","names":["day8.re-frame-10x.inlined-deps.reagent.v1v2v0.reagent.dom.client/create-root","container","js/module$node_modules$react_dom$client.createRoot","day8.re-frame-10x.inlined-deps.reagent.v1v2v0.reagent.dom.client/unmount","root","day8.re-frame-10x.inlined-deps.reagent.v1v2v0.reagent.dom.client/reagent-root","js-props","el","day8.re_frame_10x.inlined_deps.reagent.v1v2v0.reagent.dom.client.goog$module$goog$object.get","js/module$node_modules$react$index.useEffect","*always-update*-orig-val__79747","*always-update*-temp-val__79748","day8.re-frame-10x.inlined-deps.reagent.v1v2v0.reagent.impl.util/*always-update*","day8.re-frame-10x.inlined-deps.reagent.v1v2v0.reagent.impl.batching/flush-after-render","js/undefined","*always-update*-orig-val__79749","*always-update*-temp-val__79750","var_args","G__79754","day8.re-frame-10x.inlined-deps.reagent.v1v2v0.reagent.dom.client/render","js/Error","day8.re_frame_10x.inlined_deps.reagent.v1v2v0.reagent.dom.client.render","day8.re-frame-10x.inlined-deps.reagent.v1v2v0.reagent.impl.template/*current-default-compiler*","compiler","comp","day8.re-frame-10x.inlined-deps.reagent.v1v2v0.reagent.impl.protocols/as-element","js/module$node_modules$react$index.createElement","G__79758","day8.re-frame-10x.inlined-deps.reagent.v1v2v0.reagent.dom.client/hydrate-root","p__79760","map__79761","cljs.core/--destructure-map","cljs.core.get","day8.re_frame_10x.inlined_deps.reagent.v1v2v0.reagent.dom.client.hydrate_root","on-recoverable-error","identifier-prefix","js/module$node_modules$react_dom$client.hydrateRoot"],"sourcesContent":["(ns ^{:mranderson/inlined true} day8.re-frame-10x.inlined-deps.reagent.v1v2v0.reagent.dom.client\n  (:require [\"react\" :as react]\n            [\"react-dom/client\" :as react-dom-client]\n            [day8.re-frame-10x.inlined-deps.reagent.v1v2v0.reagent.impl.batching :as batch]\n            [day8.re-frame-10x.inlined-deps.reagent.v1v2v0.reagent.impl.protocols :as p]\n            [day8.re-frame-10x.inlined-deps.reagent.v1v2v0.reagent.impl.template :as tmpl]\n            [day8.re-frame-10x.inlined-deps.reagent.v1v2v0.reagent.impl.util :as util]\n            [goog.object :as gobj]))\n\n(defn create-root\n  \"Create a React Root connected to given container DOM element.\"\n  [container]\n  (react-dom-client/createRoot container))\n\n(defn unmount\n  \"Unmount the given React Root\"\n  [root]\n  (.unmount root))\n\n(defn- reagent-root [^js js-props]\n  ;; This will flush initial r/after-render callbacks.\n  ;; Later that queue will be flushed on Reagent render-loop.\n  (let [el (gobj/get js-props \"comp\")]\n    (react/useEffect (fn []\n                       (binding [util/*always-update* false]\n                         (batch/flush-after-render)\n                         js/undefined)))\n    (binding [util/*always-update* true]\n      (el))))\n\n(defn render\n  \"Render the given Reagent element (i.e. Hiccup data)\n  into a given React root.\"\n  ([root el]\n   (render root el tmpl/*current-default-compiler*))\n  ([root el compiler]\n   (let [;; Not sure if this should be fn here?\n         ;; At least this moves the as-element call to the reagent-root\n         ;; render, and handles the *always-update* binding correctly?\n         comp (fn [] (p/as-element compiler el))]\n     (.render root (react/createElement reagent-root #js {:comp comp})))))\n\n(defn hydrate-root\n  ([container el]\n   (hydrate-root container el nil))\n  ([container el {:keys [compiler on-recoverable-error identifier-prefix]\n                  :or {compiler tmpl/*current-default-compiler*}}]\n   (let [comp (fn [] (p/as-element compiler el))]\n     (react-dom-client/hydrateRoot container (react/createElement reagent-root #js {:comp comp})))))\n"],"x_google_ignoreList":[0]}