{
"version":3,
"file":"module$node_modules$buffer$index.js",
"lineCount":1056,
"mappings":"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",
"sources":["node_modules/buffer/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$buffer$index\"] = function(global,require,module,exports) {\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","typedArraySupport","arr","Uint8Array","__proto__","prototype","foo","subarray","byteLength","e","createBuffer","that","length","Buffer","TYPED_ARRAY_SUPPORT","RangeError","arg","encodingOrOffset","Error","allocUnsafe","from","value","TypeError","ArrayBuffer","array","undefined","fromArrayLike","encoding","isEncoding","actual","write","slice","fromObject","assertSize","size","checked","i","obj","isBuffer","len","copy","buffer","val","type","isArray","data","toString","string","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","start","end","buf","out","n","utf8Slice","ret","Math","min","String","fromCharCode","base64","fromByteArray","bytes","res","swap","b","m","bidirectionalIndexOf","byteOffset","dir","isNaN","arrayIndexOf","indexOf","call","lastIndexOf","read","indexSize","readUInt16BE","arrLength","valLength","foundIndex","found","j","firstByte","codePoint","bytesPerSequence","secondByte","tempCodePoint","thirdByte","fourthByte","push","MAX_ARGUMENTS_LENGTH","apply","checkOffset","offset","ext","checkInt","max","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","units","Infinity","leadSurrogate","charCodeAt","asciiToBytes","str","byteArray","toByteArray","replace","trim","INVALID_BASE64_RE","blitBuffer","src","dst","SlowBuffer","alloc","INSPECT_MAX_BYTES","kMaxLength","poolSize","_augment","Buffer._augment","Buffer.from","Symbol","species","Object","defineProperty","configurable","Buffer.alloc","fill","Buffer.allocUnsafe","allocUnsafeSlow","Buffer.allocUnsafeSlow","Buffer.isBuffer","_isBuffer","compare","Buffer.compare","a","x","y","Buffer.isEncoding","concat","Buffer.concat","list","pos","swap16","Buffer.prototype.swap16","swap32","Buffer.prototype.swap32","swap64","Buffer.prototype.swap64","Buffer.prototype.toString","arguments","equals","Buffer.prototype.equals","inspect","Buffer.prototype.inspect","match","join","Buffer.prototype.compare","target","thisStart","thisEnd","thisCopy","targetCopy","includes","Buffer.prototype.includes","Buffer.prototype.indexOf","Buffer.prototype.lastIndexOf","Buffer.prototype.write","isFinite","remaining","Number","strLen","parsed","parseInt","substr","c","hi","lo","toJSON","Buffer.prototype.toJSON","Array","_arr","Buffer.prototype.slice","newBuf","sliceLen","readUIntLE","Buffer.prototype.readUIntLE","mul","readUIntBE","Buffer.prototype.readUIntBE","readUInt8","Buffer.prototype.readUInt8","readUInt16LE","Buffer.prototype.readUInt16LE","Buffer.prototype.readUInt16BE","readUInt32LE","Buffer.prototype.readUInt32LE","readUInt32BE","Buffer.prototype.readUInt32BE","readIntLE","Buffer.prototype.readIntLE","pow","readIntBE","Buffer.prototype.readIntBE","readInt8","Buffer.prototype.readInt8","readInt16LE","Buffer.prototype.readInt16LE","readInt16BE","Buffer.prototype.readInt16BE","readInt32LE","Buffer.prototype.readInt32LE","readInt32BE","Buffer.prototype.readInt32BE","readFloatLE","Buffer.prototype.readFloatLE","readFloatBE","Buffer.prototype.readFloatBE","readDoubleLE","Buffer.prototype.readDoubleLE","readDoubleBE","Buffer.prototype.readDoubleBE","writeUIntLE","Buffer.prototype.writeUIntLE","writeUIntBE","Buffer.prototype.writeUIntBE","writeUInt8","Buffer.prototype.writeUInt8","floor","writeUInt16LE","Buffer.prototype.writeUInt16LE","writeUInt16BE","Buffer.prototype.writeUInt16BE","writeUInt32LE","Buffer.prototype.writeUInt32LE","writeUInt32BE","Buffer.prototype.writeUInt32BE","writeIntLE","Buffer.prototype.writeIntLE","limit","sub","writeIntBE","Buffer.prototype.writeIntBE","writeInt8","Buffer.prototype.writeInt8","writeInt16LE","Buffer.prototype.writeInt16LE","writeInt16BE","Buffer.prototype.writeInt16BE","writeInt32LE","Buffer.prototype.writeInt32LE","writeInt32BE","Buffer.prototype.writeInt32BE","writeFloatLE","Buffer.prototype.writeFloatLE","writeFloatBE","Buffer.prototype.writeFloatBE","writeDoubleLE","Buffer.prototype.writeDoubleLE","writeDoubleBE","Buffer.prototype.writeDoubleBE","Buffer.prototype.copy","targetStart","set","Buffer.prototype.fill","code"]
}
