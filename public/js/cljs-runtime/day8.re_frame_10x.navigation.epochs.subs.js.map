{"version":3,"sources":["day8/re_frame_10x/navigation/epochs/subs.cljs"],"mappings":"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","names":["day8.re_frame_10x.inlined_deps.re_frame.v1v3v0.re_frame.core.reg_sub","p__64239","map__64240","cljs.core/--destructure-map","cljs.core.get","epochs","_","p__64241","map__64242","filter-str","p__64244","map__64246","matches-by-id","p__64254","vec__64259","cljs.core.nth","cljs.core.map","cljs.core.juxt","cljs.core/key","cljs.core.comp","day8.re-frame-10x.tools.metamorphic/matched-event","cljs.core/val","cljs.core.sort_by","cljs.core/first","cljs.core/>","cljs.core/seq","cljs.core.filter","match","reg-ex","e64276","cljs.core/re-pattern","js/Error","e","js/console.error","match-string","cljs.core/second","cljs.core/re-find","p__64282","map__64283","selected-epoch-id","p__64284","map__64285","match-ids","p__64289","map__64290","matches","p__64295","vec__64296","cljs.core/last","p__64302","map__64303","match-info","trace","cljs.core.get_in","cljs.core/count","p__64312","vec__64313","p__64319","vec__64320","day8.re-frame-10x.tools.coll/last-in-vec"],"sourcesContent":["(ns day8.re-frame-10x.navigation.epochs.subs\n  (:require\n   [day8.re-frame-10x.inlined-deps.re-frame.v1v3v0.re-frame.core :as rf]\n   [day8.re-frame-10x.tools.metamorphic                          :as metam]\n   [day8.re-frame-10x.tools.coll                                 :as tools.coll]))\n\n(rf/reg-sub\n ::root\n (fn [{:keys [epochs]} _]\n   epochs))\n\n(rf/reg-sub\n ::filter-str\n :<- [::root]\n (fn [{:keys [filter-str]} _]\n   filter-str))\n\n(rf/reg-sub\n ::matches-by-id\n :<- [::root]\n (fn [{:keys [matches-by-id]} _]\n   matches-by-id))\n\n(rf/reg-sub\n ::events-by-id\n :<- [::matches-by-id]\n :<- [::filter-str]\n (fn [[matches-by-id filter-str] _]\n   (let [matches-by-id (map (juxt key (comp :event :tags metam/matched-event :match-info val))\n                            matches-by-id)]\n     (sort-by first > (if (seq filter-str)\n                        (filter (fn [match]\n                                  (let [reg-ex       (try\n                                                       (re-pattern filter-str)\n                                                       (catch js/Error e\n                                                         (js/console.error e)\n                                                         #\"\"))\n                                        match-string (-> match second str)]\n                                    (re-find reg-ex match-string)))\n                                matches-by-id)\n                        matches-by-id)))))\n\n(rf/reg-sub\n ::selected-epoch-id\n :<- [::root]\n (fn [{:keys [selected-epoch-id]} _]\n   selected-epoch-id))\n\n(rf/reg-sub\n ::match-ids\n :<- [::root]\n (fn [{:keys [match-ids]} _]\n   match-ids))\n\n(rf/reg-sub\n ::matches\n :<- [::root]\n (fn [{:keys [matches]} _]\n   matches))\n\n(rf/reg-sub\n ::selected-match-state\n :<- [::match-ids]\n :<- [::matches]\n :<- [::matches-by-id]\n :<- [::selected-epoch-id]\n (fn [[match-ids matches matches-by-id selected-epoch-id] _]\n   (cond\n     (nil? selected-epoch-id) (last matches)\n     (< selected-epoch-id (first match-ids)) (first matches)\n      ;; This case seems impossible, but can happen if the user filters out\n      ;; an event that they are 'on'.\n     (> selected-epoch-id (last match-ids)) (last matches)\n     :else (get matches-by-id selected-epoch-id))))\n\n(rf/reg-sub\n ::selected-match\n :<- [::selected-match-state]\n (fn [{:keys [match-info]} _]\n   match-info))\n\n(rf/reg-sub\n ::selected-event-trace\n :<- [::selected-match]\n (fn [match _]\n   (metam/matched-event match)))\n\n(rf/reg-sub\n ::selected-event\n :<- [::selected-event-trace]\n (fn [trace _]\n   (get-in trace [:tags :event])))\n\n(rf/reg-sub\n ::number-of-matches\n :<- [::matches]\n (fn [matches _]\n   (count matches)))\n\n(rf/reg-sub\n ::beginning-trace-id\n :<- [::selected-match]\n (fn [match _]\n   (:id (first match))))\n\n(rf/reg-sub\n ::ending-trace-id\n :<- [::selected-match]\n (fn [match _]\n   (:id (last match))))\n\n(rf/reg-sub\n ::older-epochs-available?\n :<- [::selected-epoch-id]\n :<- [::match-ids]\n (fn [[selected-epoch-id match-ids] _]\n   (and (< 1 (count match-ids))\n        (or (nil? selected-epoch-id)\n            (> selected-epoch-id (nth match-ids 0))))))\n\n(rf/reg-sub\n ::newer-epochs-available?\n :<- [::selected-epoch-id]\n :<- [::match-ids]\n (fn [[selected-epoch-id match-ids] _]\n   (and (< 1 (count match-ids))\n        (some? selected-epoch-id)\n        (< selected-epoch-id (tools.coll/last-in-vec match-ids)))))\n\n"],"x_google_ignoreList":[0]}