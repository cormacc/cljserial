{"version":3,"sources":["statecharts/service.cljc"],"mappings":"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","names":["statecharts.service/attach-fsm-scheduler","fsm","store","clock","cljs.core.assoc","statecharts.scheduler/make-store-scheduler","statecharts$service$IService$start$dyn","x__5350__auto__","m__5351__auto__","statecharts.service/start","goog/typeOf","m__5349__auto__","cljs.core/missing-protocol","statecharts$service$IService$send$dyn","statecharts.service/send","statecharts$service$IService$state$dyn","statecharts.service/state","statecharts$service$IService$add_listener$dyn","statecharts.service/add-listener","statecharts$service$IService$reload$dyn","statecharts.service/reload","statecharts.service/IService","this","event","id","listener","statecharts.service/wrap-listener","f","_","old","new","cljs.core/PROTOCOL_SENTINEL","this__5287__auto__","writer__5288__auto__","opt__5289__auto__","cljs.core/-write","statecharts.service/Service","statecharts.service/->Service","running","transition-opts","statecharts.store/initialize","statecharts.store/get-state","old-state","statecharts.store/transition","cljs.core/add-watch","fsm_","statecharts.service/default-opts","statecharts.clock/wall-clock","var_args","G__96035","statecharts.service/service","js/Error","statecharts.service.service","opts","map__96046","cljs.core/--destructure-map","cljs.core.get","cljs.core.merge","statecharts.store/single-store"],"sourcesContent":["(ns statecharts.service\n  (:require [statecharts.clock :as clock]\n            [statecharts.store :as store]\n            [statecharts.scheduler :as scheduler])\n  (:refer-clojure :exclude [send]))\n\n(defn attach-fsm-scheduler [fsm store clock]\n  (assoc fsm :scheduler (scheduler/make-store-scheduler store clock)))\n\n(defprotocol IService\n  (start [this])\n  (send [this event])\n  (state [this])\n  (add-listener [this id listener])\n  (reload [this fsm]))\n\n(defn wrap-listener [f]\n  (fn [_ _ old new]\n    (f old new)))\n\n(deftype Service [^:volatile-mutable fsm\n                  store\n                  ^:volatile-mutable running\n                  clock\n                  transition-opts]\n  IService\n  (start [this]\n    (when-not running\n      (set! running true)\n      (store/initialize store fsm nil)))\n  (state [this]\n    (store/get-state store nil))\n  (send [_ event]\n    (let [old-state (store/get-state store nil)]\n      (store/transition store fsm old-state event transition-opts))\n    (store/get-state store nil))\n  (add-listener [_ id listener]\n    ;; Kind of gross to reach down into the store's internals. Then again, the fact\n    ;; that the store is a single-store is an implementation detail known only to\n    ;; this namespace.\n    (add-watch (:state* store) id (wrap-listener listener)))\n  (reload [this fsm_]\n    (set! fsm (attach-fsm-scheduler fsm_ store clock))))\n\n(defn default-opts []\n  {:clock (clock/wall-clock)})\n\n(defn service\n  ([fsm]\n   (service fsm nil))\n  ([fsm opts]\n   (let [{:keys [clock\n                 transition-opts]} (merge (default-opts) opts)\n         store (store/single-store)]\n     (Service. (attach-fsm-scheduler fsm store clock)\n               ;; state store\n               store\n               ;; running\n               false\n               clock\n               transition-opts))))\n"],"x_google_ignoreList":[0]}