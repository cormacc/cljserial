{"version":3,"sources":["stack/utils/term.cljs"],"mappings":";AAIA,6BAAA,7BAAKA;AACL,gCAAA,mFAAA,qDAAA,sDAAA,9NAAKC;AAGL,6BAAA,mFAAA,qDAAA,2DAAA,hOAAKC;AAEL,6BAAA,mFAAA,mDAAA,mFAAA,4GAAA,mFAAA,uDAAA,5eAAKC,4TAC2BF;AAGhC,yBAAA,mFAAA,mDAAA,mFAAA,iGAAA,mFAAA,mGAAA,mFAAA,5lBAAKG,gTACmBJ,sLACCE,wLACAC;AAEzB,0BAAA,mFAAA,7GAAKE,sKAAgBL,2BAAUI;AAO/B,4BAAA,mFAAA,mDAAA,mFAAA,iEAAA,kEAAA,mFAAA,3cAAKE,ogBAEmBD;AAGxB,sCAAA,tCAAME;AAAN,AAAA,kDAAA,iEAAA,OAAA,yDACqC,AAACC","names":["stack.utils.term/Timestamp","stack.utils.term/ByteEncoding","stack.utils.term/EventType","stack.utils.term/EventData","stack.utils.term/Event","stack.utils.term/Events","stack.utils.term/Terminal","stack.utils.term/new-terminal-store","cljs.core/sorted-map"],"sourcesContent":["(ns stack.utils.term\n  \"Serial/terminal communications schema and utilities\")\n\n;; == Schema =====================================================================\n(def Timestamp :int)\n(def ByteEncoding [:enum :text :binary])\n\n;; TODO: Replace Direction with EventType\n(def EventType [:enum :command :response])\n;; (def Direction [:enum :tx :rx])\n(def EventData [:map\n                [:byte-encoding ByteEncoding]\n                [:bytes :string]])\n\n(def Event [:map\n            [:timestamp Timestamp]\n            [:event-type EventType]\n            [:event-data EventData]])\n\n(def Events [:map-of Timestamp Event])\n\n\n;; (def Exchange [:map\n;;                [:command EventData]\n;;                [:response EventData]])\n\n(def Terminal [:map\n               [:connection :string]\n               [:events Events]])\n\n;; TODO: This should probably done using defaults and a malli generator?\n(defn new-terminal-store [] {:connection \"none\"\n                             :events (sorted-map)})\n\n;; ;; TODO: These and the command history at app db level are probably redundant. Eliminate?\n;; (def ExchangeHistory\n;;   [:map-of Timestamp Exchange])\n\n;; (defn new-history-store [] (sorted-map))\n"]}